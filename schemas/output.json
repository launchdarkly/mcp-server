{
  "openapi": "3.0.3",
  "info": {
    "title": "LaunchDarkly REST API",
    "description": "This documentation describes LaunchDarkly's REST API.\n\nTo access the complete OpenAPI spec directly, use [Get OpenAPI spec](https://launchdarkly.com/docs/api/other/get-openapi-spec).\n\n## Authentication\n\nLaunchDarkly's REST API uses the HTTPS protocol with a minimum TLS version of 1.2.\n\nAll REST API resources are authenticated with either [personal or service access tokens](https://launchdarkly.com/docs/home/account/api), or session cookies. Other authentication mechanisms are not supported. You can manage personal access tokens on your [**Authorization**](https://app.launchdarkly.com/settings/authorization) page in the LaunchDarkly UI.\n\nLaunchDarkly also has SDK keys, mobile keys, and client-side IDs that are used by our server-side SDKs, mobile SDKs, and JavaScript-based SDKs, respectively. **These keys cannot be used to access our REST API**. These keys are environment-specific, and can only perform read-only operations such as fetching feature flag settings.\n\n| Auth mechanism                                                                                  | Allowed resources                                                                                     | Use cases                                          |\n| ----------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------- | -------------------------------------------------- |\n| [Personal or service access tokens](https://launchdarkly.com/docs/home/account/api) | Can be customized on a per-token basis                                                                | Building scripts, custom integrations, data export. |\n| SDK keys                                                                                        | Can only access read-only resources specific to server-side SDKs. Restricted to a single environment. | Server-side SDKs                     |\n| Mobile keys                                                                                     | Can only access read-only resources specific to mobile SDKs, and only for flags marked available to mobile keys. Restricted to a single environment.           | Mobile SDKs                                        |\n| Client-side ID                                                                                  | Can only access read-only resources specific to JavaScript-based client-side SDKs, and only for flags marked available to client-side. Restricted to a single environment.           | Client-side JavaScript                             |\n\n\u003e #### Keep your access tokens and SDK keys private\n\u003e\n\u003e Access tokens should _never_ be exposed in untrusted contexts. Never put an access token in client-side JavaScript, or embed it in a mobile application. LaunchDarkly has special mobile keys that you can embed in mobile apps. If you accidentally expose an access token or SDK key, you can reset it from your [**Authorization**](https://app.launchdarkly.com/settings/authorization) page.\n\u003e\n\u003e The client-side ID is safe to embed in untrusted contexts. It's designed for use in client-side JavaScript.\n\n### Authentication using request header\n\nThe preferred way to authenticate with the API is by adding an `Authorization` header containing your access token to your requests. The value of the `Authorization` header must be your access token.\n\nManage personal access tokens from the [**Authorization**](https://app.launchdarkly.com/settings/authorization) page.\n\n### Authentication using session cookie\n\nFor testing purposes, you can make API calls directly from your web browser. If you are logged in to the LaunchDarkly application, the API will use your existing session to authenticate calls.\n\nIf you have a [role](https://launchdarkly.com/docs/home/account/built-in-roles) other than Admin, or have a [custom role](https://launchdarkly.com/docs/home/account/custom-roles) defined, you may not have permission to perform some API calls. You will receive a `401` response code in that case.\n\n\u003e ### Modifying the Origin header causes an error\n\u003e\n\u003e LaunchDarkly validates that the Origin header for any API request authenticated by a session cookie matches the expected Origin header. The expected Origin header is `https://app.launchdarkly.com`.\n\u003e\n\u003e If the Origin header does not match what's expected, LaunchDarkly returns an error. This error can prevent the LaunchDarkly app from working correctly.\n\u003e\n\u003e Any browser extension that intentionally changes the Origin header can cause this problem. For example, the `Allow-Control-Allow-Origin: *` Chrome extension changes the Origin header to `http://evil.com` and causes the app to fail.\n\u003e\n\u003e To prevent this error, do not modify your Origin header.\n\u003e\n\u003e LaunchDarkly does not require origin matching when authenticating with an access token, so this issue does not affect normal API usage.\n\n## Representations\n\nAll resources expect and return JSON response bodies. Error responses also send a JSON body. To learn more about the error format of the API, read [Errors](https://launchdarkly.com/docs/api#errors).\n\nIn practice this means that you always get a response with a `Content-Type` header set to `application/json`.\n\nIn addition, request bodies for `PATCH`, `POST`, and `PUT` requests must be encoded as JSON with a `Content-Type` header set to `application/json`.\n\n### Summary and detailed representations\n\nWhen you fetch a list of resources, the response includes only the most important attributes of each resource. This is a _summary representation_ of the resource. When you fetch an individual resource, such as a single feature flag, you receive a _detailed representation_ of the resource.\n\nThe best way to find a detailed representation is to follow links. Every summary representation includes a link to its detailed representation.\n\n### Expanding responses\n\nSometimes the detailed representation of a resource does not include all of the attributes of the resource by default. If this is the case, the request method will clearly document this and describe which attributes you can include in an expanded response.\n\nTo include the additional attributes, append the `expand` request parameter to your request and add a comma-separated list of the attributes to include. For example, when you append `?expand=members,maintainers` to the [Get team](https://launchdarkly.com/docs/api/teams/get-team) endpoint, the expanded response includes both of these attributes.\n\n### Links and addressability\n\nThe best way to navigate the API is by following links. These are attributes in representations that link to other resources. The API always uses the same format for links:\n\n- Links to other resources within the API are encapsulated in a `_links` object\n- If the resource has a corresponding link to HTML content on the site, it is stored in a special `_site` link\n\nEach link has two attributes:\n\n- An `href`, which contains the URL\n- A `type`, which describes the content type\n\nFor example, a feature resource might return the following:\n\n```json\n{\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/features\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/features/sort.order\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_site\": {\n    \"href\": \"/features/sort.order\",\n    \"type\": \"text/html\"\n  }\n}\n```\n\nFrom this, you can navigate to the parent collection of features by following the `parent` link, or navigate to the site page for the feature by following the `_site` link.\n\nCollections are always represented as a JSON object with an `items` attribute containing an array of representations. Like all other representations, collections have `_links` defined at the top level.\n\nPaginated collections include `first`, `last`, `next`, and `prev` links containing a URL with the respective set of elements in the collection.\n\n## Updates\n\nResources that accept partial updates use the `PATCH` verb. Most resources support the [JSON patch](https://launchdarkly.com/docs/api#updates-using-json-patch) format. Some resources also support the [JSON merge patch](https://launchdarkly.com/docs/api#updates-using-json-merge-patch) format, and some resources support the [semantic patch](https://launchdarkly.com/docs/api#updates-using-semantic-patch) format, which is a way to specify the modifications to perform as a set of executable instructions. Each resource supports optional [comments](https://launchdarkly.com/docs/api#updates-with-comments) that you can submit with updates. Comments appear in outgoing webhooks, the audit log, and other integrations.\n\nWhen a resource supports both JSON patch and semantic patch, we document both in the request method. However, the specific request body fields and descriptions included in our documentation only match one type of patch or the other.\n\n### Updates using JSON patch\n\n[JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) is a way to specify the modifications to perform on a resource. JSON patch uses paths and a limited set of operations to describe how to transform the current state of the resource into a new state. JSON patch documents are always arrays, where each element contains an operation, a path to the field to update, and the new value.\n\nFor example, in this feature flag representation:\n\n```json\n{\n    \"name\": \"New recommendations engine\",\n    \"key\": \"engine.enable\",\n    \"description\": \"This is the description\",\n    ...\n}\n```\nYou can change the feature flag's description with the following patch document:\n\n```json\n[{ \"op\": \"replace\", \"path\": \"/description\", \"value\": \"This is the new description\" }]\n```\n\nYou can specify multiple modifications to perform in a single request. You can also test that certain preconditions are met before applying the patch:\n\n```json\n[\n  { \"op\": \"test\", \"path\": \"/version\", \"value\": 10 },\n  { \"op\": \"replace\", \"path\": \"/description\", \"value\": \"The new description\" }\n]\n```\n\nThe above patch request tests whether the feature flag's `version` is `10`, and if so, changes the feature flag's description.\n\nAttributes that are not editable, such as a resource's `_links`, have names that start with an underscore.\n\n### Updates using JSON merge patch\n\n[JSON merge patch](https://datatracker.ietf.org/doc/html/rfc7386) is another format for specifying the modifications to perform on a resource. JSON merge patch is less expressive than JSON patch. However, in many cases it is simpler to construct a merge patch document. For example, you can change a feature flag's description with the following merge patch document:\n\n```json\n{\n  \"description\": \"New flag description\"\n}\n```\n\n### Updates using semantic patch\n\nSome resources support the semantic patch format. A semantic patch is a way to specify the modifications to perform on a resource as a set of executable instructions.\n\nSemantic patch allows you to be explicit about intent using precise, custom instructions. In many cases, you can define semantic patch instructions independently of the current state of the resource. This can be useful when defining a change that may be applied at a future date.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header.\n\nHere's how:\n\n```\nContent-Type: application/json; domain-model=launchdarkly.semanticpatch\n```\n\nIf you call a semantic patch resource without this header, you will receive a `400` response because your semantic patch will be interpreted as a JSON patch.\n\nThe body of a semantic patch request takes the following properties:\n\n* `comment` (string): (Optional) A description of the update.\n* `environmentKey` (string): (Required for some resources only) The environment key.\n* `instructions` (array): (Required) A list of actions the update should perform. Each action in the list must be an object with a `kind` property that indicates the instruction. If the instruction requires parameters, you must include those parameters as additional fields in the object. The documentation for each resource that supports semantic patch includes the available instructions and any additional parameters.\n\nFor example:\n\n```json\n{\n  \"comment\": \"optional comment\",\n  \"instructions\": [ {\"kind\": \"turnFlagOn\"} ]\n}\n```\n\nSemantic patches are not applied partially; either all of the instructions are applied or none of them are. If **any** instruction is invalid, the endpoint returns an error and will not change the resource. If all instructions are valid, the request succeeds and the resources are updated if necessary, or left unchanged if they are already in the state you request.\n\n### Updates with comments\n\nYou can submit optional comments with `PATCH` changes.\n\nTo submit a comment along with a JSON patch document, use the following format:\n\n```json\n{\n  \"comment\": \"This is a comment string\",\n  \"patch\": [{ \"op\": \"replace\", \"path\": \"/description\", \"value\": \"The new description\" }]\n}\n```\n\nTo submit a comment along with a JSON merge patch document, use the following format:\n\n```json\n{\n  \"comment\": \"This is a comment string\",\n  \"merge\": { \"description\": \"New flag description\" }\n}\n```\n\nTo submit a comment along with a semantic patch, use the following format:\n\n```json\n{\n  \"comment\": \"This is a comment string\",\n  \"instructions\": [ {\"kind\": \"turnFlagOn\"} ]\n}\n```\n\n## Errors\n\nThe API always returns errors in a common format. Here's an example:\n\n```json\n{\n  \"code\": \"invalid_request\",\n  \"message\": \"A feature with that key already exists\",\n  \"id\": \"30ce6058-87da-11e4-b116-123b93f75cba\"\n}\n```\n\nThe `code` indicates the general class of error. The `message` is a human-readable explanation of what went wrong. The `id` is a unique identifier. Use it when you're working with LaunchDarkly Support to debug a problem with a specific API call.\n\n### HTTP status error response codes\n\n| Code | Definition        | Description                                                                                       | Possible Solution                                                |\n| ---- | ----------------- | ------------------------------------------------------------------------------------------- | ---------------------------------------------------------------- |\n| 400  | Invalid request       | The request cannot be understood.                                    | Ensure JSON syntax in request body is correct.                   |\n| 401  | Invalid access token      | Requestor is unauthorized or does not have permission for this API call.                                                | Ensure your API access token is valid and has the appropriate permissions.                                     |\n| 403  | Forbidden         | Requestor does not have access to this resource.                                                | Ensure that the account member or access token has proper permissions set. |\n| 404  | Invalid resource identifier | The requested resource is not valid. | Ensure that the resource is correctly identified by ID or key. |\n| 405  | Method not allowed | The request method is not allowed on this resource. | Ensure that the HTTP verb is correct. |\n| 409  | Conflict          | The API request can not be completed because it conflicts with a concurrent API request. | Retry your request.                                              |\n| 422  | Unprocessable entity | The API request can not be completed because the update description can not be understood. | Ensure that the request body is correct for the type of patch you are using, either JSON patch or semantic patch.\n| 429  | Too many requests | Read [Rate limiting](https://launchdarkly.com/docs/api#rate-limiting).                                               | Wait and try again later.                                        |\n\n## CORS\n\nThe LaunchDarkly API supports Cross Origin Resource Sharing (CORS) for AJAX requests from any origin. If an `Origin` header is given in a request, it will be echoed as an explicitly allowed origin. Otherwise the request returns a wildcard, `Access-Control-Allow-Origin: *`. For more information on CORS, read the [CORS W3C Recommendation](http://www.w3.org/TR/cors). Example CORS headers might look like:\n\n```http\nAccess-Control-Allow-Headers: Accept, Content-Type, Content-Length, Accept-Encoding, Authorization\nAccess-Control-Allow-Methods: OPTIONS, GET, DELETE, PATCH\nAccess-Control-Allow-Origin: *\nAccess-Control-Max-Age: 300\n```\n\nYou can make authenticated CORS calls just as you would make same-origin calls, using either [token or session-based authentication](https://launchdarkly.com/docs/api#authentication). If you are using session authentication, you should set the `withCredentials` property for your `xhr` request to `true`. You should never expose your access tokens to untrusted entities.\n\n## Rate limiting\n\nWe use several rate limiting strategies to ensure the availability of our APIs. Rate-limited calls to our APIs return a `429` status code. Calls to our APIs include headers indicating the current rate limit status. The specific headers returned depend on the API route being called. The limits differ based on the route, authentication mechanism, and other factors. Routes that are not rate limited may not contain any of the headers described below.\n\n\u003e ### Rate limiting and SDKs\n\u003e\n\u003e LaunchDarkly SDKs are never rate limited and do not use the API endpoints defined here. LaunchDarkly uses a different set of approaches, including streaming/server-sent events and a global CDN, to ensure availability to the routes used by LaunchDarkly SDKs.\n\n### Global rate limits\n\nAuthenticated requests are subject to a global limit. This is the maximum number of calls that your account can make to the API per ten seconds. All service and personal access tokens on the account share this limit, so exceeding the limit with one access token will impact other tokens. Calls that are subject to global rate limits may return the headers below:\n\n| Header name                    | Description                                                                      |\n| ------------------------------ | -------------------------------------------------------------------------------- |\n| `X-Ratelimit-Global-Remaining` | The maximum number of requests the account is permitted to make per ten seconds. |\n| `X-Ratelimit-Reset`            | The time at which the current rate limit window resets in epoch milliseconds.    |\n\nWe do not publicly document the specific number of calls that can be made globally. This limit may change, and we encourage clients to program against the specification, relying on the two headers defined above, rather than hardcoding to the current limit.\n\n### Route-level rate limits\n\nSome authenticated routes have custom rate limits. These also reset every ten seconds. Any service or personal access tokens hitting the same route share this limit, so exceeding the limit with one access token may impact other tokens. Calls that are subject to route-level rate limits return the headers below:\n\n| Header name                   | Description                                                                                           |\n| ----------------------------- | ----------------------------------------------------------------------------------------------------- |\n| `X-Ratelimit-Route-Remaining` | The maximum number of requests to the current route the account is permitted to make per ten seconds. |\n| `X-Ratelimit-Reset`           | The time at which the current rate limit window resets in epoch milliseconds.                         |\n\nA _route_ represents a specific URL pattern and verb. For example, the [Delete environment](https://launchdarkly.com/docs/api/environments/delete-environment) endpoint is considered a single route, and each call to delete an environment counts against your route-level rate limit for that route.\n\nWe do not publicly document the specific number of calls that an account can make to each endpoint per ten seconds. These limits may change, and we encourage clients to program against the specification, relying on the two headers defined above, rather than hardcoding to the current limits.\n\n### IP-based rate limiting\n\nWe also employ IP-based rate limiting on some API routes. If you hit an IP-based rate limit, your API response will include a `Retry-After` header indicating how long to wait before re-trying the call. Clients must wait at least `Retry-After` seconds before making additional calls to our API, and should employ jitter and backoff strategies to avoid triggering rate limits again.\n\n## OpenAPI (Swagger) and client libraries\n\nWe have a [complete OpenAPI (Swagger) specification](https://app.launchdarkly.com/api/v2/openapi.json) for our API.\n\nWe auto-generate multiple client libraries based on our OpenAPI specification. To learn more, visit the [collection of client libraries on GitHub](https://github.com/search?q=topic%3Alaunchdarkly-api+org%3Alaunchdarkly\u0026type=Repositories). You can also use this specification to generate client libraries to interact with our REST API in your language of choice.\n\nOur OpenAPI specification is supported by several API-based tools such as Postman and Insomnia. In many cases, you can directly import our specification to explore our APIs.\n\n## Method overriding\n\nSome firewalls and HTTP clients restrict the use of verbs other than `GET` and `POST`. In those environments, our API endpoints that use `DELETE`, `PATCH`, and `PUT` verbs are inaccessible.\n\nTo avoid this issue, our API supports the `X-HTTP-Method-Override` header, allowing clients to \"tunnel\" `DELETE`, `PATCH`, and `PUT` requests using a `POST` request.\n\nFor example, to call a `PATCH` endpoint using a `POST` request, you can include `X-HTTP-Method-Override:PATCH` as a header.\n\n## Beta resources\n\nWe sometimes release new API resources in **beta** status before we release them with general availability.\n\nResources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nWe try to promote resources into general availability as quickly as possible. This happens after sufficient testing and when we're satisfied that we no longer need to make backwards-incompatible changes.\n\nWe mark beta resources with a \"Beta\" callout in our documentation, pictured below:\n\n\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\n### Using beta resources\n\nTo use a beta resource, you must include a header in the request. If you call a beta resource without this header, you receive a `403` response.\n\nUse this header:\n\n```\nLD-API-Version: beta\n```\n\n## Federal environments\n\nThe version of LaunchDarkly that is available on domains controlled by the United States government is different from the version of LaunchDarkly available to the general public. If you are an employee or contractor for a United States federal agency and use LaunchDarkly in your work, you likely use the federal instance of LaunchDarkly.\n\nIf you are working in the federal instance of LaunchDarkly, the base URI for each request is `https://app.launchdarkly.us`.\n\nTo learn more, read [LaunchDarkly in federal environments](https://launchdarkly.com/docs/home/infrastructure/federal).\n\n## Versioning\n\nWe try hard to keep our REST API backwards compatible, but we occasionally have to make backwards-incompatible changes in the process of shipping new features. These breaking changes can cause unexpected behavior if you don't prepare for them accordingly.\n\nUpdates to our REST API include support for the latest features in LaunchDarkly. We also release a new version of our REST API every time we make a breaking change. We provide simultaneous support for multiple API versions so you can migrate from your current API version to a new version at your own pace.\n\n### Setting the API version per request\n\nYou can set the API version on a specific request by sending an `LD-API-Version` header, as shown in the example below:\n\n```\nLD-API-Version: 20240415\n```\n\nThe header value is the version number of the API version you would like to request. The number for each version corresponds to the date the version was released in `yyyymmdd` format. In the example above the version `20240415` corresponds to April 15, 2024.\n\n### Setting the API version per access token\n\nWhen you create an access token, you must specify a specific version of the API to use. This ensures that integrations using this token cannot be broken by version changes.\n\nTokens created before versioning was released have their version set to `20160426`, which is the version of the API that existed before the current versioning scheme, so that they continue working the same way they did before versioning.\n\nIf you would like to upgrade your integration to use a new API version, you can explicitly set the header described above.\n\n\u003e ### Best practice: Set the header for every client or integration\n\u003e\n\u003e We recommend that you set the API version header explicitly in any client or integration you build.\n\u003e\n\u003e Only rely on the access token API version during manual testing.\n\n### API version changelog\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth\u003eVersion\u003c/th\u003e\n    \u003cth\u003eChanges\u003c/th\u003e\n    \u003cth\u003eEnd of life (EOL)\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e`20240415`\u003c/td\u003e\n    \u003ctd\u003e\n      \u003cul\u003e\u003cli\u003eChanged several endpoints from unpaginated to paginated. Use the `limit` and `offset` query parameters to page through the results.\u003c/li\u003e \u003cli\u003eChanged the [list access tokens](https://launchdarkly.com/docs/api/access-tokens/get-tokens) endpoint: \u003cul\u003e\u003cli\u003eResponse is now paginated with a default limit of `25`\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e \u003cli\u003eChanged the [list account members](https://launchdarkly.com/docs/api/account-members/get-members) endpoint: \u003cul\u003e\u003cli\u003eThe `accessCheck` filter is no longer available\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e \u003cli\u003eChanged the [list custom roles](https://launchdarkly.com/docs/api/custom-roles/get-custom-roles) endpoint: \u003cul\u003e\u003cli\u003eResponse is now paginated with a default limit of `20`\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e \u003cli\u003eChanged the [list feature flags](https://launchdarkly.com/docs/api/feature-flags/get-feature-flags) endpoint: \u003cul\u003e\u003cli\u003eResponse is now paginated with a default limit of `20`\u003c/li\u003e\u003cli\u003eThe `environments` field is now only returned if the request is filtered by environment, using the `filterEnv` query parameter\u003c/li\u003e\u003cli\u003eThe `followerId`, `hasDataExport`, `status`, `contextKindTargeted`, and `segmentTargeted` filters are no longer available\u003c/li\u003e\u003cli\u003eThe `compare` query parameter is no longer available\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e \u003cli\u003eChanged the [list segments](https://launchdarkly.com/docs/api/segments/get-segments) endpoint: \u003cul\u003e\u003cli\u003eResponse is now paginated with a default limit of `20`\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e \u003cli\u003eChanged the [list teams](https://launchdarkly.com/docs/api/teams/get-teams) endpoint: \u003cul\u003e\u003cli\u003eThe `expand` parameter no longer supports including `projects` or `roles`\u003c/li\u003e\u003cli\u003eIn paginated results, the maximum page size is now 100\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e \u003cli\u003eChanged the [get workflows](https://launchdarkly.com/docs/api/workflows/get-workflows) endpoint: \u003cul\u003e\u003cli\u003eResponse is now paginated with a default limit of `20`\u003c/li\u003e\u003cli\u003eThe `_conflicts` field in the response is no longer available\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e \u003c/ul\u003e\n    \u003c/td\u003e\n    \u003ctd\u003eCurrent\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e`20220603`\u003c/td\u003e\n    \u003ctd\u003e\n      \u003cul\u003e\u003cli\u003eChanged the [list projects](https://launchdarkly.com/docs/api/projects/get-projects) return value:\u003cul\u003e\u003cli\u003eResponse is now paginated with a default limit of `20`.\u003c/li\u003e\u003cli\u003eAdded support for filter and sort.\u003c/li\u003e\u003cli\u003eThe project `environments` field is now expandable. This field is omitted by default.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eChanged the [get project](https://launchdarkly.com/docs/api/projects/get-project) return value:\u003cul\u003e\u003cli\u003eThe `environments` field is now expandable. This field is omitted by default.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\n    \u003c/td\u003e\n    \u003ctd\u003e2025-04-15\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e`20210729`\u003c/td\u003e\n    \u003ctd\u003e\n      \u003cul\u003e\u003cli\u003eChanged the [create approval request](https://launchdarkly.com/docs/api/approvals/post-approval-request) return value. It now returns HTTP Status Code `201` instead of `200`.\u003c/li\u003e\u003cli\u003e Changed the [get user](https://launchdarkly.com/docs/api/users/get-user) return value. It now returns a user record, not a user. \u003c/li\u003e\u003cli\u003eAdded additional optional fields to environment, segments, flags, members, and segments, including the ability to create big segments. \u003c/li\u003e\u003cli\u003e Added default values for flag variations when new environments are created. \u003c/li\u003e\u003cli\u003eAdded filtering and pagination for getting flags and members, including `limit`, `number`, `filter`, and `sort` query parameters. \u003c/li\u003e\u003cli\u003eAdded endpoints for expiring user targets for flags and segments, scheduled changes, access tokens, Relay Proxy configuration, integrations and subscriptions, and approvals. \u003c/li\u003e\u003c/ul\u003e\n    \u003c/td\u003e\n    \u003ctd\u003e2023-06-03\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e`20191212`\u003c/td\u003e\n    \u003ctd\u003e\n      \u003cul\u003e\u003cli\u003e[List feature flags](https://launchdarkly.com/docs/api/feature-flags/get-feature-flags) now defaults to sending summaries of feature flag configurations, equivalent to setting the query parameter `summary=true`. Summaries omit flag targeting rules and individual user targets from the payload. \u003c/li\u003e\u003cli\u003e Added endpoints for flags, flag status, projects, environments, audit logs, members, users, custom roles, segments, usage, streams, events, and data export. \u003c/li\u003e\u003c/ul\u003e\n    \u003c/td\u003e\n    \u003ctd\u003e2022-07-29\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e`20160426`\u003c/td\u003e\n    \u003ctd\u003e\n      \u003cul\u003e\u003cli\u003eInitial versioning of API. Tokens created before versioning have their version set to this.\u003c/li\u003e\u003c/ul\u003e\n    \u003c/td\u003e\n    \u003ctd\u003e2020-12-12\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\nTo learn more about how EOL is determined, read LaunchDarkly's [End of Life (EOL) Policy](https://launchdarkly.com/policies/end-of-life-policy/).\n",
    "contact": {
      "name": "LaunchDarkly Technical Support Team",
      "url": "https://support.launchdarkly.com",
      "email": "support@launchdarkly.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://app.launchdarkly.com",
      "description": " Default"
    },
    {
      "url": "https://app.launchdarkly.us",
      "description": " Federal"
    },
    {
      "url": "https://app.launchdarkly.com",
      "description": "Prod API server"
    }
  ],
  "security": [
    {
      "ApiKey": [
        "read",
        "write"
      ]
    }
  ],
  "tags": [
    {
      "name": "Access tokens",
      "description": "The access tokens API allows you to list, create, modify, and delete access tokens programmatically.\n\nWhen using access tokens to manage access tokens, the following restrictions apply:\n- Personal tokens can see all service tokens and other personal tokens created by the same team member. If the personal token has the \"Admin\" role, it may also see other member's personal tokens. To learn more, read [Personal tokens](https://launchdarkly.com/docs/home/account/api#personal-tokens).\n- Service tokens can see all service tokens. If the token has the \"Admin\" role, it may also see all personal tokens. To learn more, read  [Service tokens](https://launchdarkly.com/docs/home/account/api#service-tokens).\n- Tokens can only manage other tokens, including themselves, if they have \"Admin\" role or explicit permission via a custom role. To learn more, read [Personal access token actions](https://launchdarkly.com/docs/home/team/role-actions#personal-access-token-actions).\n\nSeveral of the endpoints in the access tokens API require an access token ID. The access token ID is returned as part of the [Create access token](https://launchdarkly.com/docs/api/access-tokens/post-token) and [List access tokens](https://launchdarkly.com/docs/api/access-tokens/get-tokens) responses. It is the `_id` field, or the `_id` field of each element in the `items` array.\n\nTo learn more about access tokens, read [API access tokens](https://launchdarkly.com/docs/home/account/api).\n"
    },
    {
      "name": "Account members",
      "description": "The account members API allows you to invite new members to an account by making a `POST` request to `/api/v2/members`. When you invite a new member to an account, an invitation is sent to the email you provided. Members with \"admin\" or \"owner\" roles may create new members, as well as anyone with a \"createMember\" permission for \"member/\\*\". To learn more, read [LaunchDarkly account members](https://launchdarkly.com/docs/home/account/members).\n\nAny member may request the complete list of account members with a `GET` to `/api/v2/members`.\n\nValid built-in role names that you can provide for the `role` field include `reader`, `writer`, `admin`, `owner/admin`, and `no_access`. To learn more about built-in roles, read [LaunchDarkly's built-in roles](https://launchdarkly.com/docs/home/account/built-in-roles).\n\nSeveral of the endpoints in the account members API require a member ID. The member ID is returned as part of the [Invite new members](https://launchdarkly.com/docs/api/account-members/post-members) and [List account members](https://launchdarkly.com/docs/api/account-members/get-members) responses. It is the `_id` field of each element in the `items` array.\n"
    },
    {
      "name": "Account members (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n"
    },
    {
      "name": "Account usage (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nThe account usage API lets you query for metrics about how your account is using LaunchDarkly. To learn more, read [Account usage metrics](https://launchdarkly.com/docs/home/account/metrics).\n\nEach endpoint returns time-series data in the form of an array of data points with timestamps. Each one contains data for that time from one or more series. It also includes a metadata array describing what each of the series is.\n"
    },
    {
      "name": "AI Configs (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\nThe AI Configs API allows you to create, retrieve, and edit AI Configs, AI Config variations, and AI model configurations.\n\nAn AI Config is a resource in LaunchDarkly that you can use to customize, test, and roll out new large language models (LLMs) within your generative AI applications. Within each AI Config, you define one or more AI Config variations, each of which includes a model configuration and one or more messages. The model configuration can be a standard one from the list provided by LaunchDarkly, or you can define your own custom AI model configuration.\n\nTo learn more, read [AI Configs](https://launchdarkly.com/docs/home/ai-configs).\n"
    },
    {
      "name": "Announcements",
      "description": "The announcements API lets you create and update a custom announcement banner that appears in the LaunchDarkly user interface for everyone in your organization. You can use the banner to display organization-wide information, such as upcoming holidays, code freeze periods, or reminders on best practices. You can have one banner visible at a time.\n\nTo learn more, read [Organization announcements](https://launchdarkly.com/docs/home/account/org-announcements).\n"
    },
    {
      "name": "Applications (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nThe applications API lets you create, update, delete, and search for applications and application versions.\n\nEach application includes information about the app you're creating, and a set of versions of the app that you've released. You can use applications to target particular application versions in your feature flags more easily, and to handle unsupported application versions more gracefully.\n\nIn addition to creating applications through the applications API, you can also create applications in the LaunchDarkly user interface. To learn more, read [Applications and application versions](https://launchdarkly.com/docs/home/releases/applications). LaunchDarkly also creates applications and application versions automatically when a LaunchDarkly SDK evaluates a feature flag for a context that includes application information. To learn more, read [Automatic environment attributes](https://launchdarkly.com/docs/sdk/features/environment-attributes).\n\nYou can use an application in any project in your LaunchDarkly account.\n\n### Filtering applications and application versions\n\nThe `filter` parameter supports the following operators: `equals`, `notEquals`, `anyOf`, `startsWith`.\n\nYou can also combine filters in the following ways:\n\n- Use a comma (`,`) as an AND operator\n- Use a vertical bar (`|`) as an OR operator\n- Use parentheses (`()`) to group filters\n\n#### Supported fields and operators\n\nYou can only filter certain fields in applications when using the `filter` parameter. Additionally, you can only filter some fields with certain operators.\n\nWhen you search for applications, the `filter` parameter supports the following fields and operators:\n\n|\u003cdiv style=\"width:120px\"\u003eField\u003c/div\u003e |Description |Supported operators |\n|---|---|---|\n|`key` | The application or application version key, a unique identifier |`equals`, `notEquals`, `anyOf` |\n|`name` | The application name or application version name |`equals`, `notEquals`, `anyOf`, `startsWith` |\n|`autoAdded` | Whether the application or application version was automatically created because it was included in a context when a LaunchDarkly SDK evaluated a feature flag, or was created through the LaunchDarkly UI or REST API |`equals`, `notEquals` |\n|`kind` | The application kind, one of `mobile`, `server`, `browser`. Only available for [Get applications](https://launchdarkly.com/docs/api/applications-beta/get-applications). |`equals`, `notEquals`, `anyOf` |\n|`supported` | Whether a mobile application version is supported or unsupported. Only available for [Get application versions by application key](https://launchdarkly.com/docs/api/applications-beta/get-application-versions).|`equals`, `notEquals` |\n\nFor example, the filter `?filter=kind anyOf [\"mobile\", \"server\"]` matches applications whose `kind` is either `mobile` or `server`. The filter is not case-sensitive.\n\nThe documented values for `filter` query parameters are prior to URL encoding. For example, the `[` in `?filter=kind anyOf [\"mobile\", \"server\"]` must be encoded to `%5B`.\n\n### Sorting applications and application versions\n\nLaunchDarkly supports the following fields for sorting:\n- `name` sorts by application name.\n- `creationDate` sorts by the creation date of the application.\n\nBy default, the sort is in ascending order. Use `-` to sort in descending order. For example, `?sort=name` sorts the response by application name in ascending order, and `?sort=-name` sorts in descending order.\n"
    },
    {
      "name": "Approvals",
      "description": "An account member can request approval on changes to a flag's targeting or variations, or to a segment's targeting. Members may be required to request approval depending on the settings in their LaunchDarkly project. Members can optionally request an approval even if it is not required.\n\nAn approval request prevents a change from being applied without approval from another member. Select up to ten members as reviewers. Reviewers receive an email notification, but anyone with sufficient permissions can review a pending approval request. A change needs at least one approval before you can apply it. To learn more, read [Approvals](https://launchdarkly.com/docs/home/releases/approvals).\n\nChanges that conflict will fail if approved and applied, and the flag or segment will not be updated.\n\nSeveral of the endpoints in the approvals API require an approval request ID. The approval request ID is returned as part of the [Create approval request](https://launchdarkly.com/docs/api/approvals/post-approval-request) and [List approval requests for a flag](https://launchdarkly.com/docs/api/approvals/get-approvals-for-flag) responses. It is the `_id` field, or the `_id` field of each element in the `items` array. If you created the approval request as part of a [workflow](https://launchdarkly.com/docs/api/workflows), you can also use a workflow ID as the approval request ID. The workflow ID is returned as part of the [Create workflow](https://launchdarkly.com/docs/api/workflows/post-workflow) and [Get workflows](https://launchdarkly.com/docs/api/workflows/get-workflows) responses. It is the `_id` field, or the `_id` field of each element in the `items` array.\n"
    },
    {
      "name": "Approvals (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n"
    },
    {
      "name": "Audit log",
      "description": "LaunchDarkly maintains a record of all the changes made to any resource in the system. You can access this history using the audit log API, including filtering by timestamps, or using a custom policy to select which entries to receive.\n\nSeveral of the endpoints in the audit log API require an audit log entry ID. The audit log entry ID is returned as part of the [List audit log entries](https://launchdarkly.com/docs/api/audit-log/get-audit-log-entries) response. It is the `_id` field of each element in the `items` array.\n\nIn the LaunchDarkly UI, this information appears on the **Change history** page. To learn more, read [Change history](https://launchdarkly.com/docs/home/observability/change-history).\n"
    },
    {
      "name": "Code references",
      "description": "\u003e ### Code references is an Enterprise feature\n\u003e\n\u003e Code references is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\n\u003e ### Use ld-find-code-refs\n\u003e\n\u003e LaunchDarkly provides the [ld-find-code-refs utility](https://github.com/launchdarkly/ld-find-code-refs) that creates repository connections, generates code reference data, and creates calls to the code references API. Most customers do not need to call this API directly.\n\nThe code references API provides access to all resources related to each connected repository, and associated feature flag code reference data for all branches. To learn more, read [Code references](https://launchdarkly.com/docs/home/observability/code-references).\n"
    },
    {
      "name": "Context settings",
      "description": "You can use the context settings API to assign a context to a specific variation for any feature flag. To learn more, read [View and manage contexts](https://launchdarkly.com/docs/home/observability/context-attributes#view-and-manage-contexts).\n"
    },
    {
      "name": "Contexts",
      "description": "\nContexts are people, services, machines, or other resources that encounter feature flags in your product. Contexts are identified by their `kind`, which describes the type of resources encountering flags, and by their `key`. Each unique combination of one or more contexts that have encountered a feature flag in your product is called a context instance.\n\nWhen you use the LaunchDarkly SDK to evaluate a flag, you provide a context to that call. LaunchDarkly records the key and attributes of each context instance. You can view these in the LaunchDarkly user interface from the **Contexts** list, or use the Context APIs. To learn more, read [Contexts](https://launchdarkly.com/docs/home/observability/contexts).\n\nLaunchDarkly provides APIs for you to:\n\n* retrieve contexts, context instances, and context attribute names and values\n* search for contexts or context instances\n* delete context instances\n* fetch context kinds\n* create and update context kinds\n\nTo learn more about context kinds, read [Context kinds](https://launchdarkly.com/docs/home/observability/context-kinds).\n\nContexts are always scoped within a project and an environment. Each environment has its own set of context instance records.\n\nSeveral of the endpoints in the contexts API require a context instance ID or application ID. Both of these IDs are returned as part of the [Search for context instances](https://launchdarkly.com/docs/api/contexts/search-context-instances) response. The context instance ID is the `id` field of each element in the `items` array. The application ID is the `applicationId` field of each element in the `items` array. By default, the application ID is set to the SDK you are using. In the LaunchDarkly UI, the application ID and application version appear on the context details page in the \"From source\" field. You can change the application ID as part of your SDK configuration. To learn more, read [Application metadata configuration](https://launchdarkly.com/docs/sdk/features/app-config).\n\n### Filtering contexts and context instances\n\nWhen you [search for contexts](https://launchdarkly.com/docs/api/contexts/search-contexts) or [context instances](https://launchdarkly.com/docs/api/contexts/search-context-instances), you can filter on certain fields using the `filter` parameter either as a query parameter or as a request body parameter.\n\nThe `filter` parameter supports the following operators: `after`, `anyOf`, `before`, `contains`, `equals`, `exists`, `notEquals`, `startsWith`.\n\n\u003cdetails\u003e\n\u003csummary\u003eExpand for details on operators and syntax\u003c/summary\u003e\n\n#### after\n\nReturns contexts or context instances if any of the values in a field, which should be dates, are after the provided time. For example:\n\n* `myField after \"2022-09-21T19:03:15+00:00\"`\n\n#### anyOf\n\nReturns contexts or context instances if any of the values in a field match any of the values in the match value. For example:\n\n* `myField anyOf [44]`\n* `myField anyOf [\"phone\",\"tablet\"]`\n* `myField anyOf [true]\"`\n\n#### before\n\nReturns contexts or context instances if any of the values in a field, which should be dates, are before the provided time. For example:\n\n* `myField before \"2022-09-21T19:03:15+00:00\"`\n\n#### contains\n\nReturns contexts or context instances if all the match values are found in the list of values in this field. For example:\n\n* `myListField contains 44`\n* `myListField contains [\"phone\",\"tablet\"]`\n* `myListField contains true`\n\n#### equals\n\nReturns contexts or context instances if there is an exact match on the entire field. For example:\n\n* `myField equals 44`\n* `myField equals \"device\"`\n* `myField equals true`\n* `myField equals [1,2,3,4]`\n* `myField equals [\"hello\",\"goodbye\"]`\n\n#### exists\n\nReturns contexts or context instances if the field matches the specified existence. For example:\n\n* `myField exists true`\n* `myField exists false`\n* `*.name exists true`\n\n#### notEquals\n\nReturns contexts or context instances if there is not an exact match on the entire field. For example:\n\n* `myField notEquals 44`\n* `myField notEquals \"device\"`\n* `myField notEquals true`\n* `myField notEquals [1,2,3,4]`\n* `myField notEquals [\"hello\",\"goodbye\"]`\n\n#### startsWith\n\nReturns contexts or context instances if the value in a field, which should be a singular string, begins with the provided substring. For example:\n\n* `myField startsWith \"do\"`\n\n\u003c/details\u003e\n\nYou can also combine filters in the following ways:\n\n* Use a comma (`,`) as an AND operator\n* Use a vertical bar (`|`) as an OR operator\n* Use parentheses `()` to group filters\n\nFor example:\n\n* `myField notEquals 0, myField notEquals 1` returns contexts or context instances where `myField` is not 0 and is not 1\n* `myFirstField equals \"device\",(mySecondField equals \"iPhone\"|mySecondField equals \"iPad\")` returns contexts or context instances where `myFirstField` is equal to \"device\" and `mySecondField` is equal to either \"iPhone\" or \"iPad\"\n\n#### Supported fields and operators\n\nYou can only filter certain fields in contexts and context instances when using the `filter` parameter. Additionally, you can only filter some fields with certain operators.\n\nWhen you search for [contexts](https://launchdarkly.com/docs/api/contexts/search-contexts), the `filter` parameter supports the following fields and operators:\n\n|\u003cdiv style=\"width:120px\"\u003eField\u003c/div\u003e |Description |Supported operators |\n|---|---|---|\n|`applicationId` |An identifier representing the application where the LaunchDarkly SDK is running. |`equals`, `notEquals`, `anyOf` |\n|`id` |Unique identifier for the context. |`equals`, `notEquals`, `anyOf` |\n|`key` |The context key. |`equals`, `notEquals`, `anyOf`, `startsWith` |\n|`kind` |The context kind. |`equals`, `notEquals`, `anyOf` |\n|`kinds` |A list of all kinds found in the context. Supply a list of strings to the operator. |`equals`, `anyOf`, `contains` |\n|`kindKey` |The kind and key for the context. They are joined with `:`, for example, `user:user-key-abc123`. |`equals`, `notEquals`, `anyOf` |\n|`kindKeys` |A list of all kinds and keys found in the context. The kind and key are joined with `:`, for example, `user:user-key-abc123`. Supply a list of strings to the operator. |`equals`, `anyOf`, `contains` |\n|`q` |A \"fuzzy\" search across context attribute values and the context key. Supply a string or list of strings to the operator.  |`equals` |\n|`name` |The name for the context. |`equals`, `notEquals`, `exists`, `anyOf`, `startsWith` |\n|`\u003ca kind\u003e.\u003can attribute name\u003e` |A kind and the name of any attribute that appears in a context of that kind, for example, `user.email`. To filter all kinds, use `*` in place of the kind, for example, `*.email`. You can use either a literal attribute name or a JSON path to specify the attribute. If you use a JSON path, then you must escape the `/` character, using `~1`, and the `~` character, using `~0`. For example, use `user.job/title` or `user./job~1title` to filter the `/job/title` field in a user context kind. If the field or value includes whitespace, it should be enclosed in double quotes. |`equals`, `notEquals`, `exists`, `startsWith`, `before`, `after`.|\n\nWhen searching for [context instances](https://launchdarkly.com/docs/api/contexts/search-context-instances), the `filter` parameter supports the following fields and operators\n\n|\u003cdiv style=\"width:120px\"\u003eField\u003c/div\u003e |Description |Supported operators |\n|---|---|---|\n|`applicationId` |An identifier representing the application where the LaunchDarkly SDK is running. |`equals`, `notEquals`, `anyOf` |\n|`id` |Unique identifier for the context instance. |`equals`, `notEquals`, `anyOf` |\n|`kinds` |A list of all kinds found in the context instance. Supply a list of strings to the operator. |`equals`, `anyOf`, `contains` |\n|`kindKeys` |A list of all kinds and keys found in the context instance. The kind and key are joined with `:`, for example, `user:user-key-abc123`. Supply a list of strings to the operator. |`equals`, `anyOf`, `contains` |\n"
    },
    {
      "name": "Custom roles",
      "description": "\u003e ### Custom roles is an Enterprise feature\n\u003e\n\u003e Custom roles is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nCustom roles allow you to create flexible policies providing fine-grained access control to everything in LaunchDarkly, including feature flags, environments, and teams. With roles, it's possible to enforce access policies that meet your exact workflow needs.\n\nThe custom roles API allows you to create, update, and delete roles. You can also use the API to list all of your roles or get a role by ID. You cannot use this API to update preset roles.\n\nFor more information about roles and the syntax for role policies, read the product documentation for [Roles](https://launchdarkly.com/docs/home/account/custom-roles).\n"
    },
    {
      "name": "Data Export destinations",
      "description": "\u003e ### Data Export is an add-on feature\n\u003e\n\u003e Data Export is available as an add-on for customers on a Foundation or Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nData Export provides a real-time export of raw analytics data, including feature flag requests, analytics events, custom events, and more.\n\nData Export destinations are locations that receive exported data. The Data Export destinations API allows you to configure destinations so that your data can be exported.\n\nSeveral of the endpoints in the Data Export destinations API require a Data Export destination ID. The Data Export destination ID is returned as part of the [Create a Data Export destination](https://launchdarkly.com/docs/api/data-export-destinations/post-destination) and [List destinations](https://launchdarkly.com/docs/api/data-export-destinations/get-destinations) responses. It is the `_id` field, or the `_id` field of each element in the `items` array.\n\nTo learn more, read [Data Export](https://launchdarkly.com/docs/integrations/data-export).\n"
    },
    {
      "name": "Environments",
      "description": "Environments allow you to maintain separate rollout rules in different contexts, from local development to QA, staging, and production. With the LaunchDarkly Environments API, you can programmatically list, create, and manage environments. To learn more, read [Environments](https://launchdarkly.com/docs/home/account/environment).\n"
    },
    {
      "name": "Experiments",
      "description": "\u003e ### Available for subscription customers\n\u003e\n\u003e Experimentation is available to all customers on a Developer, Foundation, or Enterprise subscription. If you're on an older Pro or Enterprise plan, Experimentation is available as an add-on. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To change your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\n\n\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nExperimentation lets you validate the impact of features you roll out to your app or infrastructure. You can measure things like page views, clicks, load time, infrastructure costs, and more. By connecting metrics you create to flags in your LaunchDarkly environment, you can measure the changes in your customers' behavior based on what flags they evaluate. You can run experiments with any type of flag, including boolean, string, number, and JSON flags. To learn more, read [Experimentation](https://launchdarkly.com/docs/home/experimentation).\n\nYou can manage experiments by using the dedicated experiment endpoints described below.\n\nSeveral of the endpoints require a treatment ID or a flag rule ID. Treatment IDs are returned as part of the [Get experiment results](https://launchdarkly.com/docs/api/experiments/get-experiment-results) response. They are the `treatmentId` of each element in the `treatmentResults` array. Winning treatment IDs are also returned as part of the [Get experiment](https://launchdarkly.com/docs/api/experiments/get-experiment) response. They are the `winningTreatmentId` in the `currentIteration`, the `winningTreatmentId` in the `draftIteration`, and the `winningTreatmentId` in each element of the `previousIterations` array. In the flags object, the rule ID is the ID of the variation or rollout of the flag. Each flag variation ID is returned as part of the [Get feature flag](https://launchdarkly.com/docs/api/feature-flags/get-feature-flag) response. It is the `_id` field in each element of the `variations` array.\n"
    },
    {
      "name": "Feature flags",
      "description": "The feature flags API allows you to list, create, and modify feature flags and their targeting. For example, you can control percentage rollouts, target specific contexts, or even toggle off a feature flag programmatically.\n\n## Sample feature flag representation\n\nEvery feature flag has a set of top-level attributes, as well as an `environments` map containing the flag rollout and targeting rules specific to each environment. To learn more, read [Using feature flags](https://launchdarkly.com/docs/home/flags/create).\n\n\u003cdetails\u003e\n\u003csummary\u003eClick to expand an example of a \u003cstrong\u003ecomplete feature flag representation\u003c/strong\u003e\u003c/summary\u003e\n\n```json\n{\n  \"name\": \"Alternate product page\",\n  \"kind\": \"boolean\",\n  \"description\": \"This is a description\",\n  \"key\": \"alternate.page\",\n  \"_version\": 2,\n  \"creationDate\": 1418684722483,\n  \"includeInSnippet\": true,\n  \"clientSideAvailability\" {\n    \"usingMobileKey\": false,\n    \"usingEnvironmentId\": true,\n  },\n  \"variations\": [\n    {\n      \"value\": true,\n      \"name\": \"true\",\n      \"_id\": \"86208e6e-468f-4425-b334-7f318397f95c\"\n    },\n    {\n      \"value\": false,\n      \"name\": \"false\",\n      \"_id\": \"7b32de80-f346-4276-bb77-28dfa7ddc2d8\"\n    }\n  ],\n  \"variationJsonSchema\": null,\n  \"defaults\": {\n    \"onVariation\": 0,\n    \"offVariation\": 1\n  },\n  \"temporary\": false,\n  \"tags\": [\"ops\", \"experiments\"],\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/flags/default\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/flags/default/alternate.page\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"maintainerId\": \"548f6741c1efad40031b18ae\",\n  \"_maintainer\": {\n    \"_links\": {\n      \"self\": {\n        \"href\": \"/api/v2/members/548f6741c1efad40031b18ae\",\n        \"type\": \"application/json\"\n      }\n    },\n    \"_id\": \"548f6741c1efad40031b18ae\",\n    \"firstName\": \"Ariel\",\n    \"lastName\": \"Flores\",\n    \"role\": \"reader\",\n    \"email\": \"ariel@acme.com\"\n  },\n  \"goalIds\": [],\n  \"experiments\": {\n    \"baselineIdx\": 0,\n    \"items\": []\n  },\n  \"environments\": {\n    \"production\": {\n      \"on\": true,\n      \"archived\": false,\n      \"salt\": \"YWx0ZXJuYXRlLnBhZ2U=\",\n      \"sel\": \"45501b9314dc4641841af774cb038b96\",\n      \"lastModified\": 1469326565348,\n      \"version\": 61,\n      \"targets\": [{\n          \"values\": [\"user-key-123abc\"],\n          \"variation\": 0,\n          \"contextKind\": \"user\"\n      }],\n      \"contextTargets\": [{\n        \"values\": [],\n        \"variation\": 0,\n        \"contextKind\": \"user\"\n        }, {\n        \"values\": [\"org-key-123abc\"],\n        \"variation\": 0,\n        \"contextKind\": \"organization\"\n      }],\n      \"rules\": [\n        {\n          \"_id\": \"f3ea72d0-e473-4e8b-b942-565b790ffe18\",\n          \"variation\": 0,\n          \"clauses\": [\n            {\n              \"_id\": \"6b81968e-3744-4416-9d64-74547eb0a7d1\",\n              \"attribute\": \"groups\",\n              \"op\": \"in\",\n              \"values\": [\"Top Customers\"],\n              \"contextKind\": \"user\",\n              \"negate\": false\n            },\n            {\n              \"_id\": \"9d60165d-82b8-4b9a-9136-f23407ba1718\",\n              \"attribute\": \"email\",\n              \"op\": \"endsWith\",\n              \"values\": [\"gmail.com\"],\n              \"contextKind\": \"user\",\n              \"negate\": false\n            }\n          ],\n          \"trackEvents\": false,\n          \"ref\": \"73257308-472b-4d9c-a556-10aa7adbf857\"\n        }\n      ],\n      \"fallthrough\": {\n        \"rollout\": {\n          \"variations\": [\n            {\n              \"variation\": 0,\n              \"weight\": 60000\n            },\n            {\n              \"variation\": 1,\n              \"weight\": 40000\n            }\n          ],\n          \"contextKind\": \"user\"\n        }\n      },\n      \"offVariation\": 1,\n      \"prerequisites\": [],\n      \"_site\": {\n        \"href\": \"/default/production/features/alternate.page\",\n        \"type\": \"text/html\"\n      },\n      \"_environmentName\": \"Production\",\n      \"trackEvents\": false,\n      \"trackEventsFallthrough\": false,\n      \"_summary\": {\n        \"variations\": {\n          \"0\": {\n            \"rules\": 1,\n            \"nullRules\": 0,\n            \"targets\": 2,\n            \"rollout\": 60000\n          },\n          \"1\": {\n            \"rules\": 0,\n            \"nullRules\": 0,\n            \"targets\": 0,\n            \"isOff\": true,\n            \"rollout\": 40000\n          }\n        },\n        \"prerequisites\": 0\n      }\n    }\n}\n```\n\n\u003c/details\u003e\n\n## Anatomy of a feature flag\n\nThis section describes the sample feature flag representation in more detail.\n\n### Top-level attributes\n\nMost of the top-level attributes have a straightforward interpretation, for example `name` and `description`.\n\nThe `variations` array represents the different variation values that a feature flag has. For a boolean flag, there are two variations: `true` and `false`. Multivariate flags have more variation values, and those values could be any JSON type: numbers, strings, objects, or arrays. In targeting rules, the variations are referred to by their index into this array.\n\nTo update these attributes, read [Update feature flag](#operation/patchFeatureFlag), especially the instructions for **updating flag settings**.\n\n### Per-environment configurations\n\nEach entry in the `environments` map contains a JSON object that represents the environment-specific flag configuration data available in the flag's targeting page. To learn more, read [Targeting with flags](https://launchdarkly.com/docs/home/flags/target).\n\nTo update per-environment information for a flag, read [Update feature flag](#operation/patchFeatureFlag), especially the instructions for **turning flags on and off** and **working with targeting and variations**.\n\n### Individual context targets\n\nThe `targets` and `contextTargets` arrays in the per-environment configuration data correspond to the individual context targeting on the flag's targeting page. To learn more, read [Individual targeting](https://launchdarkly.com/docs/home/flags/individual-targeting).\n\nEach object in the `targets` and `contextTargets` arrays represents a list of context keys assigned to a particular variation. The `targets` array includes contexts with `contextKind` of \"user\" and the `contextTargets` array includes contexts with context kinds other than \"user.\"\n\nFor example:\n\n```json\n{\n  ...\n  \"environments\" : {\n    \"production\" : {\n      ...\n      \"targets\": [\n        {\n          \"values\": [\"user-key-123abc\"],\n          \"variation\": 0,\n          \"contextKind\": \"user\"\n        }\n      ],\n      \"contextTargets\": [\n        {\n          \"values\": [\"org-key-123abc\"],\n          \"variation\": 0,\n          \"contextKind\": \"organization\"\n        }\n      ]\n    }\n  }\n}\n```\n\nThe `targets` array means that any user context instance with the key `user-key-123abc` receives the first variation listed in the `variations` array. The `contextTargets` array means that any organization context with the key `org-key-123abc` receives the first variation listed in the `variations` array. Recall that the variations are stored at the top level of the flag JSON in an array, and the per-environment configuration rules point to indexes into this array. If this is a boolean flag, both contexts are receiving the `true` variation.\n\n### Targeting rules\n\nThe `rules` array corresponds to the rules section of the flag's targeting page. This is where you can express complex rules on attributes with conditions and operators. For example, you might create a rule that specifies \"roll out the `true` variation to 80% of contexts whose email address ends with `gmail.com`\". To learn more, read [Targeting rules](https://launchdarkly.com/docs/home/flags/targeting-rules).\n\n### The fallthrough rule\n\nThe `fallthrough` object is a special rule that contains no conditions. It is the rollout strategy that is applied when none of the individual or custom targeting rules match. In the LaunchDarkly UI, it is called the \"Default rule.\"\n\n### The off variation\n\nThe off variation represents the variation to serve if the feature flag targeting is turned off, meaning the `on` attribute is `false`. For boolean flags, this is usually `false`. For multivariate flags, set the off variation to whatever variation represents the control or baseline behavior for your application. If you don't set the off variation, LaunchDarkly will serve the fallback value defined in your code.\n\n### Percentage rollouts\n\nWhen you work with targeting rules and with the default rule, you can specify either a single variation or a percentage rollout. The `weight` attribute defines the percentage rollout for each variation. Weights range from 0 (a 0% rollout) to 100000 (a 100% rollout). The weights are scaled by a factor of 1000 so that fractions of a percent can be represented without using floating-point. For example, a weight of `60000` means that 60% of contexts will receive that variation. The sum of weights across all variations should be 100%.\n"
    },
    {
      "name": "Feature flags (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n"
    },
    {
      "name": "Flag import configurations (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nFlag import configurations allow you to import feature flags from another feature management system.\n\nUse the flag import configuration endpoints to create, delete, and manage flag import configurations. You can import flags from other feature management tools into LaunchDarkly. For example, you can import flags from Split.io.\n\nSeveral of the endpoints in the flag import configuration API require an integration ID. The integration ID is returned as part of the [Create a flag import configuration](https://launchdarkly.com/docs/api/flag-import-configurations-beta/create-flag-import-configuration) response, in the `_id` field. It is also returned as part of the [List all flag import configurations](https://launchdarkly.com/docs/api/flag-import-configurations-beta/get-flag-import-configurations) response, in the `_id` field of each element in the `items` array.\n\nTo learn more about flag import configurations, read [Import flags](https://launchdarkly.com/docs/home/flags/import).\n"
    },
    {
      "name": "Flag links (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nFlag links let you view external mentions of flags from other tools and services. Links to external conversations and references to your flags allow you to collaborate more easily and quickly review relevant flag contexts. To learn more, read [Flag links](https://launchdarkly.com/docs/home/flags/links).\n\nYou can create custom flag links by associating an external URL with a feature flag. After you create a flag link, it applies across all your environments. You should use caution when you delete a flag link, because it will be deleted from all your environments.\n\nWith the flag links API, you can view, create, update, and delete links to flags.\n\nSeveral of the endpoints in the flag links API require a flag link ID. The flag link ID is returned as part of the [Create flag link](https://launchdarkly.com/docs/api/flag-links-beta/create-flag-link) and [List flag links](https://launchdarkly.com/docs/api/flag-links-beta/get-flag-links) responses. It is the `_id` field, or the `_id` field of each element in the `items` array.\n"
    },
    {
      "name": "Flag triggers",
      "description": "\u003e ### Flag triggers is an Enterprise feature\n\u003e\n\u003e Flag triggers is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nFlag triggers let you initiate flag changes remotely using a unique webhook URL. For example, you can integrate triggers with your existing tools to enable or disable flags when you hit specific operational health thresholds or receive certain alerts. To learn more, read [Flag triggers](https://launchdarkly.com/docs/home/releases/triggers).\n\nWith the flag triggers API, you can create, delete, and manage triggers.\n\nSeveral of the endpoints in the flag triggers API require a flag trigger ID. The flag trigger ID is returned as part of the [Create flag trigger](https://launchdarkly.com/docs/api/flag-triggers/create-trigger-workflow) and [List flag triggers](https://launchdarkly.com/docs/api/flag-triggers/get-trigger-workflows) responses. It is the `_id` field, or the `_id` field of each element in the `items` array.\n"
    },
    {
      "name": "Follow flags",
      "description": "Follow flags to receive email updates about targeting changes to a flag in a project and environment.\n\nSeveral of the endpoints in the follow flags API require a member ID. The member ID is returned as part of the [Invite new members](https://launchdarkly.com/docs/api/account-members/post-members) and [List account members](https://launchdarkly.com/docs/api/account-members/get-members) responses. It is the `_id` field of each element in the `items` array.\n"
    },
    {
      "name": "Holdouts (beta)",
      "description": "\u003e ### Available for customers using Experimentation\n\u003e\n\u003e Holdouts are available to customers using [Experimentation](https://launchdarkly.com/docs/api/experiments).\n\n\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nHoldouts let you exclude a percentage of your audience from your Experimentation program. This enables you to see the overall effect of your experiments on your customer base, and helps determine how effective the experiments you're running are.\n\nUsing the holdouts API, you can create, delete, and manage holdouts. To learn more, read [Holdouts](https://launchdarkly.com/docs/home/holdouts).\n"
    },
    {
      "name": "Insights charts (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nThe charts API provides access to the data used in engineering insights project metrics. To learn more, read [Project metrics](https://launchdarkly.com/docs/home/observability/project-metrics).\n"
    },
    {
      "name": "Insights deployments (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nThe deployments API provides access to deployment information in engineering insights. To learn more, read [Deployments](https://launchdarkly.com/docs/home/observability/deployments).\n"
    },
    {
      "name": "Insights flag events (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nThe flag events API provides access to flag-event data used in engineering insights project metrics. To learn more, read [Flag health](https://launchdarkly.com/docs/home/observability/flag-health).\n"
    },
    {
      "name": "Insights pull requests (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nThe pull requests API provides access to information used for lead time calculations. To learn more, read [Lead time](https://launchdarkly.com/docs/home/observability/lead-time).\n"
    },
    {
      "name": "Insights repositories (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nEngineering insights automatically creates repository associations when it receives deployments or code references. Optionally, you can manually configure additional associations. You can use the repositories API to list repositories and create associations to projects. To learn more, read [Send deployment information](https://launchdarkly.com/docs/home/observability/config-deployment). \n"
    },
    {
      "name": "Insights scores (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nThe insights scores API provides scores for data used in engineering insights project metrics. To learn more, read [Project overview](https://launchdarkly.com/docs/home/observability/project-overview) and [Project metrics](https://launchdarkly.com/docs/home/observability/project-metrics).\n"
    },
    {
      "name": "Integration audit log subscriptions",
      "description": "Audit log integration subscriptions allow you to send audit log events hooks to one of dozens of external tools. For example, you can send flag change event webhooks to external third party software. To learn more, read [Building your own integrations](https://launchdarkly.com/docs/integrations/building-integrations#building-your-own-integrations).\n\nYou can use the integration subscriptions API to create, delete, and manage your integration audit log subscriptions.\n\nEach of these operations requires an `integrationKey` that refers to the type of integration. The required `config` fields to create a subscription vary depending on the `integrationKey`. You can find a full list of the fields for each integration below.\n\nSeveral of these operations require a subscription ID. The subscription ID is returned as part of the [Create audit log subscription](https://launchdarkly.com/docs/api/integration-audit-log-subscriptions/create-subscription) and [Get audit log subscriptions by integration](https://launchdarkly.com/docs/api/integration-audit-log-subscriptions/get-subscriptions) responses. It is the `_id` field, or the `_id` field of each element in the `items` array.\n\n### Configuration bodies by integrationKey\n\n#### datadog\n\n`apiKey` is a sensitive value.\n\n`hostURL` must evaluate to either `\"https://api.datadoghq.com\"` or `\"https://api.datadoghq.eu\"` and will default to the former if not explicitly defined.\n\n```\n\"config\": {\n    \"apiKey\": \u003cstring, optional\u003e, # sensitive value\n    \"hostURL\": \u003cstring, optional\u003e\n}\n```\n\n#### dynatrace\n\n`apiToken` is a sensitive value.\n\n`entity` must evaluate to one of the following fields and will default to `\"APPLICATION\"` if not explicitly defined:\n\n\u003cdetails\u003e\n\u003csummary\u003eClick to expand list of fields\u003c/summary\u003e\n\u003cbr/\u003e\n\"APPLICATION\"\u003cbr/\u003e\n\"APPLICATION_METHOD\"\u003cbr/\u003e\n\"APPLICATION_METHOD_GROUP\"\u003cbr/\u003e\n\"AUTO_SCALING_GROUP\"\u003cbr/\u003e\n\"AUXILIARY_SYNTHETIC_TEST\"\u003cbr/\u003e\n\"AWS_APPLICATION_LOAD_BALANCER\"\u003cbr/\u003e\n\"AWS_AVAILABILITY_ZONE\"\u003cbr/\u003e\n\"AWS_CREDENTIALS\"\u003cbr/\u003e\n\"AWS_LAMBDA_FUNCTION\"\u003cbr/\u003e\n\"AWS_NETWORK_LOAD_BALANCER\"\u003cbr/\u003e\n\"AZURE_API_MANAGEMENT_SERVICE\"\u003cbr/\u003e\n\"AZURE_APPLICATION_GATEWAY\"\u003cbr/\u003e\n\"AZURE_COSMOS_DB\"\u003cbr/\u003e\n\"AZURE_CREDENTIALS\"\u003cbr/\u003e\n\"AZURE_EVENT_HUB\"\u003cbr/\u003e\n\"AZURE_EVENT_HUB_NAMESPACE\"\u003cbr/\u003e\n\"AZURE_FUNCTION_APP\"\u003cbr/\u003e\n\"AZURE_IOT_HUB\"\u003cbr/\u003e\n\"AZURE_LOAD_BALANCER\"\u003cbr/\u003e\n\"AZURE_MGMT_GROUP\"\u003cbr/\u003e\n\"AZURE_REDIS_CACHE\"\u003cbr/\u003e\n\"AZURE_REGION\"\u003cbr/\u003e\n\"AZURE_SERVICE_BUS_NAMESPACE\"\u003cbr/\u003e\n\"AZURE_SERVICE_BUS_QUEUE\"\u003cbr/\u003e\n\"AZURE_SERVICE_BUS_TOPIC\"\u003cbr/\u003e\n\"AZURE_SQL_DATABASE\"\u003cbr/\u003e\n\"AZURE_SQL_ELASTIC_POOL\"\u003cbr/\u003e\n\"AZURE_SQL_SERVER\"\u003cbr/\u003e\n\"AZURE_STORAGE_ACCOUNT\"\u003cbr/\u003e\n\"AZURE_SUBSCRIPTION\"\u003cbr/\u003e\n\"AZURE_TENANT\"\u003cbr/\u003e\n\"AZURE_VM\"\u003cbr/\u003e\n\"AZURE_VM_SCALE_SET\"\u003cbr/\u003e\n\"AZURE_WEB_APP\"\u003cbr/\u003e\n\"CF_APPLICATION\"\u003cbr/\u003e\n\"CF_FOUNDATION\"\u003cbr/\u003e\n\"CINDER_VOLUME\"\u003cbr/\u003e\n\"CLOUD_APPLICATION\"\u003cbr/\u003e\n\"CLOUD_APPLICATION_INSTANCE\"\u003cbr/\u003e\n\"CLOUD_APPLICATION_NAMESPACE\"\u003cbr/\u003e\n\"CONTAINER_GROUP\"\u003cbr/\u003e\n\"CONTAINER_GROUP_INSTANCE\"\u003cbr/\u003e\n\"CUSTOM_APPLICATION\"\u003cbr/\u003e\n\"CUSTOM_DEVICE\"\u003cbr/\u003e\n\"CUSTOM_DEVICE_GROUP\"\u003cbr/\u003e\n\"DCRUM_APPLICATION\"\u003cbr/\u003e\n\"DCRUM_SERVICE\"\u003cbr/\u003e\n\"DCRUM_SERVICE_INSTANCE\"\u003cbr/\u003e\n\"DEVICE_APPLICATION_METHOD\"\u003cbr/\u003e\n\"DISK\"\u003cbr/\u003e\n\"DOCKER_CONTAINER_GROUP_INSTANCE\"\u003cbr/\u003e\n\"DYNAMO_DB_TABLE\"\u003cbr/\u003e\n\"EBS_VOLUME\"\u003cbr/\u003e\n\"EC2_INSTANCE\"\u003cbr/\u003e\n\"ELASTIC_LOAD_BALANCER\"\u003cbr/\u003e\n\"ENVIRONMENT\"\u003cbr/\u003e\n\"EXTERNAL_SYNTHETIC_TEST_STEP\"\u003cbr/\u003e\n\"GCP_ZONE\"\u003cbr/\u003e\n\"GEOLOCATION\"\u003cbr/\u003e\n\"GEOLOC_SITE\"\u003cbr/\u003e\n\"GOOGLE_COMPUTE_ENGINE\"\u003cbr/\u003e\n\"HOST\"\u003cbr/\u003e\n\"HOST_GROUP\"\u003cbr/\u003e\n\"HTTP_CHECK\"\u003cbr/\u003e\n\"HTTP_CHECK_STEP\"\u003cbr/\u003e\n\"HYPERVISOR\"\u003cbr/\u003e\n\"KUBERNETES_CLUSTER\"\u003cbr/\u003e\n\"KUBERNETES_NODE\"\u003cbr/\u003e\n\"MOBILE_APPLICATION\"\u003cbr/\u003e\n\"NETWORK_INTERFACE\"\u003cbr/\u003e\n\"NEUTRON_SUBNET\"\u003cbr/\u003e\n\"OPENSTACK_PROJECT\"\u003cbr/\u003e\n\"OPENSTACK_REGION\"\u003cbr/\u003e\n\"OPENSTACK_VM\"\u003cbr/\u003e\n\"OS\"\u003cbr/\u003e\n\"PROCESS_GROUP\"\u003cbr/\u003e\n\"PROCESS_GROUP_INSTANCE\"\u003cbr/\u003e\n\"RELATIONAL_DATABASE_SERVICE\"\u003cbr/\u003e\n\"SERVICE\"\u003cbr/\u003e\n\"SERVICE_INSTANCE\"\u003cbr/\u003e\n\"SERVICE_METHOD\"\u003cbr/\u003e\n\"SERVICE_METHOD_GROUP\"\u003cbr/\u003e\n\"SWIFT_CONTAINER\"\u003cbr/\u003e\n\"SYNTHETIC_LOCATION\"\u003cbr/\u003e\n\"SYNTHETIC_TEST\"\u003cbr/\u003e\n\"SYNTHETIC_TEST_STEP\"\u003cbr/\u003e\n\"VIRTUALMACHINE\"\u003cbr/\u003e\n\"VMWARE_DATACENTER\"\n\u003c/details\u003e\n\n```\n\"config\": {\n    \"apiToken\": \u003cstring, required\u003e,\n    \"url\": \u003cstring, required\u003e,\n    \"entity\": \u003cstring, optional\u003e\n}\n```\n\n#### elastic\n\n`token` is a sensitive field.\n\n```\n\"config\": {\n    \"url\": \u003cstring, required\u003e,\n    \"token\": \u003cstring, required\u003e,\n    \"index\": \u003cstring, required\u003e\n}\n```\n\n#### honeycomb\n\n`apiKey` is a sensitive field.\n\n```\n\"config\": {\n    \"datasetName\": \u003cstring, required\u003e,\n    \"apiKey\": \u003cstring, required\u003e\n}\n```\n\n#### logdna\n\n`ingestionKey` is a sensitive field.\n\n```\n\"config\": {\n    \"ingestionKey\": \u003cstring, required\u003e,\n    \"level\": \u003cstring, optional\u003e\n}\n```\n\n#### msteams\n\n```\n\"config\": {\n    \"url\": \u003cstring, required\u003e\n}\n```\n\n#### new-relic-apm\n\n`apiKey` is a sensitive field.\n\n`domain` must evaluate to either `\"api.newrelic.com\"` or `\"api.eu.newrelic.com\"` and will default to the former if not explicitly defined.\n\n```\n\"config\": {\n    \"apiKey\": \u003cstring, required\u003e,\n    \"applicationId\": \u003cstring, required\u003e,\n    \"domain\": \u003cstring, optional\u003e\n}\n```\n\n#### signalfx\n\n`accessToken` is a sensitive field.\n\n```\n\"config\": {\n    \"accessToken\": \u003cstring, required\u003e,\n    \"realm\": \u003cstring, required\u003e\n}\n```\n\n#### splunk\n\n`token` is a sensitive field.\n\n```\n\"config\": {\n    \"base-url\": \u003cstring, required\u003e,\n    \"token\": \u003cstring, required\u003e,\n    \"skip-ca-verification\": \u003cboolean, required\u003e\n}\n```\n"
    },
    {
      "name": "Integration delivery configurations (beta)",
      "description": "\n\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nThe integration delivery configurations API allow you to create, modify, validate, and delete delivery configurations.\n\nSeveral of the endpoints require a delivery configuration ID. The delivery configuration ID is returned as part of the [Create delivery configuration](https://launchdarkly.com/docs/api/integration-delivery-configurations-beta/create-integration-delivery-configuration) and [List all delivery configurations](https://launchdarkly.com/docs/api/integration-delivery-configurations-beta/get-integration-delivery-configurations) responses. It is the `_id` field, or the `_id` field of each element in the `items` array.\n"
    },
    {
      "name": "Integrations (beta)",
      "description": "\n\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\n\u003e ### Integration configuration is an Enterprise feature\n\u003e\n\u003e Integration configuration is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nYou can use the integrations API to create, delete, and manage integration configurations.\n\nAn integration configuration stores and manages configuration details for an integration between LaunchDarkly and a third-party application. To learn more about building an integration, read [Using the LaunchDarkly integration framework](https://launchdarkly.com/docs/integrations/building-integrations) and [Building partner integrations](https://launchdarkly.com/docs/integrations/partner-integrations).\n"
    },
    {
      "name": "Layers",
      "description": "\u003e ### Available for customers using Experimentation\n\u003e\n\u003e Layers are available to customers using [Experimentation](https://launchdarkly.com/docs/api/experiments).\n\nThere are some cases in which you may not want to include a context in more than one experiment at a time. For example, you may be concerned about collisions between experiments that are testing similar parts of your app, like two different changes to the same section of your app's user interface (UI), or experiments running on both the back end and front end of the same functionality. In this case you can eliminate the interaction effect between experiments using layers.\n\nA layer contains a set of experiments that cannot share traffic with each other. All of the experiments within a layer are mutually exclusive, which means that if a context is included in one experiment, LaunchDarkly will exclude it from any other experiments in the same layer.\n\nTo learn more, read [Mutually exclusive experiments](https://launchdarkly.com/docs/home/experimentation/mutually-exclusive).\n"
    },
    {
      "name": "Metrics",
      "description": "Metrics track flag behavior over time when an experiment is running. The data generated from experiments gives you more insight into the impact of a particular flag. To learn more, read [Metrics](https://launchdarkly.com/docs/home/observability/metrics).\n\nUsing the metrics API, you can create, delete, and manage metrics.\n\n\u003e ### Metric keys and event keys are different\n\u003e\n\u003e LaunchDarkly automatically generates a metric key when you create a metric. You can use the metric key to identify the metric in API calls.\n\u003e\n\u003e Custom conversion/binary and custom numeric metrics also require an event key. You can set the event key to anything you want. Adding this event key to your codebase lets your SDK track actions customers take in your app as events. To learn more, read [Sending custom events](https://launchdarkly.com/docs/sdk/features/events).\n\n### Importing metric events\n\nThe metric import API is separate from the metrics API.\n\nThe metric import API lets you import metric events from your data pipeline for use with Experimentation and guarded rollouts. This means you can send your already-instrumented metrics into LaunchDarkly without writing and deploying new code for each metric.\n\nFor details on the metric import API, read [Importing metric events](https://launchdarkly.com/docs/home/observability/import-events).\n\n\u003e #### The metric import API uses a different base URL\n\u003e\n\u003e The metric import API differs from other LaunchDarkly REST APIs because it uses a different base URL: it requires `https://events.launchdarkly.com` rather than `https://app.launchdarkly.com`. For this reason, the metric import API is also not included as part of LaunchDarkly's [generated client libraries](https://launchdarkly.com/docs/api#openapi-swagger-and-client-libraries), and details are not included in the [OpenAPI specification](https://launchdarkly.com/docs/api/other/get-openapi-spec). To learn more, read [Importing metric events](https://launchdarkly.com/docs/home/observability/import-events).\n"
    },
    {
      "name": "Metrics (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nMetrics measure audience behaviors affected by the flags in your experiments. Metric groups are reusable, ordered lists of metrics you can use to standardize metrics across multiple experiments. To learn more, read [Metrics](https://launchdarkly.com/docs/home/observability/metrics) and [Metric groups](https://launchdarkly.com/docs/home/observability/metric-groups).\n\nUsing the metrics API, you can create, delete, and manage metrics and metric groups.\n"
    },
    {
      "name": "OAuth2 Clients",
      "description": "The OAuth2 client API allows you to register a LaunchDarkly OAuth client for use in your own custom integrations. Registering a LaunchDarkly OAuth client allows you to use LaunchDarkly as an identity provider so that account members can log into your application with their LaunchDarkly account.\n\nYou can create and manage LaunchDarkly OAuth clients using the LaunchDarkly OAuth client API. This API acknowledges creation of your client with a response containing a one-time, unique `_clientSecret`. If you lose your client secret, you will have to register a new client. LaunchDarkly does not store client secrets in plain text.\n\nSeveral of the endpoints in the OAuth2 client API require an OAuth client ID. The OAuth client ID is returned as part of the [Create a LaunchDarkly OAuth 2.0 client](https://launchdarkly.com/docs/api/o-auth-2-clients/create-o-auth-2-client) and [Get clients](https://launchdarkly.com/docs/api/o-auth-2-clients/get-o-auth-clients) responses. It is the `_clientId` field, or the `_clientId` field of each element in the `items` array.\n\nYou must have _Admin_ privileges or an access token created by a member with _Admin_ privileges in order to be able to use this feature.\n\nPlease note that `redirectUri`s must be absolute URIs that conform to the https URI scheme. If you wish to register a client with a different URI scheme, please contact LaunchDarkly Support.\n"
    },
    {
      "name": "Persistent store integrations (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\n### Persistent store integrations\n\nPersistent store integrations, also called \"big segment\" store integrations, are required when you use a server-side SDK and big segments. You can use the persistent store integrations API endpoints to manage these integrations.\n\n\u003e ### Synced segments and larger list-based segments are an Enterprise feature\n\u003e\n\u003e Segments synced from external tools and larger list-based segments with more than 15,000 entries are the two kinds of \"big segment.\" LaunchDarkly uses different implementations for different types of segments so that all of your segments have good performance.\n\u003e\n\u003e These segments are available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\n[Segments synced from external tools](https://launchdarkly.com/docs/home/flags/synced-segments) and [larger list-based segments](https://launchdarkly.com/docs/home/flags/list-based-segments) are the two kinds of big segment. If you are using server-side SDKs, these segments require a persistent store within your infrastructure. LaunchDarkly keeps the persistent store up to date and consults it during flag evaluation.\n\nYou need either a persistent store integration or a [Relay Proxy](https://launchdarkly.com/docs/sdk/relay-proxy) to support these segments. The persistent store integrations API lets you manage the persistent store integrations.\n\nTo learn more about segments, read [Segments](https://launchdarkly.com/docs/home/flags/segments) and [Segment configuration](https://launchdarkly.com/docs/home/flags/segment-config).\n\nSeveral of the endpoints in the persistent store integrations API require an integration ID. The integration ID is returned as part of the [Create big segment store integration](https://launchdarkly.com/docs/api/persistent-store-integrations-beta/create-big-segment-store-integration) response, in the `_id` field. It is also returned as part of the [List all big segment store integrations](https://launchdarkly.com/docs/api/persistent-store-integrations-beta/get-big-segment-store-integrations) response, in the `_id` field of each element in the `items` array.\n\nYou can find other APIs for working with big segments under [Segments](https://launchdarkly.com/docs/api/segments).\n"
    },
    {
      "name": "Projects",
      "description": "Projects allow you to manage multiple different software projects under one LaunchDarkly account. Each project has its own unique set of environments and feature flags. To learn more, read [Projects](https://launchdarkly.com/docs/home/account/project).\n\nUsing the projects API, you can list, create, and manage projects.\n"
    },
    {
      "name": "Relay Proxy configurations",
      "description": "\n\u003e ### Relay Proxy automatic configuration is an Enterprise feature\n\u003e\n\u003e Relay Proxy automatic configuration is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nThe Relay Proxy automatic configuration API provides access to all resources related to relay tokens. To learn more, read [Automatic configuration](https://launchdarkly.com/docs/sdk/relay-proxy/automatic-configuration).\n\nSeveral of the endpoints in the Relay Proxy automatic configuration API require a configuration ID. The Relay Proxy configuration ID is returned as part of the [Create a new Relay Proxy config](https://launchdarkly.com/docs/api/relay-proxy-configurations/post-relay-auto-config) and [List Relay Proxy configs](https://launchdarkly.com/docs/api/relay-proxy-configurations/get-relay-proxy-configs) responses. It is the `_id` field, or the `_id` field of each element in the `items` array.\n"
    },
    {
      "name": "Release pipelines (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nRelease pipelines standardize the release process for feature flags across a series of phases, where each phase consists of one or more environments. When you add a flag to a release pipeline, you create a \"release\" to automate that flag's progress through the pipeline.\n\nYou can use release pipelines to ensure that you correctly roll out the flag in each environment before moving on to the next. A release can use an immediate or guarded rollout to a designated audience, and can require approvals for selected environments. You can also use release pipelines to view the status of ongoing releases across all flags within a project, enforcing a standardized process and ensuring they are following best practices. To learn more, read [Release pipelines](https://launchdarkly.com/docs/home/releases/release-pipelines).\n\nWith the release pipelines API, you can view, create, update, and delete release pipelines.\n\nWith the related [releases API](https://launchdarkly.com/docs/api/releases-beta), you can view and update the active releases for a given flag.\n\nTo add a feature flag to an existing release pipeline, use the [Update feature flag](https://launchdarkly.com/docs/api/feature-flags/patch-feature-flag) endpoint.\n"
    },
    {
      "name": "Releases (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nRelease pipelines track the progression of a feature flag across a series of phases, where each phase consists of one or more environments. When you add a flag to a release pipeline, you create a \"release\" to track that flag's progress through the pipeline. To learn more, read [Release pipelines](https://launchdarkly.com/docs/home/releases/release-pipelines).\n\nWith the releases API, you can view and update the active releases for a given flag.\n\nWith the related [release pipelines API](https://launchdarkly.com/docs/api/release-pipelines-beta), you can view, create, and delete release pipelines.\n"
    },
    {
      "name": "Scheduled changes",
      "description": "\u003e ### Scheduled flag changes is an Enterprise feature\n\u003e\n\u003e Scheduled flag changes is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nSchedule the specified flag targeting changes to take effect at the selected time. You may schedule multiple changes for a flag each with a different `ExecutionDate`. To learn more, read [Scheduled flag changes](https://launchdarkly.com/docs/home/releases/scheduled-changes).\n\nSeveral of the endpoints in the scheduled changes API require a scheduled change ID. The scheduled change ID is returned as part of the [Create scheduled changes workflow](https://launchdarkly.com/docs/api/scheduled-changes/post-flag-config-scheduled-changes) and [List scheduled changes](https://launchdarkly.com/docs/api/scheduled-changes/get-flag-config-scheduled-changes) responses. It is the `_id` field, or the `_id` field of each element in the `items` array.\n"
    },
    {
      "name": "Segments",
      "description": "\n\u003e ### Synced segments and larger list-based segments are an Enterprise feature\n\u003e\n\u003e This section documents endpoints for rule-based, list-based, and synced segments.\n\u003e\n\u003e A \"big segment\" is a segment that is either a synced segment, or a list-based segment with more than 15,000 entries that includes only one targeted context kind. LaunchDarkly uses different implementations for different types of segments so that all of your segments have good performance.\n\u003e\n\u003e In the segments API, a big segment is indicated by the `unbounded` field being set to `true`.\n\u003e\n\u003e These segments are available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nSegments are groups of contexts that you can use to manage flag targeting behavior in bulk. LaunchDarkly supports:\n\n* rule-based segments, which let you target groups of contexts individually or by attribute,\n* list-based segments, which let you target individual contexts or uploaded lists of contexts, and\n* synced segments, which let you target groups of contexts backed by an external data store.\n\nTo learn more, read [Segments](https://launchdarkly.com/docs/home/flags/segments).\n\nThe segments API allows you to list, create, modify, and delete segments programmatically.\n\nYou can find other APIs for working with big segments under [Persistent store integrations (beta)](https://launchdarkly.com/docs/api/persistent-store-integrations-beta).\n"
    },
    {
      "name": "Tags",
      "description": "Tags are simple strings that you can attach to most resources in LaunchDarkly. Tags are useful for grouping resources into a set that you can name in a resource specifier. To learn more, read [Custom role concepts](https://launchdarkly.com/docs/home/account/role-concepts#tags).\n\nUsing the tags API, you can list existing tags for resources.\n"
    },
    {
      "name": "Teams",
      "description": "\u003e ### Teams is an Enterprise feature\n\u003e\n\u003e Teams is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nA team is a group of members in your LaunchDarkly account. Members of the team have access to various resources in LaunchDarkly, such as projects or flags, based on the role or roles you assign to the team. To learn more, read [Teams](https://launchdarkly.com/docs/home/account/teams).\n\nThe Teams API allows you to create, read, update, and delete a team.\n\nSeveral of the endpoints in the Teams API require one or more member IDs. The member ID is returned as part of the [List account members](https://launchdarkly.com/docs/api/account-members/get-members) response. It is the `_id` field of each element in the `items` array.\n"
    },
    {
      "name": "Teams (beta)",
      "description": "\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\n\u003e ### Teams is an Enterprise feature\n\u003e\n\u003e Teams is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nA team is a group of members in your LaunchDarkly account. A team can have maintainers who are able to add and remove team members. It also can have custom roles assigned to it that allows shared access to those roles for all team members. To learn more, read [Teams](https://launchdarkly.com/docs/home/account/teams).\n"
    },
    {
      "name": "User settings",
      "description": "\u003e ### Contexts are now available\n\u003e\n\u003e After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Contexts](https://launchdarkly.com/docs/api/contexts) instead of the user settings API. To learn more, read [Contexts](https://launchdarkly.com/docs/home/observability/contexts).\n\nLaunchDarkly's user settings API provides a picture of all feature flags and their current values for a specific user. This gives you instant visibility into how a particular user experiences your site or application. To learn more, read [View and manage contexts](https://launchdarkly.com/docs/home/observability/context-attributes#view-and-manage-contexts).\n\nYou can also use the user settings API to assign a user to a specific variation for any feature flag.\n"
    },
    {
      "name": "Users",
      "description": "\u003e ### Contexts are now available\n\u003e\n\u003e After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Contexts](https://launchdarkly.com/docs/api/contexts) instead of these endpoints. To learn more, read [Contexts](https://launchdarkly.com/docs/home/observability/contexts).\n\n\nLaunchDarkly creates a record for each user passed in to `variation` calls. This record powers the autocomplete functionality on the feature flag dashboard, as well as the Users page. To learn more, read [Contexts](https://launchdarkly.com/docs/home/observability/contexts).\n\nLaunchDarkly also offers an API that lets you tap into this data. You can use the users API to see what user data is available to LaunchDarkly, as well as determine which flag values a user will receive. You can also explicitly set which flag value a user will receive via this API.\n\nUsers are always scoped within a project and environment. In other words, each environment has its own set of user records.\n"
    },
    {
      "name": "Users (beta)",
      "description": "\u003e ### Contexts are now available\n\u003e\n\u003e After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Contexts](https://launchdarkly.com/docs/api/contexts) instead of these endpoints. To learn more, read [Contexts](https://launchdarkly.com/docs/home/observability/contexts).\n\n\u003e ### This feature is in beta\n\u003e\n\u003e To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](https://launchdarkly.com/docs/api#beta-resources).\n\u003e\n\u003e Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nLaunchDarkly creates a record for each user passed in to `variation` calls. This record powers the autocomplete functionality on the feature flag dashboard, as well as the Users page. To learn more, read [Contexts](https://launchdarkly.com/docs/home/observability/contexts)\n\nLaunchDarkly also offers an API that lets you access this data. You can use the users API to see what user data is available to LaunchDarkly, as well as determine which flag values a user will receive. You can also explicitly set which flag value a user will receive with this API.\n\nUsers are always scoped within both a project and an environment. Each environment has its own set of user records.\n"
    },
    {
      "name": "Webhooks",
      "description": "The webhooks API lets you build your own integrations that subscribe to activities in LaunchDarkly. When you generate an activity in LaunchDarkly, such as when you change a flag or you create a project, LaunchDarkly sends an HTTP POST payload to the webhook's URL. Use webhooks to update external issue trackers, update support tickets, notify customers of new feature rollouts, and more.\n\nSeveral of the endpoints in the webhooks API require a webhook ID. The webhook ID is returned as part of the [Creates a webhook](https://launchdarkly.com/docs/api/webhooks/post-webhook) and [List webhooks](https://launchdarkly.com/docs/api/webhooks/get-all-webhooks) responses. It is the `_id` field, or the `_id` field of each element in the `items` array.\n\n## Designating the payload\n\nThe webhook payload is identical to an audit log entry. To learn more, read [Get audit log entry](https://launchdarkly.com/docs/api/audit-log/get-audit-log-entry).\n\nHere's a sample payload:\n\n\u003e ### Webhook delivery order\n\u003e\n\u003e Webhooks may not be delivered in chronological order. We recommend using the payload's \"date\" field as a timestamp to reorder webhooks as they are received.\n\n```json\n{\n  \"_links\": {\n    \"canonical\": {\n      \"href\": \"/api/v2/projects/alexis/environments/test\",\n      \"type\": \"application/json\"\n    },\n    \"parent\": {\n      \"href\": \"/api/v2/auditlog\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/auditlog/57c0a8e29969090743529965\",\n      \"type\": \"application/json\"\n    },\n    \"site\": {\n      \"href\": \"/settings#/projects\",\n      \"type\": \"text/html\"\n    }\n  },\n  \"_id\": \"57c0a8e29969090743529965\",\n  \"date\": 1472243938774,\n  \"accesses\": [\n    {\n      \"action\": \"updateName\",\n      \"resource\": \"proj/alexis:env/test\"\n    }\n  ],\n  \"kind\": \"environment\",\n  \"name\": \"Testing\",\n  \"description\": \"- Changed the name from ~~Test~~ to *Testing*\",\n  \"member\": {\n    \"_links\": {\n      \"parent\": {\n        \"href\": \"/internal/account/members\",\n        \"type\": \"application/json\"\n      },\n      \"self\": {\n        \"href\": \"/internal/account/members/548f6741c1efad40031b18ae\",\n        \"type\": \"application/json\"\n      }\n    },\n    \"_id\": \"548f6741c1efad40031b18ae\",\n    \"email\": \"ariel@acme.com\",\n    \"firstName\": \"Ariel\",\n    \"lastName\": \"Flores\"\n  },\n  \"titleVerb\": \"changed the name of\",\n  \"title\": \"[Ariel Flores](mailto:ariel@acme.com) changed the name of [Testing](https://app.launchdarkly.com/settings#/projects)\",\n  \"target\": {\n    \"_links\": {\n      \"canonical\": {\n        \"href\": \"/api/v2/projects/alexis/environments/test\",\n        \"type\": \"application/json\"\n      },\n      \"site\": {\n        \"href\": \"/settings#/projects\",\n        \"type\": \"text/html\"\n      }\n    },\n    \"name\": \"Testing\",\n    \"resources\": [\"proj/alexis:env/test\"]\n  }\n}\n```\n\n## Signing the webhook\n\nOptionally, you can define a `secret` when you create a webhook. If you define the secret, the webhook `POST` request will include an `X-LD-Signature header`, whose value will contain an HMAC SHA256 hex digest of the webhook payload, using the `secret` as the key.\n\nCompute the signature of the payload using the same shared secret in your code to verify that the webhook was triggered by LaunchDarkly.\n\n## Understanding connection retries\n\nIf LaunchDarkly receives a non-`2xx` response to a webhook `POST`, it will retry the delivery one time. Webhook delivery is not guaranteed. If you build an integration on webhooks, make sure it is tolerant of delivery failures.\n"
    },
    {
      "name": "Workflow templates",
      "description": "\u003e ### Workflow templates is an Enterprise feature\n\u003e\n\u003e Workflow templates are available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nWorkflow templates allow you to define a set of workflow stages that you can use as a starting point for new workflows. You can create these workflows for any flag in any environment and any project, and you can create as many workflows as you like from a given template.\n\nYou can create workflow templates in two ways:\n* by specifying the desired stages, using the `stages` property of the request body\n* by specifying an existing workflow to save as a template, using the `workflowId` property of the request body\n\nYou can use templates to create a workflow in any project, environment, or flag. However, when you create a template, you must specify a particular project, environment, and flag. This means that when you create a template using the `stages` property, you must also include `projectKey`, `environmentKey`, and `flagKey` properties in the request body. When you create a template from an existing workflow, it will use the project, environment, and flag of the existing workflow, so those properties can be omitted from the request body.\n\nTo learn more, read [Workflows documentation](https://launchdarkly.com/docs/home/releases/workflows) and [Workflows API documentation](https://launchdarkly.com/docs/api/workflows).\n"
    },
    {
      "name": "Workflows",
      "description": "\u003e ### Workflows is an Enterprise feature\n\u003e\n\u003e Workflows is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nA workflow is a set of actions that you can schedule in advance to make changes to a feature flag at a future date and time. You can also include approval requests at different stages of a workflow. To learn more, read [Workflows](https://launchdarkly.com/docs/home/releases/workflows).\n\nThe actions supported are as follows:\n\n- Turning targeting `ON` or `OFF`\n- Setting the default variation\n- Adding targets to a given variation\n- Creating a rule to target by segment\n- Modifying the rollout percentage for rules\n\nYou can create multiple stages of a flag release workflow. Unique stages are defined by their conditions: either approvals and/or scheduled changes.\n\nSeveral of the endpoints in the workflows API require a workflow ID or one or more member IDs. The workflow ID is returned as part of the [Create workflow](https://launchdarkly.com/docs/api/workflows/post-workflow) and [Get workflows](https://launchdarkly.com/docs/api/workflows/get-workflows) responses. It is the `_id` field, or the `_id` field of each element in the `items` array. The member ID is returned as part of the [List account members](https://launchdarkly.com/docs/api/account-members/get-members) response. It is the `_id` field of each element in the `items` array.\n"
    },
    {
      "name": "Other",
      "description": "Other requests available in the LaunchDarkly API. \n"
    }
  ],
  "paths": {
    "/api/v2": {},
    "/api/v2/account/relay-auto-configs": {},
    "/api/v2/account/relay-auto-configs/{id}": {},
    "/api/v2/account/relay-auto-configs/{id}/reset": {},
    "/api/v2/applications": {},
    "/api/v2/applications/{applicationKey}": {},
    "/api/v2/applications/{applicationKey}/versions": {},
    "/api/v2/applications/{applicationKey}/versions/{versionKey}": {},
    "/api/v2/approval-requests": {},
    "/api/v2/approval-requests/{id}": {},
    "/api/v2/approval-requests/{id}/apply": {},
    "/api/v2/approval-requests/{id}/reviews": {},
    "/api/v2/auditlog": {},
    "/api/v2/auditlog/{id}": {},
    "/api/v2/caller-identity": {},
    "/api/v2/code-refs/extinctions": {},
    "/api/v2/code-refs/repositories": {},
    "/api/v2/code-refs/repositories/{repo}": {},
    "/api/v2/code-refs/repositories/{repo}/branch-delete-tasks": {},
    "/api/v2/code-refs/repositories/{repo}/branches": {},
    "/api/v2/code-refs/repositories/{repo}/branches/{branch}": {},
    "/api/v2/code-refs/repositories/{repo}/branches/{branch}/extinction-events": {},
    "/api/v2/code-refs/statistics": {},
    "/api/v2/code-refs/statistics/{projectKey}": {},
    "/api/v2/destinations": {},
    "/api/v2/destinations/generate-warehouse-destination-key-pair": {},
    "/api/v2/destinations/{projectKey}/{environmentKey}": {},
    "/api/v2/destinations/{projectKey}/{environmentKey}/{id}": {},
    "/api/v2/flag-links/projects/{projectKey}/flags/{featureFlagKey}": {},
    "/api/v2/flag-links/projects/{projectKey}/flags/{featureFlagKey}/{id}": {},
    "/api/v2/flag-status/{projectKey}/{featureFlagKey}": {},
    "/api/v2/flag-statuses/{projectKey}/{environmentKey}": {},
    "/api/v2/flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}": {},
    "/api/v2/flags/{projectKey}": {
      "get": {
        "responses": {
          "200": {
            "description": "Global flags collection response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlags"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorRep"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorRep"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorRep"
                }
              }
            }
          },
          "404": {
            "description": "Invalid resource identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorRep"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitedErrorRep"
                }
              }
            }
          }
        },
        "tags": [
          "Feature flags"
        ],
        "summary": "List feature flags",
        "description": "Get a list of all feature flags in the given project. You can include information specific to different environments by adding `env` query parameter. For example, setting `env=production` adds configuration details about your production environment to the response. You can also filter feature flags by tag with the `tag` query parameter.\n\n\u003e #### Recommended use\n\u003e\n\u003e This endpoint can return a large amount of information. We recommend using some or all of these query parameters to decrease response time and overall payload size: `limit`, `env`, `query`, and `filter=creationDate`.\n\n### Filtering flags\n\nYou can filter on certain fields using the `filter` query parameter. For example, setting `filter=query:dark-mode,tags:beta+test` matches flags with the string `dark-mode` in their key or name, ignoring case, which also have the tags `beta` and `test`.\n\nThe `filter` query parameter supports the following arguments:\n\n| Filter argument       | Description | Example              |\n|-----------------------|-------------|----------------------|\n| `applicationEvaluated`  | A string. It filters the list to flags that are evaluated in the application with the given key. | `filter=applicationEvaluated:com.launchdarkly.cafe` |\n| `archived`              | (deprecated) A boolean value. It filters the list to archived flags. | Use `filter=state:archived` instead |\n| `contextKindsEvaluated` | A `+`-separated list of context kind keys. It filters the list to flags which have been evaluated in the past 30 days for all of the context kinds in the list. | `filter=contextKindsEvaluated:user+application` |\n| `codeReferences.max`    | An integer value. Use `0` to return flags that do not have code references. | `filter=codeReferences.max:0` |\n| `codeReferences.min`    | An integer value. Use `1` to return flags that do have code references. | `filter=codeReferences.min:1` |\n| `creationDate`          | An object with an optional `before` field whose value is Unix time in milliseconds. It filters the list to flags created before the date. | `filter=creationDate:{\"before\":1690527600000}` |\n| `evaluated`             | An object that contains a key of `after` and a value in Unix time in milliseconds. It filters the list to all flags that have been evaluated since the time you specify, in the environment provided. This filter requires the `filterEnv` filter. | `filter=evaluated:{\"after\":1690527600000},filterEnv:production` |\n| `filterEnv`             | A valid environment key. You must use this field for filters that are environment-specific. If there are multiple environment-specific filters, you only need to include this field once. | `filter=evaluated:{\"after\": 1590768455282},filterEnv:production` |\n| `guardedRollout` | A string, one of `any`, `monitoring`, `regressed`, `rolledBack`, `completed`, `archived`. It filters the list to flags that are part of guarded rollouts. | `filter=guardedRollout:monitoring` |\n| `hasExperiment`         | A boolean value. It filters the list to flags that are used in an experiment. | `filter=hasExperiment:true` |\n| `maintainerId`          | A valid member ID. It filters the list to flags that are maintained by this member. | `filter=maintainerId:12ab3c45de678910abc12345` |\n| `maintainerTeamKey`     | A string. It filters the list to flags that are maintained by the team with this key. | `filter=maintainerTeamKey:example-team-key` |\n| `query`                 | A string. It filters the list to flags that include the specified string in their key or name. It is not case sensitive. | `filter=query:example` |\n| `releasePipeline`       | A release pipeline key. It filters the list to flags that are either currently active in the release pipeline or have completed the release pipeline. | `filter=releasePipeline:default-release-pipeline` |\n| `state`                 | A string, either `live`, `deprecated`, or `archived`. It filters the list to flags in this state. | `filter=state:archived` |\n| `sdkAvailability`       | A string, one of `client`, `mobile`, `anyClient`, `server`. Using `client` filters the list to flags whose client-side SDK availability is set to use the client-side ID. Using `mobile` filters to flags set to use the mobile key. Using `anyClient` filters to flags set to use either the client-side ID or the mobile key. Using `server` filters to flags set to use neither, that is, to flags only available in server-side SDKs.  | `filter=sdkAvailability:client` |\n| `tags`                  | A `+`-separated list of tags. It filters the list to flags that have all of the tags in the list. | `filter=tags:beta+test` |\n| `type`                  | A string, either `temporary` or `permanent`. It filters the list to flags with the specified type. | `filter=type:permanent` |\n\nThe documented values for the `filter` query are prior to URL encoding. For example, the `+` in `filter=tags:beta+test` must be encoded to `%2B`.\n\nBy default, this endpoint returns all flags. You can page through the list with the `limit` parameter and by following the `first`, `prev`, `next`, and `last` links in the returned `_links` field. These links will not be present if the pages they refer to don't exist. For example, the `first` and `prev` links will be missing from the response on the first page.\n\n### Sorting flags\n\nYou can sort flags based on the following fields:\n\n- `creationDate` sorts by the creation date of the flag.\n- `key` sorts by the key of the flag.\n- `maintainerId` sorts by the flag maintainer.\n- `name` sorts by flag name.\n- `tags` sorts by tags.\n- `targetingModifiedDate` sorts by the date that the flag's targeting rules were last modified in a given environment. It must be used with `env` parameter and it can not be combined with any other sort. If multiple `env` values are provided, it will perform sort using the first one. For example, `sort=-targetingModifiedDate\u0026env=production\u0026env=staging` returns results sorted by `targetingModifiedDate` for the `production` environment.\n- `type` sorts by flag type\n\nAll fields are sorted in ascending order by default. To sort in descending order, prefix the field with a dash ( - ). For example, `sort=-name` sorts the response by flag name in descending order.\n\n### Expanding response\n\nLaunchDarkly supports the `expand` query param to include additional fields in the response, with the following fields:\n\n- `codeReferences` includes code references for the feature flag\n- `evaluation` includes evaluation information within returned environments, including which context kinds the flag has been evaluated for in the past 30 days\n- `migrationSettings` includes migration settings information within the flag and within returned environments. These settings are only included for migration flags, that is, where `purpose` is `migration`.\n\nFor example, `expand=evaluation` includes the `evaluation` field in the response.\n\n### Migration flags\nFor migration flags, the cohort information is included in the `rules` property of a flag's response, and default cohort information is included in the `fallthrough` property of a flag's response.\nTo learn more, read [Migration Flags](https://launchdarkly.com/docs/home/flags/migration).\n",
        "parameters": [
          {
            "name": "projectKey",
            "in": "path",
            "description": "The project key",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string",
              "description": "The project key"
            }
          },
          {
            "name": "env",
            "in": "query",
            "description": "Filter configurations by environment",
            "schema": {
              "type": "string",
              "format": "string",
              "description": "Filter configurations by environment"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Filter feature flags by tag",
            "schema": {
              "type": "string",
              "format": "string",
              "description": "Filter feature flags by tag"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of feature flags to return. Defaults to 20.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "description": "The number of feature flags to return. Defaults to 20."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Where to start in the list. Use this with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "description": "Where to start in the list. Use this with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`."
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Deprecated, use `filter=archived:true` instead. A boolean to filter the list to archived flags. When this is absent, only unarchived flags will be returned",
            "deprecated": true,
            "schema": {
              "type": "boolean",
              "description": "Deprecated, use `filter=archived:true` instead. A boolean to filter the list to archived flags. When this is absent, only unarchived flags will be returned"
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "By default, flags do _not_ include their lists of prerequisites, targets, or rules for each environment. Set `summary=0` to include these fields for each flag returned.",
            "schema": {
              "type": "boolean",
              "description": "By default, flags do _not_ include their lists of prerequisites, targets, or rules for each environment. Set `summary=0` to include these fields for each flag returned."
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "A comma-separated list of filters. Each filter is of the form field:value. Read the endpoint description for a full list of available filter fields.",
            "schema": {
              "type": "string",
              "format": "string",
              "description": "A comma-separated list of filters. Each filter is of the form field:value. Read the endpoint description for a full list of available filter fields."
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A comma-separated list of fields to sort by. Fields prefixed by a dash ( - ) sort in descending order. Read the endpoint description for a full list of available sort fields.",
            "schema": {
              "type": "string",
              "format": "string",
              "description": "A comma-separated list of fields to sort by. Fields prefixed by a dash ( - ) sort in descending order. Read the endpoint description for a full list of available sort fields."
            }
          },
          {
            "name": "compare",
            "in": "query",
            "description": "Deprecated, unavailable in API version `20240415`. A boolean to filter results by only flags that have differences between environments.",
            "deprecated": true,
            "schema": {
              "type": "boolean",
              "description": "Deprecated, unavailable in API version `20240415`. A boolean to filter results by only flags that have differences between environments."
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "A comma-separated list of fields to expand in the response. Supported fields are explained above.",
            "schema": {
              "type": "string",
              "format": "string",
              "description": "A comma-separated list of fields to expand in the response. Supported fields are explained above."
            }
          }
        ],
        "operationId": "getFeatureFlags",
        "x-speakeasy-mcp": {
          "description": "Retrieves all feature flags within a project, including metadata and targeting rules. Enables AI agents to enumerate existing flags for inspection, configuration analysis, or generating flag usage reports across environments.\n",
          "disabled": false,
          "name": "list-feature-flags",
          "scopes": [
            "read"
          ]
        },
        "x-speakeasy-group": "featureFlags",
        "x-speakeasy-name-override": "list"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Global flag response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlag"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorRep"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorRep"
                }
              }
            }
          },
          "409": {
            "description": "Status conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusConflictErrorRep"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitedErrorRep"
                }
              }
            }
          }
        },
        "tags": [
          "Feature flags"
        ],
        "summary": "Create a feature flag",
        "description": "Create a feature flag with the given name, key, and variations.\n\n\u003cdetails\u003e\n\u003csummary\u003eClick to expand instructions for \u003cstrong\u003ecreating a migration flag\u003c/strong\u003e\u003c/summary\u003e\n\n### Creating a migration flag\n\nWhen you create a migration flag, the variations are pre-determined based on the number of stages in the migration.\n\nTo create a migration flag, omit the `variations` and `defaults` information. Instead, provide a `purpose` of `migration`, and `migrationSettings`. If you create a migration flag with six stages, `contextKind` is required. Otherwise, it should be omitted.\n\nHere's an example:\n\n```json\n{\n  \"key\": \"flag-key-123\",\n  \"purpose\": \"migration\",\n  \"migrationSettings\": {\n    \"stageCount\": 6,\n    \"contextKind\": \"account\"\n  }\n}\n```\n\nTo learn more, read [Migration Flags](https://launchdarkly.com/docs/home/flags/migration).\n\n\u003c/details\u003e\n",
        "parameters": [
          {
            "name": "projectKey",
            "in": "path",
            "description": "The project key",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string",
              "description": "The project key"
            }
          },
          {
            "name": "clone",
            "in": "query",
            "description": "The key of the feature flag to be cloned. The key identifies the flag in your code. For example, setting `clone=flagKey` copies the full targeting configuration for all environments, including `on/off` state, from the original flag to the new flag.",
            "schema": {
              "type": "string",
              "format": "string",
              "description": "The key of the feature flag to be cloned. The key identifies the flag in your code. For example, setting `clone=flagKey` copies the full targeting configuration for all environments, including `on/off` state, from the original flag to the new flag."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureFlagBody"
              },
              "example": {
                "clientSideAvailability": {
                  "usingEnvironmentId": true,
                  "usingMobileKey": true
                },
                "key": "flag-key-123abc",
                "name": "My Flag"
              }
            }
          },
          "required": true
        },
        "operationId": "postFeatureFlag",
        "x-speakeasy-mcp": {
          "description": "Creates a new feature flag within a project. AI agents can use this operation to define feature toggles for controlled rollouts, experimentation, or gated features, automating the flag setup process.\n",
          "disabled": false,
          "name": "create-feature-flag",
          "scopes": [
            "write"
          ]
        },
        "x-speakeasy-group": "featureFlags",
        "x-speakeasy-name-override": "create"
      }
    },
    "/api/v2/flags/{projectKey}/{environmentKey}/{featureFlagKey}/dependent-flags": {},
    "/api/v2/flags/{projectKey}/{featureFlagKey}": {
      "get": {
        "responses": {
          "200": {
            "description": "Global flag response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlag"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorRep"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorRep"
                }
              }
            }
          },
          "404": {
            "description": "Invalid resource identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorRep"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitedErrorRep"
                }
              }
            }
          }
        },
        "tags": [
          "Feature flags"
        ],
        "summary": "Get feature flag",
        "description": "Get a single feature flag by key. By default, this returns the configurations for all environments. You can filter environments with the `env` query parameter. For example, setting `env=production` restricts the returned configurations to just the `production` environment.\n\n\u003e #### Recommended use\n\u003e\n\u003e This endpoint can return a large amount of information. Specifying one or multiple environments with the `env` parameter can decrease response time and overall payload size. We recommend using this parameter to return only the environments relevant to your query.\n\n### Expanding response\n\nLaunchDarkly supports the `expand` query param to include additional fields in the response, with the following fields:\n\n- `evaluation` includes evaluation information within returned environments, including which context kinds the flag has been evaluated for in the past 30 days \n- `migrationSettings` includes migration settings information within the flag and within returned environments. These settings are only included for migration flags, that is, where `purpose` is `migration`.\n\nFor example, `expand=evaluation` includes the `evaluation` field in the response.\n",
        "parameters": [
          {
            "name": "projectKey",
            "in": "path",
            "description": "The project key",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string",
              "description": "The project key"
            }
          },
          {
            "name": "featureFlagKey",
            "in": "path",
            "description": "The feature flag key",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string",
              "description": "The feature flag key"
            }
          },
          {
            "name": "env",
            "in": "query",
            "description": "Filter configurations by environment",
            "schema": {
              "type": "string",
              "format": "string",
              "description": "Filter configurations by environment"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "A comma-separated list of fields to expand in the response. Supported fields are explained above.",
            "schema": {
              "type": "string",
              "format": "string",
              "description": "A comma-separated list of fields to expand in the response. Supported fields are explained above."
            }
          }
        ],
        "operationId": "getFeatureFlag",
        "x-speakeasy-mcp": {
          "description": "Fetches the full configuration for a specific feature flag, including environments, variations, and targeting rules. Useful for agents auditing or managing specific feature toggles in a detailed, contextual manner.\n",
          "disabled": false,
          "name": "get-feature-flag",
          "scopes": [
            "read"
          ]
        },
        "x-speakeasy-group": "featureFlags",
        "x-speakeasy-name-override": "get"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Global flag response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlag"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorRep"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorRep"
                }
              }
            }
          },
          "404": {
            "description": "Invalid resource identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorRep"
                }
              }
            }
          },
          "405": {
            "description": "Approval is required to make this request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedErrorRep"
                }
              }
            }
          },
          "409": {
            "description": "Status conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusConflictErrorRep"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitedErrorRep"
                }
              }
            }
          }
        },
        "tags": [
          "Feature flags"
        ],
        "summary": "Update feature flag",
        "description": "Perform a partial update to a feature flag. The request body must be a valid semantic patch, JSON patch, or JSON merge patch. To learn more the different formats, read [Updates](https://launchdarkly.com/docs/api#updates).\n\n### Using semantic patches on a feature flag\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](https://launchdarkly.com/docs/api#updates-using-semantic-patch).\n\nThe body of a semantic patch request for updating feature flags takes the following properties:\n\n* `comment` (string): (Optional) A description of the update.\n* `environmentKey` (string): (Required for some instructions only) The key of the LaunchDarkly environment.\n* `instructions` (array): (Required) A list of actions the update should perform. Each action in the list must be an object with a `kind` property that indicates the instruction. If the action requires parameters, you must include those parameters as additional fields in the object. The body of a single semantic patch can contain many different instructions.\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating feature flags.\n\n\u003cdetails\u003e\n\u003csummary\u003eClick to expand instructions for \u003cstrong\u003eturning flags on and off\u003c/strong\u003e\u003c/summary\u003e\n\nThese instructions require the `environmentKey` parameter.\n\n#### turnFlagOff\n\nSets the flag's targeting state to **Off**.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"turnFlagOff\" } ]\n}\n```\n\n#### turnFlagOn\n\nSets the flag's targeting state to **On**.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"turnFlagOn\" } ]\n}\n```\n\n\u003c/details\u003e\u003cbr /\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003eClick to expand instructions for \u003cstrong\u003eworking with targeting and variations\u003c/strong\u003e\u003c/summary\u003e\n\nThese instructions require the `environmentKey` parameter.\n\nSeveral of the instructions for working with targeting and variations require flag rule IDs, variation IDs, or clause IDs as parameters. Each of these are returned as part of the [Get feature flag](https://launchdarkly.com/docs/api/feature-flags/get-feature-flag) response. The flag rule ID is the `_id` field of each element in the `rules` array within each environment listed in the `environments` object. The variation ID is the `_id` field in each element of the `variations` array. The clause ID is the `_id` field of each element of the `clauses` array within the `rules` array within each environment listed in the `environments` object.\n\n#### addClauses\n\nAdds the given clauses to the rule indicated by `ruleId`.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `clauses`: Array of clause objects, with `contextKind` (string), `attribute` (string), `op` (string), `negate` (boolean), and `values` (array of strings, numbers, or dates) properties. The `contextKind`, `attribute`, and `values` are case sensitive. The `op` must be lower-case.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addClauses\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"clauses\": [{\n\t\t\t\"contextKind\": \"user\",\n\t\t\t\"attribute\": \"country\",\n\t\t\t\"op\": \"in\",\n\t\t\t\"negate\": false,\n\t\t\t\"values\": [\"USA\", \"Canada\"]\n\t\t}]\n\t}]\n}\n```\n\n#### addPrerequisite\n\nAdds the flag indicated by `key` with variation `variationId` as a prerequisite to the flag in the path parameter.\n\n##### Parameters\n\n- `key`: Flag key of the prerequisite flag.\n- `variationId`: ID of a variation of the prerequisite flag.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addPrerequisite\",\n\t\t\"key\": \"example-prereq-flag-key\",\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### addRule\n\nAdds a new targeting rule to the flag. The rule may contain `clauses` and serve the variation that `variationId` indicates, or serve a percentage rollout that `rolloutWeights`, `rolloutBucketBy`, and `rolloutContextKind` indicate.\n\nIf you set `beforeRuleId`, this adds the new rule before the indicated rule. Otherwise, adds the new rule to the end of the list.\n\n##### Parameters\n\n- `clauses`: Array of clause objects, with `contextKind` (string), `attribute` (string), `op` (string), `negate` (boolean), and `values` (array of strings, numbers, or dates) properties. The `contextKind`, `attribute`, and `values` are case sensitive. The `op` must be lower-case.\n- `beforeRuleId`: (Optional) ID of a flag rule.\n- Either\n  - `variationId`: ID of a variation of the flag.\n\n  or\n\n  - `rolloutWeights`: (Optional) Map of `variationId` to weight, in thousandths of a percent (0-100000).\n  - `rolloutBucketBy`: (Optional) Context attribute available in the specified `rolloutContextKind`.\n  - `rolloutContextKind`: (Optional) Context kind, defaults to `user`\n\nHere's an example that uses a `variationId`:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [{\n    \"kind\": \"addRule\",\n    \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\",\n    \"clauses\": [{\n      \"contextKind\": \"organization\",\n      \"attribute\": \"located_in\",\n      \"op\": \"in\",\n      \"negate\": false,\n      \"values\": [\"Sweden\", \"Norway\"]\n    }]\n  }]\n}\n```\n\nHere's an example that uses a percentage rollout:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [{\n    \"kind\": \"addRule\",\n    \"clauses\": [{\n      \"contextKind\": \"organization\",\n      \"attribute\": \"located_in\",\n      \"op\": \"in\",\n      \"negate\": false,\n      \"values\": [\"Sweden\", \"Norway\"]\n    }],\n    \"rolloutContextKind\": \"organization\",\n    \"rolloutWeights\": {\n      \"2f43f67c-3e4e-4945-a18a-26559378ca00\": 15000, // serve 15% this variation\n      \"e5830889-1ec5-4b0c-9cc9-c48790090c43\": 85000  // serve 85% this variation\n    }\n  }]\n}\n```\n\n#### addTargets\n\nAdds context keys to the individual context targets for the context kind that `contextKind` specifies and the variation that `variationId` specifies. Returns an error if this causes the flag to target the same context key in multiple variations.\n\n##### Parameters\n\n- `values`: List of context keys.\n- `contextKind`: (Optional) Context kind to target, defaults to `user`\n- `variationId`: ID of a variation on the flag.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addTargets\",\n\t\t\"values\": [\"context-key-123abc\", \"context-key-456def\"],\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### addUserTargets\n\nAdds user keys to the individual user targets for the variation that `variationId` specifies. Returns an error if this causes the flag to target the same user key in multiple variations. If you are working with contexts, use `addTargets` instead of this instruction.\n\n##### Parameters\n\n- `values`: List of user keys.\n- `variationId`: ID of a variation on the flag.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addUserTargets\",\n\t\t\"values\": [\"user-key-123abc\", \"user-key-456def\"],\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### addValuesToClause\n\nAdds `values` to the values of the clause that `ruleId` and `clauseId` indicate. Does not update the context kind, attribute, or operator.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `clauseId`: ID of a clause in that rule.\n- `values`: Array of strings, case sensitive.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addValuesToClause\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"clauseId\": \"10a58772-3121-400f-846b-b8a04e8944ed\",\n\t\t\"values\": [\"beta_testers\"]\n\t}]\n}\n```\n\n#### addVariation\n\nAdds a variation to the flag.\n\n##### Parameters\n\n- `value`: The variation value.\n- `name`: (Optional) The variation name.\n- `description`: (Optional) A description for the variation.\n\nHere's an example:\n\n```json\n{\n\t\"instructions\": [ { \"kind\": \"addVariation\", \"value\": 20, \"name\": \"New variation\" } ]\n}\n```\n\n#### clearTargets\n\nRemoves all individual targets from the variation that `variationId` specifies. This includes both user and non-user targets.\n\n##### Parameters\n\n- `variationId`: ID of a variation on the flag.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"clearTargets\", \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\" } ]\n}\n```\n\n#### clearUserTargets\n\nRemoves all individual user targets from the variation that `variationId` specifies. If you are working with contexts, use `clearTargets` instead of this instruction.\n\n##### Parameters\n\n- `variationId`: ID of a variation on the flag.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"clearUserTargets\", \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\" } ]\n}\n```\n\n#### removeClauses\n\nRemoves the clauses specified by `clauseIds` from the rule indicated by `ruleId`.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `clauseIds`: Array of IDs of clauses in the rule.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"removeClauses\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"clauseIds\": [\"10a58772-3121-400f-846b-b8a04e8944ed\", \"36a461dc-235e-4b08-97b9-73ce9365873e\"]\n\t}]\n}\n```\n\n#### removePrerequisite\n\nRemoves the prerequisite flag indicated by `key`. Does nothing if this prerequisite does not exist.\n\n##### Parameters\n\n- `key`: Flag key of an existing prerequisite flag.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"removePrerequisite\", \"key\": \"prereq-flag-key-123abc\" } ]\n}\n```\n\n#### removeRule\n\nRemoves the targeting rule specified by `ruleId`. Does nothing if the rule does not exist.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"removeRule\", \"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\" } ]\n}\n```\n\n#### removeTargets\n\nRemoves context keys from the individual context targets for the context kind that `contextKind` specifies and the variation that `variationId` specifies. Does nothing if the flag does not target the context keys.\n\n##### Parameters\n\n- `values`: List of context keys.\n- `contextKind`: (Optional) Context kind to target, defaults to `user`\n- `variationId`: ID of a flag variation.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"removeTargets\",\n\t\t\"values\": [\"context-key-123abc\", \"context-key-456def\"],\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### removeUserTargets\n\nRemoves user keys from the individual user targets for the variation that `variationId` specifies. Does nothing if the flag does not target the user keys. If you are working with contexts, use `removeTargets` instead of this instruction.\n\n##### Parameters\n\n- `values`: List of user keys.\n- `variationId`: ID of a flag variation.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"removeUserTargets\",\n\t\t\"values\": [\"user-key-123abc\", \"user-key-456def\"],\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### removeValuesFromClause\n\nRemoves `values` from the values of the clause indicated by `ruleId` and `clauseId`. Does not update the context kind, attribute, or operator.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `clauseId`: ID of a clause in that rule.\n- `values`: Array of strings, case sensitive.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"removeValuesFromClause\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"clauseId\": \"10a58772-3121-400f-846b-b8a04e8944ed\",\n\t\t\"values\": [\"beta_testers\"]\n\t}]\n}\n```\n\n#### removeVariation\n\nRemoves a variation from the flag.\n\n##### Parameters\n\n- `variationId`: ID of a variation of the flag to remove.\n\nHere's an example:\n\n```json\n{\n\t\"instructions\": [ { \"kind\": \"removeVariation\", \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\" } ]\n}\n```\n\n#### reorderRules\n\nRearranges the rules to match the order given in `ruleIds`. Returns an error if `ruleIds` does not match the current set of rules on the flag.\n\n##### Parameters\n\n- `ruleIds`: Array of IDs of all rules in the flag.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"reorderRules\",\n\t\t\"ruleIds\": [\"a902ef4a-2faf-4eaf-88e1-ecc356708a29\", \"63c238d1-835d-435e-8f21-c8d5e40b2a3d\"]\n\t}]\n}\n```\n\n#### replacePrerequisites\n\nRemoves all existing prerequisites and replaces them with the list you provide.\n\n##### Parameters\n\n- `prerequisites`: A list of prerequisites. Each item in the list must include a flag `key` and `variationId`.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [\n    {\n      \"kind\": \"replacePrerequisites\",\n      \"prerequisites\": [\n        {\n          \"key\": \"prereq-flag-key-123abc\",\n          \"variationId\": \"10a58772-3121-400f-846b-b8a04e8944ed\"\n        },\n        {\n          \"key\": \"another-prereq-flag-key-456def\",\n          \"variationId\": \"e5830889-1ec5-4b0c-9cc9-c48790090c43\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n#### replaceRules\n\nRemoves all targeting rules for the flag and replaces them with the list you provide.\n\n##### Parameters\n\n- `rules`: A list of rules.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceRules\",\n      \"rules\": [\n        {\n          \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\",\n          \"description\": \"My new rule\",\n          \"clauses\": [\n            {\n              \"contextKind\": \"user\",\n              \"attribute\": \"segmentMatch\",\n              \"op\": \"segmentMatch\",\n              \"values\": [\"test\"]\n            }\n          ],\n          \"trackEvents\": true\n        }\n      ]\n    }\n  ]\n}\n```\n\n#### replaceTargets\n\nRemoves all existing targeting and replaces it with the list of targets you provide.\n\n##### Parameters\n\n- `targets`: A list of context targeting. Each item in the list includes an optional `contextKind` that defaults to `user`, a required `variationId`, and a required list of `values`.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceTargets\",\n      \"targets\": [\n        {\n          \"contextKind\": \"user\",\n          \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\",\n          \"values\": [\"user-key-123abc\"]\n        },\n        {\n          \"contextKind\": \"device\",\n          \"variationId\": \"e5830889-1ec5-4b0c-9cc9-c48790090c43\",\n          \"values\": [\"device-key-456def\"]\n        }\n      ]\n    }    \n  ]\n}\n```\n\n#### replaceUserTargets\n\nRemoves all existing user targeting and replaces it with the list of targets you provide. In the list of targets, you must include a target for each of the flag's variations. If you are working with contexts, use `replaceTargets` instead of this instruction.\n\n##### Parameters\n\n- `targets`: A list of user targeting. Each item in the list must include a `variationId` and a list of `values`.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceUserTargets\",\n      \"targets\": [\n        {\n          \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\",\n          \"values\": [\"user-key-123abc\", \"user-key-456def\"]\n        },\n        {\n          \"variationId\": \"e5830889-1ec5-4b0c-9cc9-c48790090c43\",\n          \"values\": [\"user-key-789ghi\"]\n        }\n      ]\n    }\n  ]\n}\n```\n\n#### updateClause\n\nReplaces the clause indicated by `ruleId` and `clauseId` with `clause`.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `clauseId`: ID of a clause in that rule.\n- `clause`: New `clause` object, with `contextKind` (string), `attribute` (string), `op` (string), `negate` (boolean), and `values` (array of strings, numbers, or dates) properties. The `contextKind`, `attribute`, and `values` are case sensitive. The `op` must be lower-case.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [{\n    \"kind\": \"updateClause\",\n    \"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n    \"clauseId\": \"10c7462a-2062-45ba-a8bb-dfb3de0f8af5\",\n    \"clause\": {\n      \"contextKind\": \"user\",\n      \"attribute\": \"country\",\n      \"op\": \"in\",\n      \"negate\": false,\n      \"values\": [\"Mexico\", \"Canada\"]\n    }\n  }]\n}\n```\n\n#### updateDefaultVariation\n\nUpdates the default on or off variation of the flag.\n\n##### Parameters\n\n- `onVariationValue`: (Optional) The value of the variation of the new on variation.\n- `offVariationValue`: (Optional) The value of the variation of the new off variation\n\nHere's an example:\n\n```json\n{\n\t\"instructions\": [ { \"kind\": \"updateDefaultVariation\", \"OnVariationValue\": true, \"OffVariationValue\": false } ]\n}\n```\n\n#### updateFallthroughVariationOrRollout\n\nUpdates the default or \"fallthrough\" rule for the flag, which the flag serves when a context matches none of the targeting rules. The rule can serve either the variation that `variationId` indicates, or a percentage rollout that `rolloutWeights` and `rolloutBucketBy` indicate.\n\n##### Parameters\n\n- `variationId`: ID of a variation of the flag.\n\nor\n\n- `rolloutWeights`: Map of `variationId` to weight, in thousandths of a percent (0-100000).\n- `rolloutBucketBy`: (Optional) Context attribute available in the specified `rolloutContextKind`.\n- `rolloutContextKind`: (Optional) Context kind, defaults to `user`\n\nHere's an example that uses a `variationId`:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updateFallthroughVariationOrRollout\",\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\nHere's an example that uses a percentage rollout:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updateFallthroughVariationOrRollout\",\n\t\t\"rolloutContextKind\": \"user\",\n\t\t\"rolloutWeights\": {\n\t\t\t\"2f43f67c-3e4e-4945-a18a-26559378ca00\": 15000, // serve 15% this variation\n\t\t\t\"e5830889-1ec5-4b0c-9cc9-c48790090c43\": 85000  // serve 85% this variation\n\t\t}\n\t}]\n}\n```\n\n#### updateOffVariation\n\nUpdates the default off variation to `variationId`. The flag serves the default off variation when the flag's targeting is **Off**.\n\n##### Parameters\n\n- `variationId`: ID of a variation of the flag.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"updateOffVariation\", \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\" } ]\n}\n```\n\n#### updatePrerequisite\n\nChanges the prerequisite flag that `key` indicates to use the variation that `variationId` indicates. Returns an error if this prerequisite does not exist.\n\n##### Parameters\n\n- `key`: Flag key of an existing prerequisite flag.\n- `variationId`: ID of a variation of the prerequisite flag.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updatePrerequisite\",\n\t\t\"key\": \"example-prereq-flag-key\",\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### updateRuleDescription\n\nUpdates the description of the feature flag rule.\n\n##### Parameters\n\n- `description`: The new human-readable description for this rule.\n- `ruleId`: The ID of the rule. You can retrieve this by making a GET request for the flag.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updateRuleDescription\",\n\t\t\"description\": \"New rule description\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\"\n\t}]\n}\n```\n\n#### updateRuleTrackEvents\n\nUpdates whether or not LaunchDarkly tracks events for the feature flag associated with this rule.\n\n##### Parameters\n\n- `ruleId`: The ID of the rule. You can retrieve this by making a GET request for the flag.\n- `trackEvents`: Whether or not events are tracked.\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updateRuleTrackEvents\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"trackEvents\": true\n\t}]\n}\n```\n\n#### updateRuleVariationOrRollout\n\nUpdates what `ruleId` serves when its clauses evaluate to true. The rule can serve either the variation that `variationId` indicates, or a percent rollout that `rolloutWeights` and `rolloutBucketBy` indicate.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `variationId`: ID of a variation of the flag.\n\n  or\n\n- `rolloutWeights`: Map of `variationId` to weight, in thousandths of a percent (0-100000).\n- `rolloutBucketBy`: (Optional) Context attribute available in the specified `rolloutContextKind`.\n- `rolloutContextKind`: (Optional) Context kind, defaults to `user`\n\nHere's an example:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updateRuleVariationOrRollout\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### updateTrackEvents\n\nUpdates whether or not LaunchDarkly tracks events for the feature flag, for all rules.\n\n##### Parameters\n\n- `trackEvents`: Whether or not events are tracked.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"updateTrackEvents\", \"trackEvents\": true } ]\n}\n```\n\n#### updateTrackEventsFallthrough\n\nUpdates whether or not LaunchDarkly tracks events for the feature flag, for the default rule.\n\n##### Parameters\n\n- `trackEvents`: Whether or not events are tracked.\n\nHere's an example:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"updateTrackEventsFallthrough\", \"trackEvents\": true } ]\n}\n```\n\n#### updateVariation\n\nUpdates a variation of the flag.\n\n##### Parameters\n\n- `variationId`: The ID of the variation to update.\n- `name`: (Optional) The updated variation name.\n- `value`: (Optional) The updated variation value.\n- `description`: (Optional) The updated variation description.\n\nHere's an example:\n\n```json\n{\n\t\"instructions\": [ { \"kind\": \"updateVariation\", \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\", \"value\": 20 } ]\n}\n```\n\n\u003c/details\u003e\u003cbr /\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003eClick to expand instructions for \u003cstrong\u003eupdating flag settings\u003c/strong\u003e\u003c/summary\u003e\n\nThese instructions do not require the `environmentKey` parameter. They make changes that apply to the flag across all environments.\n\n#### addCustomProperties\n\nAdds a new custom property to the feature flag. Custom properties are used to associate feature flags with LaunchDarkly integrations. For example, if you create an integration with an issue tracking service, you may want to associate a flag with a list of issues related to a feature's development.\n\n##### Parameters\n\n - `key`: The custom property key.\n - `name`: The custom property name.\n - `values`: A list of the associated values for the custom property.\n\nHere's an example:\n\n```json\n{\n\t\"instructions\": [{\n\t\t\"kind\": \"addCustomProperties\",\n\t\t\"key\": \"example-custom-property\",\n\t\t\"name\": \"Example custom property\",\n\t\t\"values\": [\"value1\", \"value2\"]\n\t}]\n}\n```\n\n#### addTags\n\nAdds tags to the feature flag.\n\n##### Parameters\n\n- `values`: A list of tags to add.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"addTags\", \"values\": [\"tag1\", \"tag2\"] } ]\n}\n```\n\n#### makeFlagPermanent\n\nMarks the feature flag as permanent. LaunchDarkly does not prompt you to remove permanent flags, even if one variation is rolled out to all your customers.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"makeFlagPermanent\" } ]\n}\n```\n\n#### makeFlagTemporary\n\nMarks the feature flag as temporary.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"makeFlagTemporary\" } ]\n}\n```\n\n#### removeCustomProperties\n\nRemoves the associated values from a custom property. If all the associated values are removed, this instruction also removes the custom property.\n\n##### Parameters\n\n - `key`: The custom property key.\n - `values`: A list of the associated values to remove from the custom property.\n\n```json\n{\n\t\"instructions\": [{\n\t\t\"kind\": \"replaceCustomProperties\",\n\t\t\"key\": \"example-custom-property\",\n\t\t\"values\": [\"value1\", \"value2\"]\n\t}]\n}\n```\n\n#### removeMaintainer\n\nRemoves the flag's maintainer. To set a new maintainer, use the `updateMaintainerMember` or `updateMaintainerTeam` instructions.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"removeMaintainer\" } ]\n}\n```\n\n#### removeTags\n\nRemoves tags from the feature flag.\n\n##### Parameters\n\n- `values`: A list of tags to remove.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"removeTags\", \"values\": [\"tag1\", \"tag2\"] } ]\n}\n```\n\n#### replaceCustomProperties\n\nReplaces the existing associated values for a custom property with the new values.\n\n##### Parameters\n\n - `key`: The custom property key.\n - `name`: The custom property name.\n - `values`: A list of the new associated values for the custom property.\n\nHere's an example:\n\n```json\n{\n \"instructions\": [{\n   \"kind\": \"replaceCustomProperties\",\n   \"key\": \"example-custom-property\",\n   \"name\": \"Example custom property\",\n   \"values\": [\"value1\", \"value2\"]\n }]\n}\n```\n\n#### turnOffClientSideAvailability\n\nTurns off client-side SDK availability for the flag. This is equivalent to unchecking the **SDKs using Mobile key** and/or **SDKs using Client-side ID** boxes for the flag. If you're using a client-side or mobile SDK, you must expose your feature flags in order for the client-side or mobile SDKs to evaluate them.\n\n##### Parameters\n\n- `value`: Use \"usingMobileKey\" to turn off availability for mobile SDKs. Use \"usingEnvironmentId\" to turn on availability for client-side SDKs.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"turnOffClientSideAvailability\", \"value\": \"usingMobileKey\" } ]\n}\n```\n\n#### turnOnClientSideAvailability\n\nTurns on client-side SDK availability for the flag. This is equivalent to checking the **SDKs using Mobile key** and/or **SDKs using Client-side ID** boxes for the flag. If you're using a client-side or mobile SDK, you must expose your feature flags in order for the client-side or mobile SDKs to evaluate them.\n\n##### Parameters\n\n- `value`: Use \"usingMobileKey\" to turn on availability for mobile SDKs. Use \"usingEnvironmentId\" to turn on availability for client-side SDKs.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"turnOnClientSideAvailability\", \"value\": \"usingMobileKey\" } ]\n}\n```\n\n#### updateDescription\n\nUpdates the feature flag description.\n\n##### Parameters\n\n- `value`: The new description.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"updateDescription\", \"value\": \"Updated flag description\" } ]\n}\n```\n#### updateMaintainerMember\n\nUpdates the maintainer of the flag to an existing member and removes the existing maintainer.\n\n##### Parameters\n\n- `value`: The ID of the member.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"updateMaintainerMember\", \"value\": \"61e9b714fd47591727db558a\" } ]\n}\n```\n\n#### updateMaintainerTeam\n\nUpdates the maintainer of the flag to an existing team and removes the existing maintainer.\n\n##### Parameters\n\n- `value`: The key of the team.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"updateMaintainerTeam\", \"value\": \"example-team-key\" } ]\n}\n```\n\n#### updateName\n\nUpdates the feature flag name.\n\n##### Parameters\n\n- `value`: The new name.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"updateName\", \"value\": \"Updated flag name\" } ]\n}\n```\n\n\u003c/details\u003e\u003cbr /\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003eClick to expand instructions for \u003cstrong\u003eupdating the flag lifecycle\u003c/strong\u003e\u003c/summary\u003e\n\nThese instructions do not require the `environmentKey` parameter. They make changes that apply to the flag across all environments.\n\n#### archiveFlag\n\nArchives the feature flag. This retires it from LaunchDarkly without deleting it. You cannot archive a flag that is a prerequisite of other flags.\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"archiveFlag\" } ]\n}\n```\n\n#### deleteFlag\n\nDeletes the feature flag and its rules. You cannot restore a deleted flag. If this flag is requested again, the flag value defined in code will be returned for all contexts.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"deleteFlag\" } ]\n}\n```\n\n#### deprecateFlag\n\nDeprecates the feature flag. This hides it from the live flags list without archiving or deleting it.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"deprecateFlag\" } ]\n}\n```\n\n#### restoreDeprecatedFlag\n\nRestores the feature flag if it was previously deprecated.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"restoreDeprecatedFlag\" } ]\n}\n```\n\n#### restoreFlag\n\nRestores the feature flag if it was previously archived.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [ { \"kind\": \"restoreFlag\" } ]\n}\n```\n\n\u003c/details\u003e\n\n### Using JSON patches on a feature flag\n\nIf you do not include the semantic patch header described above, you can use a [JSON patch](https://launchdarkly.com/docs/api#updates-using-json-patch) or [JSON merge patch](https://datatracker.ietf.org/doc/html/rfc7386) representation of the desired changes.\n\nIn the JSON patch representation, use a JSON pointer in the `path` element to describe what field to change. Use the [Get feature flag](https://launchdarkly.com/docs/api/feature-flags/get-feature-flag) endpoint to find the field you want to update.\n\nThere are a few special cases to keep in mind when determining the value of the `path` element:\n\n  * To add an individual target to a specific variation if the flag variation already has individual targets, the path for the JSON patch operation is:\n\n  ```json\n  [\n    {\n      \"op\": \"add\",\n      \"path\": \"/environments/devint/targets/0/values/-\",\n      \"value\": \"TestClient10\"\n    }\n  ]\n  ```\n\n  * To add an individual target to a specific variation if the flag variation does not already have individual targets, the path for the JSON patch operation is:\n\n  ```json\n  [\n    {\n      \"op\": \"add\",\n      \"path\": \"/environments/devint/targets/-\",\n      \"value\": { \"variation\": 0, \"values\": [\"TestClient10\"] }\n    }\n  ]\n  ```\n\n  * To add a flag to a release pipeline, the path for the JSON patch operation is:\n\n  ```json\n  [\n    {\n      \"op\": \"add\",\n      \"path\": \"/releasePipelineKey\",\n      \"value\": \"example-release-pipeline-key\"\n    }\n  ]\n  ```\n\n### Required approvals\nIf a request attempts to alter a flag configuration in an environment where approvals are required for the flag, the request will fail with a 405. Changes to the flag configuration in that environment will require creating an [approval request](https://launchdarkly.com/docs/api/approvals) or a [workflow](https://launchdarkly.com/docs/api/workflows).\n\n### Conflicts\nIf a flag configuration change made through this endpoint would cause a pending scheduled change or approval request to fail, this endpoint will return a 400. You can ignore this check by adding an `ignoreConflicts` query parameter set to `true`.\n\n### Migration flags\nFor migration flags, the cohort information is included in the `rules` property of a flag's response. You can update cohorts by updating `rules`. Default cohort information is included in the `fallthrough` property of a flag's response. You can update the default cohort by updating `fallthrough`.\nWhen you update the rollout for a cohort or the default cohort through the API, provide a rollout instead of a single `variationId`.\nTo learn more, read [Migration flags](https://launchdarkly.com/docs/home/flags/migration).\n",
        "parameters": [
          {
            "name": "projectKey",
            "in": "path",
            "description": "The project key",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string",
              "description": "The project key"
            }
          },
          {
            "name": "featureFlagKey",
            "in": "path",
            "description": "The feature flag key. The key identifies the flag in your code.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string",
              "description": "The feature flag key. The key identifies the flag in your code."
            }
          },
          {
            "name": "ignoreConflicts",
            "in": "query",
            "description": "If true, the patch will be applied even if it causes a pending scheduled change or approval request to fail.",
            "schema": {
              "type": "boolean",
              "description": "If true, the patch will be applied even if it causes a pending scheduled change or approval request to fail."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchWithComment"
              },
              "example": {
                "patch": [
                  {
                    "op": "replace",
                    "path": "/description",
                    "value": "New description for this flag"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "operationId": "patchFeatureFlag",
        "x-speakeasy-mcp": {
          "description": "Updates the configuration of an existing feature flag. Enables agents to change targeting rules, modify variations, or adapt rollout strategies dynamically in response to user behavior or experiment results.\n",
          "disabled": false,
          "name": "update-feature-flag",
          "scopes": [
            "write"
          ]
        },
        "x-speakeasy-group": "featureFlags",
        "x-speakeasy-name-override": "patch"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Action succeeded"
          },
          "401": {
            "description": "Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorRep"
                }
              }
            }
          },
          "404": {
            "description": "Invalid resource identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorRep"
                }
              }
            }
          },
          "409": {
            "description": "Status conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusConflictErrorRep"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitedErrorRep"
                }
              }
            }
          }
        },
        "tags": [
          "Feature flags"
        ],
        "summary": "Delete feature flag",
        "description": "Delete a feature flag in all environments. Use with caution: only delete feature flags your application no longer uses.",
        "parameters": [
          {
            "name": "projectKey",
            "in": "path",
            "description": "The project key",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string",
              "description": "The project key"
            }
          },
          {
            "name": "featureFlagKey",
            "in": "path",
            "description": "The feature flag key. The key identifies the flag in your code.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string",
              "description": "The feature flag key. The key identifies the flag in your code."
            }
          }
        ],
        "operationId": "deleteFeatureFlag",
        "x-speakeasy-mcp": {
          "description": "Removes a feature flag from the project. Used by AI agents to clean up deprecated toggles that are no longer in use, improving system hygiene and maintainability.\n",
          "disabled": false,
          "name": "delete-feature-flag",
          "scopes": [
            "write"
          ]
        },
        "x-speakeasy-group": "featureFlags",
        "x-speakeasy-name-override": "delete"
      }
    },
    "/api/v2/flags/{projectKey}/{featureFlagKey}/copy": {},
    "/api/v2/flags/{projectKey}/{featureFlagKey}/dependent-flags": {},
    "/api/v2/flags/{projectKey}/{featureFlagKey}/expiring-targets/{environmentKey}": {},
    "/api/v2/flags/{projectKey}/{featureFlagKey}/expiring-user-targets/{environmentKey}": {},
    "/api/v2/flags/{projectKey}/{featureFlagKey}/triggers/{environmentKey}": {},
    "/api/v2/flags/{projectKey}/{featureFlagKey}/triggers/{environmentKey}/{id}": {},
    "/api/v2/flags/{projectKey}/{flagKey}/release": {},
    "/api/v2/integration-capabilities/big-segment-store": {},
    "/api/v2/integration-capabilities/big-segment-store/{projectKey}/{environmentKey}/{integrationKey}": {},
    "/api/v2/integration-capabilities/big-segment-store/{projectKey}/{environmentKey}/{integrationKey}/{integrationId}": {},
    "/api/v2/integration-capabilities/featureStore": {},
    "/api/v2/integration-capabilities/featureStore/{projectKey}/{environmentKey}": {},
    "/api/v2/integration-capabilities/featureStore/{projectKey}/{environmentKey}/{integrationKey}": {},
    "/api/v2/integration-capabilities/featureStore/{projectKey}/{environmentKey}/{integrationKey}/{id}": {},
    "/api/v2/integration-capabilities/featureStore/{projectKey}/{environmentKey}/{integrationKey}/{id}/validate": {},
    "/api/v2/integration-capabilities/flag-import": {},
    "/api/v2/integration-capabilities/flag-import/{projectKey}/{integrationKey}": {},
    "/api/v2/integration-capabilities/flag-import/{projectKey}/{integrationKey}/{integrationId}": {},
    "/api/v2/integration-capabilities/flag-import/{projectKey}/{integrationKey}/{integrationId}/trigger": {},
    "/api/v2/integration-configurations/keys/{integrationKey}": {},
    "/api/v2/integration-configurations/{integrationConfigurationId}": {},
    "/api/v2/integrations/{integrationKey}": {},
    "/api/v2/integrations/{integrationKey}/{id}": {},
    "/api/v2/members": {},
    "/api/v2/members/{id}": {},
    "/api/v2/members/{id}/teams": {},
    "/api/v2/metrics/{projectKey}": {},
    "/api/v2/metrics/{projectKey}/{metricKey}": {},
    "/api/v2/oauth/clients": {},
    "/api/v2/oauth/clients/{clientId}": {},
    "/api/v2/openapi.json": {},
    "/api/v2/projects": {},
    "/api/v2/projects/{projectKey}": {},
    "/api/v2/projects/{projectKey}/context-kinds": {},
    "/api/v2/projects/{projectKey}/context-kinds/{key}": {},
    "/api/v2/projects/{projectKey}/environments": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/apiKey": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/context-attributes": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/context-attributes/{attributeName}": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/context-instances/search": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/context-instances/{id}": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/contexts/search": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/contexts/{contextKind}/{contextKey}/flags/{featureFlagKey}": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/contexts/{kind}/{key}": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/experiments": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/experiments/{experimentKey}": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/experiments/{experimentKey}/iterations": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/experiments/{experimentKey}/metric-groups/{metricGroupKey}/results": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/experiments/{experimentKey}/metrics/{metricKey}/results": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/followers": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/holdouts": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/holdouts/id/{holdoutId}": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/holdouts/{holdoutKey}": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/mobileKey": {},
    "/api/v2/projects/{projectKey}/environments/{environmentKey}/segments/evaluate": {},
    "/api/v2/projects/{projectKey}/experimentation-settings": {},
    "/api/v2/projects/{projectKey}/flag-defaults": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests-flag-copy": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}/apply": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}/reviews": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/followers": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/followers/{memberId}": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes/{id}": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/workflows": {},
    "/api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/workflows/{workflowId}": {},
    "/api/v2/projects/{projectKey}/flags/{flagKey}/environments/{environmentKey}/migration-safety-issues": {},
    "/api/v2/projects/{projectKey}/flags/{flagKey}/release": {},
    "/api/v2/projects/{projectKey}/flags/{flagKey}/release/phases/{phaseId}": {},
    "/api/v2/projects/{projectKey}/layers": {},
    "/api/v2/projects/{projectKey}/layers/{layerKey}": {},
    "/api/v2/projects/{projectKey}/metric-groups": {},
    "/api/v2/projects/{projectKey}/metric-groups/{metricGroupKey}": {},
    "/api/v2/projects/{projectKey}/release-pipelines": {},
    "/api/v2/projects/{projectKey}/release-pipelines/{pipelineKey}": {},
    "/api/v2/projects/{projectKey}/release-pipelines/{pipelineKey}/releases": {},
    "/api/v2/public-ip-list": {},
    "/api/v2/roles": {},
    "/api/v2/roles/{customRoleKey}": {},
    "/api/v2/segments/{projectKey}/{environmentKey}": {},
    "/api/v2/segments/{projectKey}/{environmentKey}/{segmentKey}": {},
    "/api/v2/segments/{projectKey}/{environmentKey}/{segmentKey}/contexts": {},
    "/api/v2/segments/{projectKey}/{environmentKey}/{segmentKey}/contexts/{contextKey}": {},
    "/api/v2/segments/{projectKey}/{environmentKey}/{segmentKey}/exports": {},
    "/api/v2/segments/{projectKey}/{environmentKey}/{segmentKey}/exports/{exportID}": {},
    "/api/v2/segments/{projectKey}/{environmentKey}/{segmentKey}/imports": {},
    "/api/v2/segments/{projectKey}/{environmentKey}/{segmentKey}/imports/{importID}": {},
    "/api/v2/segments/{projectKey}/{environmentKey}/{segmentKey}/users": {},
    "/api/v2/segments/{projectKey}/{environmentKey}/{segmentKey}/users/{userKey}": {},
    "/api/v2/segments/{projectKey}/{segmentKey}/expiring-targets/{environmentKey}": {},
    "/api/v2/segments/{projectKey}/{segmentKey}/expiring-user-targets/{environmentKey}": {},
    "/api/v2/teams": {},
    "/api/v2/teams/{teamKey}": {},
    "/api/v2/teams/{teamKey}/maintainers": {},
    "/api/v2/teams/{teamKey}/members": {},
    "/api/v2/teams/{teamKey}/roles": {},
    "/api/v2/templates": {},
    "/api/v2/templates/{templateKey}": {},
    "/api/v2/tokens": {},
    "/api/v2/tokens/{id}": {},
    "/api/v2/tokens/{id}/reset": {},
    "/api/v2/usage/data-export-events": {},
    "/api/v2/usage/evaluations/{projectKey}/{environmentKey}/{featureFlagKey}": {},
    "/api/v2/usage/events/{type}": {},
    "/api/v2/usage/experimentation-keys": {},
    "/api/v2/usage/experimentation-units": {},
    "/api/v2/usage/mau": {},
    "/api/v2/usage/mau/bycategory": {},
    "/api/v2/usage/mau/sdks": {},
    "/api/v2/usage/service-connections": {},
    "/api/v2/usage/streams/{source}": {},
    "/api/v2/usage/streams/{source}/bysdkversion": {},
    "/api/v2/usage/streams/{source}/sdkversions": {},
    "/api/v2/user-attributes/{projectKey}/{environmentKey}": {},
    "/api/v2/user-search/{projectKey}/{environmentKey}": {},
    "/api/v2/users/{projectKey}/{environmentKey}": {},
    "/api/v2/users/{projectKey}/{environmentKey}/{userKey}": {},
    "/api/v2/users/{projectKey}/{environmentKey}/{userKey}/flags": {},
    "/api/v2/users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}": {},
    "/api/v2/users/{projectKey}/{userKey}/expiring-user-targets/{environmentKey}": {},
    "/api/v2/versions": {},
    "/api/v2/webhooks": {},
    "/api/v2/webhooks/{id}": {},
    "/api/v2/tags": {},
    "/api/v2/projects/{projectKey}/ai-configs": {
      "get": {
        "description": "Get a list of all AI Configs in the given project.",
        "operationId": "getAIConfigs",
        "parameters": [
          {
            "description": "Version of the endpoint.",
            "explode": false,
            "in": "header",
            "name": "LD-API-Version",
            "required": true,
            "schema": {
              "enum": [
                "beta"
              ],
              "type": "string"
            },
            "style": "simple"
          },
          {
            "example": "default",
            "explode": false,
            "in": "path",
            "name": "projectKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "A sort to apply to the list of AI Configs.",
            "explode": true,
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The number of AI Configs to return.",
            "explode": true,
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Where to start in the list. Use this with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`.",
            "explode": true,
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A filter to apply to the list of AI Configs.",
            "explode": true,
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIConfigs"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "List AI Configs",
        "tags": [
          "AI Configs (beta)"
        ],
        "x-speakeasy-mcp": {
          "description": "Retrieves AI configuration settings for a specific project. This endpoint allows agents to access and modify AI-related configurations, ensuring that the AI's behavior aligns with project requirements and user expectations.\n",
          "disabled": false,
          "name": "list-ai-configs",
          "scopes": [
            "read"
          ]
        },
        "x-speakeasy-group": "aiConfigs",
        "x-speakeasy-name-override": "list"
      },
      "post": {
        "description": "Create a new AI Config within the given project.",
        "operationId": "postAIConfig",
        "parameters": [
          {
            "description": "Version of the endpoint.",
            "explode": false,
            "in": "header",
            "name": "LD-API-Version",
            "required": true,
            "schema": {
              "enum": [
                "beta"
              ],
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "projectKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIConfigPost"
              }
            }
          },
          "description": "AI Config object to create",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIConfig"
                }
              }
            },
            "description": "AI Config created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Create new AI Config",
        "tags": [
          "AI Configs (beta)"
        ],
        "x-speakeasy-mcp": {
          "name": "create-ai-config",
          "description": "Creates a new AI Config within a project. Useful for setting up LLM configurations programmatically.\n",
          "disabled": false,
          "scopes": [
            "write"
          ]
        },
        "x-speakeasy-name-override": "create",
        "x-speakeasy-group": "aiConfigs"
      }
    },
    "/api/v2/projects/{projectKey}/ai-configs/{configKey}": {
      "delete": {
        "description": "Delete an existing AI Config.",
        "operationId": "deleteAIConfig",
        "parameters": [
          {
            "description": "Version of the endpoint.",
            "explode": false,
            "in": "header",
            "name": "LD-API-Version",
            "required": true,
            "schema": {
              "enum": [
                "beta"
              ],
              "type": "string"
            },
            "style": "simple"
          },
          {
            "example": "default",
            "explode": false,
            "in": "path",
            "name": "projectKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "configKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Delete AI Config",
        "tags": [
          "AI Configs (beta)"
        ],
        "x-speakeasy-mcp": {
          "name": "delete-ai-config",
          "description": "Deletes an AI Config and its associated variations. Intended for cleanup or deprecation workflows.\n",
          "disabled": false,
          "scopes": [
            "write"
          ]
        },
        "x-speakeasy-group": "aiConfigs",
        "x-speakeasy-name-override": "delete"
      },
      "get": {
        "description": "Retrieve a specific AI Config by its key.",
        "operationId": "getAIConfig",
        "parameters": [
          {
            "description": "Version of the endpoint.",
            "explode": false,
            "in": "header",
            "name": "LD-API-Version",
            "required": true,
            "schema": {
              "enum": [
                "beta"
              ],
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "projectKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "configKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIConfig"
                }
              }
            },
            "description": "AI Config found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Get AI Config",
        "tags": [
          "AI Configs (beta)"
        ],
        "x-speakeasy-mcp": {
          "name": "get-ai-config",
          "description": "Retrieves details of a specific AI Config, including variations and model settings.",
          "disabled": false,
          "scopes": [
            "read"
          ]
        },
        "x-speakeasy-group": "aiConfigs",
        "x-speakeasy-name-override": "get"
      },
      "patch": {
        "description": "Edit an existing AI Config.\n\nThe request body must be a JSON object of the fields to update. The values you include replace the existing values for the fields.\n\nHere's an example:\n  ```\n    {\n      \"description\": \"Example updated description\",\n      \"tags\": [\"new-tag\"]\n    }\n  ```\n",
        "operationId": "patchAIConfig",
        "parameters": [
          {
            "description": "Version of the endpoint.",
            "explode": false,
            "in": "header",
            "name": "LD-API-Version",
            "required": true,
            "schema": {
              "enum": [
                "beta"
              ],
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "projectKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "configKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIConfigPatch"
              }
            }
          },
          "description": "AI Config object to update"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIConfig"
                }
              }
            },
            "description": "AI Config updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Update AI Config",
        "tags": [
          "AI Configs (beta)"
        ],
        "x-speakeasy-mcp": {
          "name": "update-ai-config",
          "description": "Updates metadata or configuration of an existing AI Config.",
          "disabled": false,
          "scopes": [
            "write"
          ]
        },
        "x-speakeasy-group": "aiConfigs",
        "x-speakeasy-name-override": "update"
      }
    },
    "/api/v2/projects/{projectKey}/ai-configs/{configKey}/variations": {
      "post": {
        "description": "Create a new variation for a given AI Config.\n\nThe \u003ccode\u003emodel\u003c/code\u003e in the request body requires a \u003ccode\u003emodelName\u003c/code\u003e and \u003ccode\u003eparameters\u003c/code\u003e, for example:\n\n```\n  \"model\": {\n    \"modelName\": \"claude-3-opus-20240229\",\n    \"parameters\": {\n      \"max_tokens\": 1024\n    }\n  }\n```\n",
        "operationId": "postAIConfigVariation",
        "parameters": [
          {
            "description": "Version of the endpoint.",
            "explode": false,
            "in": "header",
            "name": "LD-API-Version",
            "required": true,
            "schema": {
              "enum": [
                "beta"
              ],
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "projectKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "configKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIConfigVariationPost"
              }
            }
          },
          "description": "AI Config variation object to create",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIConfigVariation"
                }
              }
            },
            "description": "AI Config variation created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Create AI Config variation",
        "tags": [
          "AI Configs (beta)"
        ],
        "x-speakeasy-mcp": {
          "name": "create-ai-config-variation",
          "description": "Adds a new variation to an AI Config, supporting experimentation or multi-model strategies.\n",
          "disabled": false,
          "scopes": [
            "write"
          ]
        },
        "x-speakeasy-group": "aiConfigs",
        "x-speakeasy-name-override": "createVariation"
      }
    },
    "/api/v2/projects/{projectKey}/ai-configs/{configKey}/variations/{variationKey}": {
      "delete": {
        "description": "Delete a specific variation of an AI Config by config key and variation key.",
        "operationId": "deleteAIConfigVariation",
        "parameters": [
          {
            "description": "Version of the endpoint.",
            "explode": false,
            "in": "header",
            "name": "LD-API-Version",
            "required": true,
            "schema": {
              "enum": [
                "beta"
              ],
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "projectKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "configKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "variationKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Delete AI Config variation",
        "tags": [
          "AI Configs (beta)"
        ],
        "x-speakeasy-mcp": {
          "name": "delete-ai-config-variation",
          "description": "Deletes an AI Config variation.",
          "disabled": false,
          "scopes": [
            "write"
          ]
        },
        "x-speakeasy-group": "aiConfigs",
        "x-speakeasy-name-override": "deleteVariation"
      },
      "get": {
        "description": "Get an AI Config variation by key. The response includes all variation versions for the given variation key.",
        "operationId": "getAIConfigVariation",
        "parameters": [
          {
            "description": "Version of the endpoint.",
            "explode": false,
            "in": "header",
            "name": "LD-API-Version",
            "required": true,
            "schema": {
              "enum": [
                "beta"
              ],
              "type": "string"
            },
            "style": "simple"
          },
          {
            "example": "default",
            "explode": false,
            "in": "path",
            "name": "projectKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "example": "default",
            "explode": false,
            "in": "path",
            "name": "configKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "example": "default",
            "explode": false,
            "in": "path",
            "name": "variationKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIConfigVariationsResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Get AI Config variation",
        "tags": [
          "AI Configs (beta)"
        ],
        "x-speakeasy-mcp": {
          "name": "get-ai-config-variation",
          "description": "Retrieves an AI configuration variation.",
          "disabled": false,
          "scopes": [
            "read"
          ]
        },
        "x-speakeasy-group": "aiConfigs",
        "x-speakeasy-name-override": "getVariation"
      },
      "patch": {
        "description": "Edit an existing variation of an AI Config. This creates a new version of the variation.\n\nThe request body must be a JSON object of the fields to update. The values you include replace the existing values for the fields.\n\nHere's an example:\n```\n  {\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"The new message\"\n      }\n    ]\n  }\n```\n",
        "operationId": "patchAIConfigVariation",
        "parameters": [
          {
            "description": "Version of the endpoint.",
            "explode": false,
            "in": "header",
            "name": "LD-API-Version",
            "required": true,
            "schema": {
              "enum": [
                "beta"
              ],
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "projectKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "configKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "explode": false,
            "in": "path",
            "name": "variationKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIConfigVariationPatch"
              }
            }
          },
          "description": "AI Config variation object to update"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIConfigVariation"
                }
              }
            },
            "description": "AI Config variation updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "summary": "Update AI Config variation",
        "tags": [
          "AI Configs (beta)"
        ],
        "x-speakeasy-mcp": {
          "name": "update-ai-config-variation",
          "description": "Updates a specific variation within an AI Config. Enables fine-tuned control of model behavior.\n",
          "disabled": false,
          "scopes": [
            "write"
          ]
        },
        "x-speakeasy-group": "aiConfigs",
        "x-speakeasy-name-override": "updateVariation"
      }
    },
    "/api/v2/projects/{projectKey}/ai-configs/{configKey}/metrics": {},
    "/api/v2/projects/{projectKey}/ai-configs/{configKey}/metrics-by-variation": {},
    "/api/v2/projects/{projectKey}/ai-configs/model-configs/restricted": {},
    "/api/v2/projects/{projectKey}/ai-configs/model-configs": {},
    "/api/v2/projects/{projectKey}/ai-configs/model-configs/{modelConfigKey}": {},
    "/api/v2/announcements": {},
    "/api/v2/announcements/{announcementId}": {},
    "/api/v2/engineering-insights/charts/deployments/frequency": {},
    "/api/v2/engineering-insights/charts/flags/stale": {},
    "/api/v2/engineering-insights/charts/flags/status": {},
    "/api/v2/engineering-insights/charts/lead-time": {},
    "/api/v2/engineering-insights/charts/releases/frequency": {},
    "/api/v2/engineering-insights/deployment-events": {},
    "/api/v2/engineering-insights/deployments": {},
    "/api/v2/engineering-insights/deployments/{deploymentID}": {},
    "/api/v2/engineering-insights/flag-events": {},
    "/api/v2/engineering-insights/insights/group": {},
    "/api/v2/engineering-insights/insights/groups": {},
    "/api/v2/engineering-insights/insights/groups/{insightGroupKey}": {},
    "/api/v2/engineering-insights/insights/scores": {},
    "/api/v2/engineering-insights/pull-requests": {},
    "/api/v2/engineering-insights/repositories": {},
    "/api/v2/engineering-insights/repositories/projects": {},
    "/api/v2/engineering-insights/repositories/{repositoryKey}/projects/{projectKey}": {}
  },
  "components": {
    "schemas": {
      "AIConfigRep": {
        "type": "object",
        "required": [
          "key",
          "name"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the AI Config",
            "example": "aiconfig-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "The name of the AI Config",
            "example": "AI Config 1"
          }
        }
      },
      "Access": {
        "type": "object",
        "required": [
          "denied",
          "allowed"
        ],
        "properties": {
          "denied": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessDenied"
            }
          },
          "allowed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessAllowedRep"
            }
          }
        }
      },
      "AccessAllowedReason": {
        "type": "object",
        "required": [
          "effect"
        ],
        "properties": {
          "resources": {
            "type": "array",
            "description": "Resource specifier strings",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/*:env/*;qa_*:/flag/*"
            ]
          },
          "notResources": {
            "type": "array",
            "description": "Targeted resources are the resources NOT in this list. The \u003ccode\u003eresources\u003c/code\u003e and \u003ccode\u003enotActions\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "type": "string"
            }
          },
          "actions": {
            "type": "array",
            "description": "Actions to perform on a resource",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "example": [
              "*"
            ]
          },
          "notActions": {
            "type": "array",
            "description": "Targeted actions are the actions NOT in this list. The \u003ccode\u003eactions\u003c/code\u003e and \u003ccode\u003enotResources\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            }
          },
          "effect": {
            "type": "string",
            "description": "Whether this statement should allow or deny actions on the resources.",
            "example": "allow",
            "enum": [
              "allow",
              "deny"
            ]
          },
          "role_name": {
            "type": "string"
          }
        }
      },
      "AccessAllowedRep": {
        "type": "object",
        "required": [
          "action",
          "reason"
        ],
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionIdentifier"
          },
          "reason": {
            "$ref": "#/components/schemas/AccessAllowedReason"
          }
        }
      },
      "AccessDenied": {
        "type": "object",
        "required": [
          "action",
          "reason"
        ],
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionIdentifier"
          },
          "reason": {
            "$ref": "#/components/schemas/AccessDeniedReason"
          }
        }
      },
      "AccessDeniedReason": {
        "type": "object",
        "required": [
          "effect"
        ],
        "properties": {
          "resources": {
            "type": "array",
            "description": "Resource specifier strings",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/*:env/*;qa_*:/flag/*"
            ]
          },
          "notResources": {
            "type": "array",
            "description": "Targeted resources are the resources NOT in this list. The \u003ccode\u003eresources\u003c/code\u003e and \u003ccode\u003enotActions\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "type": "string"
            }
          },
          "actions": {
            "type": "array",
            "description": "Actions to perform on a resource",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "example": [
              "*"
            ]
          },
          "notActions": {
            "type": "array",
            "description": "Targeted actions are the actions NOT in this list. The \u003ccode\u003eactions\u003c/code\u003e and \u003ccode\u003enotResources\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            }
          },
          "effect": {
            "type": "string",
            "description": "Whether this statement should allow or deny actions on the resources.",
            "example": "allow",
            "enum": [
              "allow",
              "deny"
            ]
          },
          "role_name": {
            "type": "string"
          }
        }
      },
      "AccessTokenPost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the access token"
          },
          "description": {
            "type": "string",
            "description": "A description for the access token"
          },
          "role": {
            "type": "string",
            "description": "Built-in role for the token",
            "enum": [
              "reader",
              "writer",
              "admin"
            ]
          },
          "customRoleIds": {
            "type": "array",
            "description": "A list of custom role IDs to use as access limits for the access token",
            "items": {
              "type": "string"
            }
          },
          "inlineRole": {
            "type": "array",
            "description": "A JSON array of statements represented as JSON objects with three attributes: effect, resources, actions. May be used in place of a built-in or custom role.",
            "items": {
              "$ref": "#/components/schemas/StatementPost"
            }
          },
          "serviceToken": {
            "type": "boolean",
            "description": "Whether the token is a service token"
          },
          "defaultApiVersion": {
            "type": "integer",
            "description": "The default API version for this token"
          }
        }
      },
      "ActionIdentifier": {
        "type": "string"
      },
      "ActionInput": {
        "type": "object",
        "properties": {
          "instructions": {
            "description": "An array of instructions for the stage. Each object in the array uses the semantic patch format for updating a feature flag.",
            "example": "{\"instructions\": [{ \"kind\": \"turnFlagOn\"}]}"
          }
        }
      },
      "ActionOutput": {
        "type": "object",
        "required": [
          "kind",
          "instructions"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of action for this stage",
            "example": "patch"
          },
          "instructions": {
            "description": "An array of instructions for the stage. Each object in the array uses the semantic patch format for updating a feature flag.",
            "example": "[{\"kind\": \"turnFlagOn\"}]",
            "$ref": "#/components/schemas/Instructions"
          }
        }
      },
      "ActionSpecifier": {
        "type": "string"
      },
      "AllVariationsSummary": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/VariationSummary"
        }
      },
      "ApplicationCollectionRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "items": {
            "type": "array",
            "description": "A list of applications",
            "items": {
              "$ref": "#/components/schemas/ApplicationRep"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of applications",
            "example": 1
          }
        }
      },
      "ApplicationFlagCollectionRep": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "A list of the flags that have been evaluated by the application",
            "items": {
              "$ref": "#/components/schemas/FlagListingRep"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of flags that have been evaluated by the application",
            "example": 1
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ApplicationRep": {
        "type": "object",
        "required": [
          "autoAdded",
          "key",
          "kind",
          "name"
        ],
        "properties": {
          "flags": {
            "description": "Details about the flags that have been evaluated by the application",
            "$ref": "#/components/schemas/ApplicationFlagCollectionRep"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this application",
            "$ref": "#/components/schemas/Access"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the application"
          },
          "autoAdded": {
            "type": "boolean",
            "description": "Whether the application was automatically created because it was included in a context when a LaunchDarkly SDK evaluated a feature flag, or was created through the LaunchDarkly UI or REST API.",
            "example": true
          },
          "creationDate": {
            "description": "Timestamp of when the application version was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "description": {
            "type": "string",
            "description": "The application description",
            "example": "The LaunchDarkly Cafe app"
          },
          "key": {
            "type": "string",
            "description": "The unique identifier of this application",
            "example": "com.launchdarkly.cafe"
          },
          "kind": {
            "type": "string",
            "description": "To distinguish the kind of application",
            "example": "mobile",
            "enum": [
              "browser",
              "mobile",
              "server"
            ]
          },
          "_maintainer": {
            "description": "Associated maintainer member or team info for the application",
            "$ref": "#/components/schemas/MaintainerRep"
          },
          "name": {
            "type": "string",
            "description": "The name of the application",
            "example": "LaunchDarklyCafe"
          }
        }
      },
      "ApplicationVersionRep": {
        "type": "object",
        "required": [
          "autoAdded",
          "key",
          "name"
        ],
        "properties": {
          "_access": {
            "description": "Details on the allowed and denied actions for this application version",
            "$ref": "#/components/schemas/Access"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the application version"
          },
          "autoAdded": {
            "type": "boolean",
            "description": "Whether the application version was automatically created, because it was included in a context when a LaunchDarkly SDK evaluated a feature flag, or if the application version was created through the LaunchDarkly UI or REST API. ",
            "example": true
          },
          "creationDate": {
            "description": "Timestamp of when the application version was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "key": {
            "type": "string",
            "description": "The unique identifier of this application version",
            "example": "2"
          },
          "name": {
            "type": "string",
            "description": "The name of this version",
            "example": "01.02.03"
          },
          "supported": {
            "type": "boolean",
            "description": "Whether this version is supported. Only applicable if the application \u003ccode\u003ekind\u003c/code\u003e is \u003ccode\u003emobile\u003c/code\u003e.",
            "example": true
          }
        }
      },
      "ApplicationVersionsCollectionRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "items": {
            "type": "array",
            "description": "A list of the versions for this application",
            "items": {
              "$ref": "#/components/schemas/ApplicationVersionRep"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of versions for this application",
            "example": 1
          }
        }
      },
      "ApprovalRequestResponse": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "creationDate",
          "serviceKind",
          "reviewStatus",
          "allReviews",
          "notifyMemberIds",
          "status",
          "instructions",
          "conflicts",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this approval request",
            "example": "12ab3c45de678910abc12345"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the approval request",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of when the approval request was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "serviceKind": {
            "description": "The approval service for this request. May be LaunchDarkly or an external approval service, such as ServiceNow or JIRA.",
            "example": "launchdarkly",
            "$ref": "#/components/schemas/ApprovalRequestServiceKind"
          },
          "requestorId": {
            "type": "string",
            "description": "The ID of the member who requested the approval",
            "example": "12ab3c45de678910abc12345"
          },
          "description": {
            "type": "string",
            "description": "A human-friendly name for the approval request",
            "example": "example: request approval from someone"
          },
          "reviewStatus": {
            "type": "string",
            "description": "Current status of the review of this approval request",
            "example": "pending",
            "enum": [
              "approved",
              "declined",
              "pending"
            ]
          },
          "allReviews": {
            "type": "array",
            "description": "An array of individual reviews of this approval request",
            "items": {
              "$ref": "#/components/schemas/ReviewResponse"
            }
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "appliedDate": {
            "description": "Timestamp of when the approval request was applied",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "appliedByMemberId": {
            "type": "string",
            "description": "The member ID of the member who applied the approval request",
            "example": "1234a56b7c89d012345e678f"
          },
          "appliedByServiceTokenId": {
            "type": "string",
            "description": "The service token ID of the service token which applied the approval request",
            "example": "1234a56b7c89d012345e678f"
          },
          "status": {
            "type": "string",
            "description": "Current status of the approval request",
            "example": "pending",
            "enum": [
              "pending",
              "completed",
              "failed",
              "scheduled"
            ]
          },
          "instructions": {
            "description": "List of instructions in semantic patch format to be applied to the feature flag",
            "example": "[{\"kind\": \"turnFlagOn\"}]",
            "$ref": "#/components/schemas/Instructions"
          },
          "conflicts": {
            "type": "array",
            "description": "Details on any conflicting approval requests",
            "items": {
              "$ref": "#/components/schemas/Conflict"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "executionDate": {
            "description": "Timestamp for when instructions will be executed",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "operatingOnId": {
            "type": "string",
            "description": "ID of scheduled change to edit or delete",
            "example": "12ab3c45de678910abc12345"
          },
          "integrationMetadata": {
            "description": "Details about the object in an external service corresponding to this approval request, such as a ServiceNow change request or a JIRA ticket, if an external approval service is being used",
            "$ref": "#/components/schemas/IntegrationMetadata"
          },
          "source": {
            "description": "Details about the source feature flag, if copied",
            "$ref": "#/components/schemas/CopiedFromEnv"
          },
          "customWorkflowMetadata": {
            "description": "Details about the custom workflow, if this approval request is part of a custom workflow",
            "$ref": "#/components/schemas/CustomWorkflowMeta"
          },
          "resourceId": {
            "type": "string",
            "description": "String representation of a resource"
          },
          "approvalSettings": {
            "description": "The settings for this approval",
            "$ref": "#/components/schemas/ApprovalSettings"
          }
        }
      },
      "ApprovalRequestServiceKind": {
        "type": "string"
      },
      "ApprovalSettings": {
        "type": "object",
        "required": [
          "required",
          "bypassApprovalsForPendingChanges",
          "minNumApprovals",
          "canReviewOwnRequest",
          "canApplyDeclinedChanges",
          "serviceKind",
          "serviceConfig",
          "requiredApprovalTags"
        ],
        "properties": {
          "required": {
            "type": "boolean",
            "description": "If approvals are required for this environment",
            "example": true
          },
          "bypassApprovalsForPendingChanges": {
            "type": "boolean",
            "description": "Whether to skip approvals for pending changes",
            "example": false
          },
          "minNumApprovals": {
            "type": "integer",
            "description": "Sets the amount of approvals required before a member can apply a change. The minimum is one and the maximum is five.",
            "example": 1
          },
          "canReviewOwnRequest": {
            "type": "boolean",
            "description": "Allow someone who makes an approval request to apply their own change",
            "example": false
          },
          "canApplyDeclinedChanges": {
            "type": "boolean",
            "description": "Allow applying the change as long as at least one person has approved",
            "example": true
          },
          "autoApplyApprovedChanges": {
            "type": "boolean",
            "description": "Automatically apply changes that have been approved by all reviewers. This field is only applicable for approval services other than LaunchDarkly.",
            "example": true
          },
          "serviceKind": {
            "type": "string",
            "description": "Which service to use for managing approvals",
            "example": "launchdarkly"
          },
          "serviceConfig": {
            "type": "object",
            "additionalProperties": {},
            "example": {}
          },
          "requiredApprovalTags": {
            "type": "array",
            "description": "Require approval only on flags with the provided tags. Otherwise all flags will require approval.",
            "items": {
              "type": "string"
            },
            "example": [
              "require-approval"
            ]
          },
          "serviceKindConfigurationId": {
            "type": "string",
            "description": "Optional field for integration configuration ID of a custom approval integration. This is an Enterprise-only feature.",
            "example": "1ef45a85-218f-4428-a8b2-a97e5f56c258"
          },
          "resourceKind": {
            "type": "string",
            "description": "The kind of resource for which the approval settings apply, for example, flag or segment"
          }
        }
      },
      "ApprovalsCapabilityConfig": {
        "type": "object",
        "properties": {
          "additionalFormVariables": {
            "type": "array",
            "description": "The additional form variables for the approvals capability",
            "items": {
              "$ref": "#/components/schemas/FormVariable"
            },
            "example": "invalid example"
          }
        }
      },
      "AssignedToRep": {
        "type": "object",
        "properties": {
          "membersCount": {
            "type": "integer",
            "description": "The number of individual members this role is assigned to"
          },
          "teamsCount": {
            "type": "integer",
            "description": "The number of teams this role is assigned to"
          }
        }
      },
      "Audience": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "environment": {
            "description": "Details about the environment. When the environment has been deleted, this field is omitted.",
            "$ref": "#/components/schemas/EnvironmentSummary"
          },
          "name": {
            "type": "string",
            "description": "The release phase name",
            "example": "Phase 1 - Testing"
          },
          "configuration": {
            "description": "The configuration for the audience's rollout.",
            "$ref": "#/components/schemas/AudienceConfiguration"
          },
          "segmentKeys": {
            "type": "array",
            "description": "A list of segment keys",
            "items": {
              "type": "string"
            },
            "example": [
              "segment-key-123abc"
            ]
          }
        }
      },
      "AudienceConfiguration": {
        "type": "object",
        "required": [
          "releaseStrategy",
          "requireApproval"
        ],
        "properties": {
          "releaseStrategy": {
            "description": "The release strategy",
            "example": "monitoredRelease",
            "$ref": "#/components/schemas/ReleaseStrategy"
          },
          "requireApproval": {
            "type": "boolean",
            "description": "Whether or not the audience requires approval",
            "example": true
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "notifyTeamKeys": {
            "type": "array",
            "description": "An array of team keys. The members of these teams are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-reviewer-team"
            ]
          },
          "releaseGuardianConfiguration": {
            "description": "The configuration for the release guardian.",
            "$ref": "#/components/schemas/ReleaseGuardianConfiguration"
          }
        }
      },
      "AudiencePost": {
        "type": "object",
        "required": [
          "environmentKey",
          "name"
        ],
        "properties": {
          "environmentKey": {
            "type": "string",
            "description": "A project-unique key for the environment."
          },
          "name": {
            "type": "string",
            "description": "The audience name"
          },
          "segmentKeys": {
            "type": "array",
            "description": "Segments targeted by this audience.",
            "items": {
              "type": "string"
            }
          },
          "configuration": {
            "description": "The configuration for the audience's rollout.",
            "$ref": "#/components/schemas/AudienceConfiguration"
          }
        }
      },
      "AudienceStatus": {
        "type": "string"
      },
      "Audiences": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Audience"
        }
      },
      "AuditLogEntryListingRep": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "_accountId",
          "date",
          "accesses",
          "kind",
          "name",
          "description",
          "shortDescription"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The ID of the audit log entry",
            "example": "1234a56b7c89d012345e678f"
          },
          "_accountId": {
            "type": "string",
            "description": "The ID of the account to which this audit log entry belongs",
            "example": "1234a56b7c89d012345e678f"
          },
          "date": {
            "description": "Timestamp of the audit log entry",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "accesses": {
            "type": "array",
            "description": "Details on the actions performed and resources acted on in this audit log entry",
            "items": {
              "$ref": "#/components/schemas/ResourceAccess"
            }
          },
          "kind": {
            "description": "The type of resource this audit log entry refers to",
            "example": "flag",
            "$ref": "#/components/schemas/ResourceKind"
          },
          "name": {
            "type": "string",
            "description": "The name of the resource this audit log entry refers to",
            "example": "Example feature flag"
          },
          "description": {
            "type": "string",
            "description": "Description of the change recorded in the audit log entry",
            "example": "Example, turning on the flag for testing"
          },
          "shortDescription": {
            "type": "string",
            "description": "Shorter version of the change recorded in the audit log entry",
            "example": "Example, turning on the flag"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment for the audit log entry",
            "example": "This is an automated test"
          },
          "subject": {
            "description": "Details of the subject who initiated the action described in the audit log entry",
            "$ref": "#/components/schemas/SubjectDataRep"
          },
          "member": {
            "description": "Details of the member who initiated the action described in the audit log entry",
            "$ref": "#/components/schemas/MemberDataRep"
          },
          "token": {
            "description": "Details of the access token that initiated the action described in the audit log entry",
            "$ref": "#/components/schemas/TokenSummary"
          },
          "app": {
            "description": "Details of the authorized application that initiated the action described in the audit log entry",
            "$ref": "#/components/schemas/AuthorizedAppDataRep"
          },
          "titleVerb": {
            "type": "string",
            "description": "The action and resource recorded in this audit log entry",
            "example": "turned on the flag"
          },
          "title": {
            "type": "string",
            "description": "A description of what occurred, in the format \u003ccode\u003emember\u003c/code\u003e \u003ccode\u003etitleVerb\u003c/code\u003e \u003ccode\u003etarget\u003c/code\u003e"
          },
          "target": {
            "description": "Details of the resource acted upon in this audit log entry",
            "example": "[Ariel Flores](mailto:ariel@acme.com) turned on the flag [example-flag](https://app.launchdarkly.com/example-project/production/features/example-flag) in Production",
            "$ref": "#/components/schemas/TargetResourceRep"
          },
          "parent": {
            "$ref": "#/components/schemas/ParentResourceRep"
          }
        }
      },
      "AuditLogEntryListingRepCollection": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of audit log entries",
            "items": {
              "$ref": "#/components/schemas/AuditLogEntryListingRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "AuditLogEntryRep": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "_accountId",
          "date",
          "accesses",
          "kind",
          "name",
          "description",
          "shortDescription"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The ID of the audit log entry",
            "example": "1234a56b7c89d012345e678f"
          },
          "_accountId": {
            "type": "string",
            "description": "The ID of the account to which this audit log entry belongs",
            "example": "1234a56b7c89d012345e678f"
          },
          "date": {
            "description": "Timestamp of the audit log entry",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "accesses": {
            "type": "array",
            "description": "Details on the actions performed and resources acted on in this audit log entry",
            "items": {
              "$ref": "#/components/schemas/ResourceAccess"
            }
          },
          "kind": {
            "description": "The type of resource this audit log entry refers to",
            "example": "flag",
            "$ref": "#/components/schemas/ResourceKind"
          },
          "name": {
            "type": "string",
            "description": "The name of the resource this audit log entry refers to",
            "example": "Example feature flag"
          },
          "description": {
            "type": "string",
            "description": "Description of the change recorded in the audit log entry",
            "example": "Example, turning on the flag for testing"
          },
          "shortDescription": {
            "type": "string",
            "description": "Shorter version of the change recorded in the audit log entry",
            "example": "Example, turning on the flag"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment for the audit log entry",
            "example": "This is an automated test"
          },
          "subject": {
            "description": "Details of the subject who initiated the action described in the audit log entry",
            "$ref": "#/components/schemas/SubjectDataRep"
          },
          "member": {
            "description": "Details of the member who initiated the action described in the audit log entry",
            "$ref": "#/components/schemas/MemberDataRep"
          },
          "token": {
            "description": "Details of the access token that initiated the action described in the audit log entry",
            "$ref": "#/components/schemas/TokenSummary"
          },
          "app": {
            "description": "Details of the authorized application that initiated the action described in the audit log entry",
            "$ref": "#/components/schemas/AuthorizedAppDataRep"
          },
          "titleVerb": {
            "type": "string",
            "description": "The action and resource recorded in this audit log entry",
            "example": "turned on the flag"
          },
          "title": {
            "type": "string",
            "description": "A description of what occurred, in the format \u003ccode\u003emember\u003c/code\u003e \u003ccode\u003etitleVerb\u003c/code\u003e \u003ccode\u003etarget\u003c/code\u003e"
          },
          "target": {
            "description": "Details of the resource acted upon in this audit log entry",
            "example": "[Ariel Flores](mailto:ariel@acme.com) turned on the flag [example-flag](https://app.launchdarkly.com/example-project/production/features/example-flag) in Production",
            "$ref": "#/components/schemas/TargetResourceRep"
          },
          "parent": {
            "$ref": "#/components/schemas/ParentResourceRep"
          },
          "delta": {
            "description": "If the audit log entry has been updated, this is the JSON patch body that was used in the request to update the entity"
          },
          "triggerBody": {
            "description": "A JSON representation of the external trigger for this audit log entry, if any"
          },
          "merge": {
            "description": "A JSON representation of the merge information for this audit log entry, if any"
          },
          "previousVersion": {
            "description": "If the audit log entry has been updated, this is a JSON representation of the previous version of the entity"
          },
          "currentVersion": {
            "description": "If the audit log entry has been updated, this is a JSON representation of the current version of the entity"
          },
          "subentries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogEntryListingRep"
            }
          }
        }
      },
      "AuditLogEventsHookCapabilityConfigPost": {
        "type": "object",
        "properties": {
          "statements": {
            "description": "The set of resources you wish to subscribe to audit log notifications for.",
            "$ref": "#/components/schemas/StatementPostList"
          }
        }
      },
      "AuditLogEventsHookCapabilityConfigRep": {
        "type": "object",
        "properties": {
          "statements": {
            "type": "array",
            "description": "The set of resources you wish to subscribe to audit log notifications for.",
            "items": {
              "$ref": "#/components/schemas/Statement"
            }
          }
        }
      },
      "AuthorizedAppDataRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "_id": {
            "type": "string",
            "description": "The ID of the authorized application"
          },
          "isScim": {
            "type": "boolean",
            "description": "Whether the application is authorized through SCIM"
          },
          "name": {
            "type": "string",
            "description": "The authorized application name"
          },
          "maintainerName": {
            "type": "string",
            "description": "The name of the maintainer for this authorized application"
          }
        }
      },
      "BayesianBetaBinomialStatsRep": {
        "type": "object",
        "properties": {
          "priorAlpha": {
            "type": "number",
            "description": "Sum of converted pseudo-units for prior distribution"
          },
          "priorBeta": {
            "type": "number",
            "description": "Sum of non-converted pseudo-units for prior distribution"
          },
          "priorMean": {
            "type": "number",
            "description": "Mean of the prior distribution"
          },
          "dataWeight": {
            "type": "number",
            "description": "The precision weight of the data mean"
          }
        }
      },
      "BayesianNormalStatsRep": {
        "type": "object",
        "properties": {
          "dataWeight": {
            "type": "number",
            "description": "The precision weight of the data mean"
          },
          "priorMean": {
            "type": "number",
            "description": "Mean of the prior distribution"
          }
        }
      },
      "BigSegmentStoreIntegration": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "integrationKey",
          "projectKey",
          "environmentKey",
          "config",
          "on",
          "tags",
          "name",
          "version",
          "_status"
        ],
        "properties": {
          "_links": {
            "description": "The location and content type of related resources",
            "$ref": "#/components/schemas/BigSegmentStoreIntegrationLinks"
          },
          "_id": {
            "type": "string",
            "description": "The integration ID",
            "example": "12ab3c4d5ef1a2345bcde67f"
          },
          "integrationKey": {
            "type": "string",
            "description": "The integration key",
            "example": "redis",
            "enum": [
              "redis",
              "dynamodb"
            ]
          },
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key",
            "example": "development"
          },
          "config": {
            "description": "The delivery configuration for the given integration provider. Only included when requesting a single integration by ID. Refer to the \u003ccode\u003eformVariables\u003c/code\u003e field in the corresponding \u003ccode\u003emanifest.json\u003c/code\u003e for a full list of fields for each integration.",
            "$ref": "#/components/schemas/FormVariableConfig"
          },
          "on": {
            "type": "boolean",
            "description": "Whether the configuration is turned on",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "List of tags for this configuration",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "name": {
            "type": "string",
            "description": "Name of the configuration",
            "example": "Development environment configuration"
          },
          "version": {
            "type": "integer",
            "description": "Version of the current configuration",
            "example": 1
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this configuration",
            "$ref": "#/components/schemas/Access"
          },
          "_status": {
            "description": "Details on the connection status of the persistent store integration",
            "$ref": "#/components/schemas/BigSegmentStoreStatus"
          }
        }
      },
      "BigSegmentStoreIntegrationCollection": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "description": "The location and content type of related resources",
            "$ref": "#/components/schemas/BigSegmentStoreIntegrationCollectionLinks"
          },
          "items": {
            "type": "array",
            "description": "An array of persistent store integration configurations",
            "items": {
              "$ref": "#/components/schemas/BigSegmentStoreIntegration"
            }
          }
        }
      },
      "BigSegmentStoreIntegrationCollectionLinks": {
        "type": "object",
        "required": [
          "self"
        ],
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Link"
          },
          "parent": {
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "BigSegmentStoreIntegrationLinks": {
        "type": "object",
        "required": [
          "self",
          "parent",
          "project",
          "environment"
        ],
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Link"
          },
          "parent": {
            "$ref": "#/components/schemas/Link"
          },
          "project": {
            "$ref": "#/components/schemas/Link"
          },
          "environment": {
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "BigSegmentStoreStatus": {
        "type": "object",
        "properties": {
          "available": {
            "type": "boolean",
            "description": "Whether the persistent store integration is fully synchronized with the LaunchDarkly environment, and the \u003ccode\u003elastSync\u003c/code\u003e occurred within a few minutes",
            "example": true
          },
          "potentiallyStale": {
            "type": "boolean",
            "description": "Whether the persistent store integration may not be fully synchronized with the LaunchDarkly environment. \u003ccode\u003etrue\u003c/code\u003e if the integration could be stale.",
            "example": false
          },
          "lastSync": {
            "description": "Timestamp of when the most recent successful sync occurred between the persistent store integration and the LaunchDarkly environment.",
            "example": "1717263000000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "lastError": {
            "description": "Timestamp of when the most recent synchronization error occurred, if any",
            "example": "1714584600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreIntegrationError"
            }
          }
        }
      },
      "BigSegmentTarget": {
        "type": "object",
        "required": [
          "userKey",
          "included",
          "excluded"
        ],
        "properties": {
          "userKey": {
            "type": "string",
            "description": "The target key"
          },
          "included": {
            "type": "boolean",
            "description": "Indicates whether the target is included.\u003cbr /\u003eIncluded targets are always segment members, regardless of segment rules."
          },
          "excluded": {
            "type": "boolean",
            "description": "Indicates whether the target is excluded.\u003cbr /\u003eSegment rules bypass excluded targets, so they will never be included based on rules. Excluded targets may still be included explicitly."
          }
        }
      },
      "BooleanDefaults": {
        "type": "object",
        "properties": {
          "trueDisplayName": {
            "type": "string",
            "description": "The display name for the true variation, displayed in the LaunchDarkly user interface",
            "example": "True"
          },
          "falseDisplayName": {
            "type": "string",
            "description": "The display name for the false variation, displayed in the LaunchDarkly user interface",
            "example": "False"
          },
          "trueDescription": {
            "type": "string",
            "description": "The description for the true variation",
            "example": "serve true"
          },
          "falseDescription": {
            "type": "string",
            "description": "The description for the false variation",
            "example": "serve false"
          },
          "onVariation": {
            "type": "integer",
            "description": "The variation index of the flag variation to use for the default targeting behavior when a flag's targeting is on and the target did not match any rules",
            "example": 0
          },
          "offVariation": {
            "type": "integer",
            "description": "The variation index of the flag variation to use for the default targeting behavior when a flag's targeting is off",
            "example": 1
          }
        }
      },
      "BooleanFlagDefaults": {
        "type": "object",
        "required": [
          "trueDisplayName",
          "falseDisplayName",
          "trueDescription",
          "falseDescription",
          "onVariation",
          "offVariation"
        ],
        "properties": {
          "trueDisplayName": {
            "type": "string",
            "description": "The display name for the true variation, displayed in the LaunchDarkly user interface",
            "example": "True"
          },
          "falseDisplayName": {
            "type": "string",
            "description": "The display name for the false variation, displayed in the LaunchDarkly user interface",
            "example": "False"
          },
          "trueDescription": {
            "type": "string",
            "description": "The description for the true variation",
            "example": "serve true"
          },
          "falseDescription": {
            "type": "string",
            "description": "The description for the false variation",
            "example": "serve false"
          },
          "onVariation": {
            "type": "integer",
            "description": "The variation index of the flag variation to use for the default targeting behavior when a flag's targeting is on and the target did not match any rules",
            "example": 0
          },
          "offVariation": {
            "type": "integer",
            "description": "The variation index of the flag variation to use for the default targeting behavior when a flag's targeting is off",
            "example": 1
          }
        }
      },
      "BranchCollectionRep": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "items": {
            "type": "array",
            "description": "An array of branches",
            "items": {
              "$ref": "#/components/schemas/BranchRep"
            }
          }
        }
      },
      "BranchRep": {
        "type": "object",
        "required": [
          "name",
          "head",
          "syncTime",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The branch name",
            "example": "main"
          },
          "head": {
            "type": "string",
            "description": "An ID representing the branch HEAD. For example, a commit SHA.",
            "example": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"
          },
          "updateSequenceId": {
            "type": "integer",
            "format": "int64",
            "description": "An optional ID used to prevent older data from overwriting newer data",
            "example": 25
          },
          "syncTime": {
            "description": "A timestamp indicating when the branch was last synced",
            "example": "1636558831870",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "references": {
            "type": "array",
            "description": "An array of flag references found on the branch",
            "items": {
              "$ref": "#/components/schemas/ReferenceRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          }
        }
      },
      "BulkEditMembersRep": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "description": "A list of members IDs of the members who were successfully updated.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "errors": {
            "type": "array",
            "description": "A list of member IDs and errors for the members whose updates failed.",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "example": [
              {
                "507f1f77bcf86cd799439011": "you cannot modify your own role"
              }
            ]
          }
        }
      },
      "BulkEditTeamsRep": {
        "type": "object",
        "properties": {
          "memberIDs": {
            "type": "array",
            "description": "A list of member IDs of the members who were added to the teams.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "teamKeys": {
            "type": "array",
            "description": "A list of team keys of the teams that were successfully updated.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-team-1"
            ]
          },
          "errors": {
            "type": "array",
            "description": "A list of team keys and errors for the teams whose updates failed.",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "example": [
              {
                "example-team-2": "example failure message"
              }
            ]
          }
        }
      },
      "CallerIdentityRep": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "environmentId": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "environmentName": {
            "type": "string"
          },
          "projectName": {
            "type": "string"
          },
          "authKind": {
            "type": "string"
          },
          "tokenKind": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "tokenName": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "serviceToken": {
            "type": "boolean"
          }
        }
      },
      "CapabilityConfigPost": {
        "type": "object",
        "properties": {
          "approvals": {
            "description": "The approvals capability configuration for this integration",
            "example": "{\"additionalFormVariables\": \"[]\"}",
            "$ref": "#/components/schemas/ApprovalsCapabilityConfig"
          },
          "auditLogEventsHook": {
            "description": "The audit log events hook capability configuration for the integration",
            "example": "{\"key\": \"value\"}",
            "$ref": "#/components/schemas/AuditLogEventsHookCapabilityConfigPost"
          }
        }
      },
      "CapabilityConfigRep": {
        "type": "object",
        "properties": {
          "approvals": {
            "description": "The approvals capability configuration for this integration",
            "$ref": "#/components/schemas/ApprovalsCapabilityConfig"
          },
          "auditLogEventsHook": {
            "description": "The audit log events hook capability configuration for the integration",
            "example": "{\"policy\": \"value\"}",
            "$ref": "#/components/schemas/AuditLogEventsHookCapabilityConfigRep"
          }
        }
      },
      "Clause": {
        "type": "object",
        "required": [
          "attribute",
          "op",
          "values",
          "negate"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "attribute": {
            "type": "string"
          },
          "op": {
            "$ref": "#/components/schemas/Operator"
          },
          "values": {
            "type": "array",
            "items": {}
          },
          "contextKind": {
            "type": "string"
          },
          "negate": {
            "type": "boolean"
          }
        }
      },
      "Client": {
        "type": "object",
        "required": [
          "_links",
          "name",
          "_accountId",
          "_clientId",
          "redirectUri",
          "_creationDate"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/oauth/clients",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/oauth/clients/50666563-9144-4125-b822-33f308227e45",
                "type": "application/json"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "Client name"
          },
          "description": {
            "type": "string",
            "description": "Client description"
          },
          "_accountId": {
            "type": "string",
            "description": "The account ID the client is registered under"
          },
          "_clientId": {
            "type": "string",
            "description": "The client's unique ID"
          },
          "_clientSecret": {
            "type": "string",
            "description": "The client secret. This will only be shown upon creation."
          },
          "redirectUri": {
            "type": "string",
            "description": "The client's redirect URI"
          },
          "_creationDate": {
            "description": "Timestamp of client creation date",
            "example": "1494437420312",
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "ClientCollection": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/oauth/clients",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "description": "List of client objects",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          }
        }
      },
      "ClientSideAvailability": {
        "type": "object",
        "properties": {
          "usingMobileKey": {
            "type": "boolean"
          },
          "usingEnvironmentId": {
            "type": "boolean"
          }
        }
      },
      "ClientSideAvailabilityPost": {
        "type": "object",
        "required": [
          "usingEnvironmentId",
          "usingMobileKey"
        ],
        "properties": {
          "usingEnvironmentId": {
            "type": "boolean",
            "description": "Whether to enable availability for client-side SDKs. Defaults to \u003ccode\u003efalse\u003c/code\u003e.",
            "example": true
          },
          "usingMobileKey": {
            "type": "boolean",
            "description": "Whether to enable availability for mobile SDKs. Defaults to \u003ccode\u003etrue\u003c/code\u003e.",
            "example": true
          }
        }
      },
      "CompletedBy": {
        "type": "object",
        "properties": {
          "member": {
            "description": "The LaunchDarkly member who marked this phase as complete",
            "$ref": "#/components/schemas/MemberSummary"
          },
          "token": {
            "description": "The service token used to mark this phase as complete",
            "$ref": "#/components/schemas/TokenSummary"
          }
        }
      },
      "ConditionInput": {
        "type": "object",
        "properties": {
          "scheduleKind": {
            "description": "Whether the scheduled execution of the workflow stage is relative or absolute. If relative, the \u003ccode\u003ewaitDuration\u003c/code\u003e and \u003ccode\u003ewaitDurationUnit\u003c/code\u003e specify when the execution occurs. If absolute, the \u003ccode\u003eexecutionDate\u003c/code\u003e specifies when the execution occurs.",
            "example": "relative",
            "enum": [
              "absolute",
              "relative"
            ],
            "$ref": "#/components/schemas/ScheduleKind"
          },
          "executionDate": {
            "description": "For workflow stages whose scheduled execution is absolute, the time, in Unix milliseconds, when the stage should start.",
            "example": "1706810400000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "waitDuration": {
            "type": "integer",
            "description": "For workflow stages whose scheduled execution is relative, how far in the future the stage should start.",
            "example": 2
          },
          "waitDurationUnit": {
            "description": "For workflow stages whose scheduled execution is relative, the unit of measure for the \u003ccode\u003ewaitDuration\u003c/code\u003e.",
            "example": "calendarDay",
            "enum": [
              "minute",
              "hour",
              "calendarDay",
              "calendarWeek"
            ],
            "$ref": "#/components/schemas/DurationUnit"
          },
          "executeNow": {
            "type": "boolean",
            "description": "Whether the workflow stage should be executed immediately",
            "example": false
          },
          "description": {
            "type": "string",
            "description": "A description of the approval required for this stage",
            "example": "Require example-team approval for final stage"
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "A list of member IDs for the members to request approval from for this stage",
            "items": {
              "type": "string"
            },
            "example": [
              "507f1f77bcf86cd799439011"
            ]
          },
          "notifyTeamKeys": {
            "type": "array",
            "description": "A list of team keys for the teams to request approval from for this stage",
            "items": {
              "type": "string"
            },
            "example": [
              "example-team"
            ]
          },
          "kind": {
            "description": "The type of condition to meet before executing this stage of the workflow. Use \u003ccode\u003eschedule\u003c/code\u003e to schedule a workflow stage. Use \u003ccode\u003eld-approval\u003c/code\u003e to add an approval request to a workflow stage.",
            "example": "schedule",
            "$ref": "#/components/schemas/ConditionKind"
          }
        }
      },
      "ConditionKind": {
        "type": "string"
      },
      "ConditionOutput": {
        "type": "object",
        "required": [
          "_id",
          "_execution",
          "description",
          "notifyMemberIds",
          "allReviews",
          "reviewStatus"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "_execution": {
            "$ref": "#/components/schemas/ExecutionOutput"
          },
          "scheduleKind": {
            "$ref": "#/components/schemas/ScheduleKind"
          },
          "executionDate": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "waitDuration": {
            "type": "integer"
          },
          "waitDurationUnit": {
            "$ref": "#/components/schemas/DurationUnit"
          },
          "description": {
            "type": "string"
          },
          "notifyMemberIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allReviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewOutput"
            }
          },
          "reviewStatus": {
            "type": "string"
          },
          "appliedDate": {
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "Conflict": {
        "type": "object",
        "properties": {
          "instruction": {
            "description": "Instruction in semantic patch format to be applied to the feature flag",
            "$ref": "#/components/schemas/Instruction"
          },
          "reason": {
            "type": "string",
            "description": "Reason why the conflict exists"
          }
        }
      },
      "ConflictOutput": {
        "type": "object",
        "required": [
          "stageId",
          "message"
        ],
        "properties": {
          "stageId": {
            "type": "string",
            "description": "The stage ID",
            "example": "12ab3c4d5ef1a2345bcde67f"
          },
          "message": {
            "type": "string",
            "description": "Message about the conflict"
          }
        }
      },
      "ContextAttributeName": {
        "type": "object",
        "required": [
          "name",
          "weight"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A context attribute's name.",
            "example": "/firstName"
          },
          "weight": {
            "type": "integer",
            "description": "A relative estimate of the number of contexts seen recently that have an attribute with the associated name.",
            "example": 2225
          },
          "redacted": {
            "type": "boolean",
            "description": "Whether or not the attribute has one or more redacted values.",
            "example": false
          }
        }
      },
      "ContextAttributeNames": {
        "type": "object",
        "required": [
          "kind",
          "names"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind associated with this collection of context attribute names.",
            "example": "user"
          },
          "names": {
            "type": "array",
            "description": "A collection of context attribute names.",
            "items": {
              "$ref": "#/components/schemas/ContextAttributeName"
            }
          }
        }
      },
      "ContextAttributeNamesCollection": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "A collection of context attribute name data grouped by kind.",
            "items": {
              "$ref": "#/components/schemas/ContextAttributeNames"
            }
          }
        }
      },
      "ContextAttributeValue": {
        "type": "object",
        "required": [
          "name",
          "weight"
        ],
        "properties": {
          "name": {
            "description": "A value for a context attribute.",
            "example": "Sandy"
          },
          "weight": {
            "type": "integer",
            "description": "A relative estimate of the number of contexts seen recently that have a matching value for a given attribute.",
            "example": 35
          }
        }
      },
      "ContextAttributeValues": {
        "type": "object",
        "required": [
          "kind",
          "values"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The kind associated with this collection of context attribute values.",
            "example": "user"
          },
          "values": {
            "type": "array",
            "description": "A collection of context attribute values.",
            "items": {
              "$ref": "#/components/schemas/ContextAttributeValue"
            }
          }
        }
      },
      "ContextAttributeValuesCollection": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "A collection of context attribute value data grouped by kind.",
            "items": {
              "$ref": "#/components/schemas/ContextAttributeValues"
            }
          }
        }
      },
      "ContextInstance": {
        "type": "object",
        "additionalProperties": {}
      },
      "ContextInstanceEvaluation": {
        "type": "object",
        "required": [
          "name",
          "key",
          "_value",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the flag.",
            "example": "My Flag"
          },
          "key": {
            "type": "string",
            "description": "Key of the flag.",
            "example": "flag-key-123abc"
          },
          "_value": {
            "description": "The value of the flag variation that the context receives. If there is no defined default rule, this is null.",
            "example": "true"
          },
          "reason": {
            "description": "Contains information about why that variation was selected.",
            "example": "{\"kind\": \"RULE_MATCH\"}",
            "$ref": "#/components/schemas/ContextInstanceEvaluationReason"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate",
                "type": "application/json"
              },
              "site": {
                "href": "/my-project/my-environment/features/sort.order/targeting",
                "type": "text/html"
              }
            }
          }
        }
      },
      "ContextInstanceEvaluationReason": {
        "type": "object",
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "Describes the general reason that LaunchDarkly selected this variation.",
            "example": "OFF"
          },
          "ruleIndex": {
            "type": "integer",
            "description": "The positional index of the matching rule if the kind is 'RULE_MATCH'. The index is 0-based.",
            "example": 3
          },
          "ruleID": {
            "type": "string",
            "description": "The unique identifier of the matching rule if the kind is 'RULE_MATCH'.",
            "example": "1234567890"
          },
          "prerequisiteKey": {
            "type": "string",
            "description": "The key of the flag that failed if the kind is 'PREREQUISITE_FAILED'.",
            "example": "someotherflagkey"
          },
          "inExperiment": {
            "type": "boolean",
            "description": "Indicates whether the context was evaluated as part of an experiment.",
            "example": true
          },
          "errorKind": {
            "type": "string",
            "description": "The specific error type if the kind is 'ERROR'.",
            "example": "tried to use uninitialized Context"
          }
        }
      },
      "ContextInstanceEvaluations": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Details on the flag evaluations for this context instance",
            "items": {
              "$ref": "#/components/schemas/ContextInstanceEvaluation"
            },
            "example": [
              {
                "_links": {
                  "self": {
                    "href": "/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate",
                    "type": "application/json"
                  },
                  "site": {
                    "href": "/my-project/my-environment/features/sort.order/targeting",
                    "type": "text/html"
                  }
                },
                "_value": true,
                "key": "sort.order",
                "name": "SortOrder",
                "reason": {
                  "kind": "FALLTHROUGH"
                }
              },
              {
                "_links": {
                  "self": {
                    "href": "/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate",
                    "type": "application/json"
                  },
                  "site": {
                    "href": "/my-project/my-environment/features/alternate.page/targeting",
                    "type": "text/html"
                  }
                },
                "_value": false,
                "key": "alternate.page",
                "name": "AlternatePage",
                "reason": {
                  "kind": "RULE_MATCH",
                  "ruleID": "b2530cdf-14c6-4e16-b660-00239e08f19b",
                  "ruleIndex": 1
                }
              }
            ]
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of flags",
            "example": 2
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate",
                "type": "application/json"
              }
            }
          }
        }
      },
      "ContextInstanceRecord": {
        "type": "object",
        "required": [
          "id",
          "context"
        ],
        "properties": {
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last time an evaluation occurred for this context instance",
            "example": "2022-04-15T15:00:57.526470334Z"
          },
          "id": {
            "type": "string",
            "description": "The context instance ID",
            "example": "b3JnOmxhdW5jaGRhcmtseQ"
          },
          "applicationId": {
            "type": "string",
            "description": "An identifier representing the application where the LaunchDarkly SDK is running",
            "example": "GoSDK/1.2"
          },
          "anonymousKinds": {
            "type": "array",
            "description": "A list of the context kinds this context was associated with that the SDK removed because they were marked as anonymous at flag evaluation",
            "items": {
              "type": "string"
            },
            "example": [
              "device",
              "privateKind"
            ]
          },
          "context": {
            "description": "The context, including its kind and attributes",
            "example": "{\"kind\": \"user\", \"key\": \"context-key-123abc\", \"name\": \"Sandy Smith\", \"email\": \"sandy@example.com\"}"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-env/context-instances/organization:launch-darkly:user:henry?filter=applicationId:\"GoSDK/1.2\"",
                "type": "application/json"
              },
              "site": {
                "href": "/my-project/my-environment/context-instances/organization:launch-darkly:user:henry",
                "type": "text/html"
              }
            }
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this context instance",
            "$ref": "#/components/schemas/Access"
          }
        }
      },
      "ContextInstanceSearch": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "A collection of context instance filters",
            "example": "{\"filter\": \"kindKeys:{\"contains\": [\"user:Henry\"]},\"sort\": \"-ts\",\"limit\": 50}"
          },
          "sort": {
            "type": "string",
            "description": "Specifies a field by which to sort. LaunchDarkly supports sorting by timestamp in ascending order by specifying \u003ccode\u003ets\u003c/code\u003e for this value, or descending order by specifying \u003ccode\u003e-ts\u003c/code\u003e.",
            "example": "-ts"
          },
          "limit": {
            "type": "integer",
            "description": "Specifies the maximum number of items in the collection to return (max: 50, default: 20)",
            "example": 10
          },
          "continuationToken": {
            "type": "string",
            "description": "Limits results to context instances with sort values after the value specified. You can use this for pagination, however, we recommend using the \u003ccode\u003enext\u003c/code\u003e link instead, because this value is an obfuscated string.",
            "example": "QAGFKH1313KUGI2351"
          }
        }
      },
      "ContextInstanceSegmentMembership": {
        "type": "object",
        "required": [
          "name",
          "key",
          "description",
          "unbounded",
          "external",
          "isMember",
          "isIndividuallyTargeted",
          "isRuleTargeted",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the segment",
            "example": "Segment Name"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the segment",
            "example": "segment-key-123abc"
          },
          "description": {
            "type": "string",
            "description": "A description of the segment's purpose",
            "example": "Segment description"
          },
          "unbounded": {
            "type": "boolean",
            "description": "Whether this is an unbounded segment. Unbounded segments, also called big segments, may be list-based segments with more than 15,000 entries, or synced segments.",
            "example": false
          },
          "external": {
            "type": "string",
            "description": "If the segment is a synced segment, the name of the external source",
            "example": "https://amplitude.com/myCohort"
          },
          "isMember": {
            "type": "boolean",
            "description": "Whether the context is a member of this segment, either by explicit inclusion or by rule matching",
            "example": true
          },
          "isIndividuallyTargeted": {
            "type": "boolean",
            "description": "Whether the context is explicitly included in this segment",
            "example": true
          },
          "isRuleTargeted": {
            "type": "boolean",
            "description": "Whether the context is captured by this segment's rules. The value of this field is undefined if the context is also explicitly included (\u003ccode\u003eisIndividuallyTargeted\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e).",
            "example": false
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ContextInstanceSegmentMemberships": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContextInstanceSegmentMembership"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ContextInstances": {
        "type": "object",
        "required": [
          "_environmentId",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/api/v2/projects/my-project/environments/my-env/context-instances/organization:launch-darkly:user:henry?limit=2\u0026continuationToken=2022-04-15T15:00:57.526470334Z",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-proj/environments/my-env/context-instances/organization:launch-darkly:user:henry-jacobs?limit=2",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of unique context instances",
            "example": 100
          },
          "_environmentId": {
            "type": "string",
            "description": "The environment ID",
            "example": "57be1db38b75bf0772d11384"
          },
          "continuationToken": {
            "type": "string",
            "description": "An obfuscated string that references the last context instance on the previous page of results. You can use this for pagination, however, we recommend using the \u003ccode\u003enext\u003c/code\u003e link instead.",
            "example": "QAGFKH1313KUGI2351"
          },
          "items": {
            "type": "array",
            "description": "A collection of context instances. Can include multiple versions of context instances that have the same \u003ccode\u003eid\u003c/code\u003e, but different \u003ccode\u003eapplicationId\u003c/code\u003es.",
            "items": {
              "$ref": "#/components/schemas/ContextInstanceRecord"
            }
          }
        }
      },
      "ContextKindCreatedFrom": {
        "type": "string"
      },
      "ContextKindRep": {
        "type": "object",
        "required": [
          "key",
          "name",
          "description",
          "version",
          "creationDate",
          "lastModified",
          "createdFrom"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The context kind key",
            "example": "organization-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "The context kind name",
            "example": "Organization"
          },
          "description": {
            "type": "string",
            "description": "The context kind description",
            "example": "An example context kind, to enable targeting based on organization"
          },
          "version": {
            "type": "integer",
            "description": "The context kind version",
            "example": 4
          },
          "creationDate": {
            "description": "Timestamp of when the context kind was created",
            "example": "1668530155141",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "lastModified": {
            "description": "Timestamp of when the context kind was most recently changed",
            "example": "1670341705251",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "lastSeen": {
            "description": "Timestamp of when a context of this context kind was most recently evaluated",
            "example": "1671563538193",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "createdFrom": {
            "description": "How the context kind was created",
            "example": "auto-add",
            "enum": [
              "default",
              "auto-add",
              "manual"
            ],
            "$ref": "#/components/schemas/ContextKindCreatedFrom"
          },
          "hideInTargeting": {
            "type": "boolean",
            "description": "Alias for archived.",
            "example": false
          },
          "archived": {
            "type": "boolean",
            "description": "Whether the context kind is archived. Archived context kinds are unavailable for targeting.",
            "example": false
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ContextKindsCollectionRep": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of context kinds",
            "items": {
              "$ref": "#/components/schemas/ContextKindRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ContextRecord": {
        "type": "object",
        "required": [
          "context"
        ],
        "properties": {
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last time an evaluation occurred for this context",
            "example": "2022-04-15T15:00:57.526470334Z"
          },
          "applicationId": {
            "type": "string",
            "description": "An identifier representing the application where the LaunchDarkly SDK is running",
            "example": "GoSDK/1.2"
          },
          "context": {
            "description": "The context, including its kind and attributes",
            "example": "{\"kind\": \"user\", \"key\": \"context-key-123abc\", \"name\": \"Sandy Smith\", \"email\": \"sandy@example.com\"}"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-env/contexts/organization:launch-darkly:user:henry?filter=applicationId:\"GoSDK/1.2\"",
                "type": "application/json"
              },
              "site": {
                "href": "/my-project/my-environment/context/organization:launch-darkly:user:henry",
                "type": "text/html"
              }
            }
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this context instance",
            "$ref": "#/components/schemas/Access"
          },
          "associatedContexts": {
            "type": "integer",
            "description": "The total number of associated contexts. Associated contexts are contexts that have appeared in the same context instance, that is, they were part of the same flag evaluation.",
            "example": 0
          }
        }
      },
      "ContextSearch": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "A collection of context filters",
            "example": "*.name startsWith Jo,kind anyOf [\"user\",\"organization\"]"
          },
          "sort": {
            "type": "string",
            "description": "Specifies a field by which to sort. LaunchDarkly supports sorting by timestamp in ascending order by specifying \u003ccode\u003ets\u003c/code\u003e for this value, or descending order by specifying \u003ccode\u003e-ts\u003c/code\u003e.",
            "example": "-ts"
          },
          "limit": {
            "type": "integer",
            "description": "Specifies the maximum number of items in the collection to return (max: 50, default: 20)",
            "example": 10
          },
          "continuationToken": {
            "type": "string",
            "description": "Limits results to contexts with sort values after the value specified. You can use this for pagination, however, we recommend using the \u003ccode\u003enext\u003c/code\u003e link instead, because this value is an obfuscated string.",
            "example": "QAGFKH1313KUGI2351"
          }
        }
      },
      "Contexts": {
        "type": "object",
        "required": [
          "_environmentId",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/app.launchdarkly.com/api/v2/projects/my-project/environments/my-environment/contexts?filter=kind:{\"equals\": [\"organization\"]}\u0026limit=2\u0026continuationToken=QAGFKH1313KUGI2351",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-proj/environments/my-env/contexts?filter=kind:{\"equals\": [\"organization\"]}\u0026limit=2\u0026continuationToken=QAGFKH1313KUGI2351",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of contexts",
            "example": 100
          },
          "_environmentId": {
            "type": "string",
            "description": "The environment ID where the context was evaluated",
            "example": "57be1db38b75bf0772d11384"
          },
          "continuationToken": {
            "type": "string",
            "description": "An obfuscated string that references the last context instance on the previous page of results. You can use this for pagination, however, we recommend using the \u003ccode\u003enext\u003c/code\u003e link instead.",
            "example": "QAGFKH1313KUGI2351"
          },
          "items": {
            "type": "array",
            "description": "A collection of contexts. Can include multiple versions of contexts that have the same \u003ccode\u003ekind\u003c/code\u003e and \u003ccode\u003ekey\u003c/code\u003e, but different \u003ccode\u003eapplicationId\u003c/code\u003es.",
            "items": {
              "$ref": "#/components/schemas/ContextRecord"
            }
          }
        }
      },
      "CopiedFromEnv": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Key of feature flag copied",
            "example": "source-flag-key-123abc"
          },
          "version": {
            "type": "integer",
            "description": "Version of feature flag copied",
            "example": 1
          }
        }
      },
      "CreateApprovalRequestRequest": {
        "type": "object",
        "required": [
          "resourceId",
          "description",
          "instructions"
        ],
        "properties": {
          "resourceId": {
            "type": "string",
            "description": "String representation of the resource specifier",
            "example": "proj/projKey:env/envKey:flag/flagKey"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment describing the approval request",
            "example": "optional comment"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the changes you're requesting",
            "example": "Requesting to update targeting"
          },
          "instructions": {
            "description": "List of instructions in semantic patch format to be applied to the feature flag. Review the [Update feature flag](https://launchdarkly.com/docs/ld-docs/api/feature-flags/patch-feature-flag) documentation for details on available instructions.",
            "example": "[{\"kind\": \"addUserTargets\", \"values\": [ \"user-key-123abc\"], \"variationId\": \"ce67d625-a8b9-4fb5-a344-ab909d9d4f4d\" }]",
            "$ref": "#/components/schemas/Instructions"
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "notifyTeamKeys": {
            "type": "array",
            "description": "An array of team keys. The members of these teams are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-reviewer-team"
            ]
          },
          "integrationConfig": {
            "description": "Additional approval request fields for third-party integration approval systems. If you are using a third-party integration to manage approval requests, these additional fields will be described in the \u003ccode\u003emanifest.json\u003c/code\u003e for that integration, at https://github.com/launchdarkly/integration-framework.",
            "$ref": "#/components/schemas/FormVariableConfig"
          }
        }
      },
      "CreatePhaseInput": {
        "type": "object",
        "required": [
          "audiences",
          "name"
        ],
        "properties": {
          "audiences": {
            "type": "array",
            "description": "An ordered list of the audiences for this release phase. Each audience corresponds to a LaunchDarkly environment.",
            "items": {
              "$ref": "#/components/schemas/AudiencePost"
            }
          },
          "name": {
            "type": "string",
            "description": "The release phase name",
            "example": "Phase 1 - Testing"
          },
          "configuration": {
            "description": "The configuration for the phase's rollout.",
            "$ref": "#/components/schemas/PhaseConfiguration"
          }
        }
      },
      "CreateReleaseInput": {
        "type": "object",
        "required": [
          "releasePipelineKey"
        ],
        "properties": {
          "releaseVariationId": {
            "type": "string",
            "description": "The variation id to release to across all phases"
          },
          "releasePipelineKey": {
            "type": "string",
            "description": "The key of the release pipeline to attach the flag to"
          }
        }
      },
      "CreateReleasePipelineInput": {
        "type": "object",
        "required": [
          "key",
          "name",
          "phases"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "The release pipeline description",
            "example": "Standard pipeline to roll out to production"
          },
          "key": {
            "type": "string",
            "description": "The unique identifier of this release pipeline",
            "example": "standard-pipeline"
          },
          "name": {
            "type": "string",
            "description": "The name of the release pipeline",
            "example": "Standard Pipeline"
          },
          "phases": {
            "type": "array",
            "description": "A logical grouping of one or more environments that share attributes for rolling out changes",
            "items": {
              "$ref": "#/components/schemas/CreatePhaseInput"
            }
          },
          "tags": {
            "type": "array",
            "description": "A list of tags for this release pipeline",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "isProjectDefault": {
            "type": "boolean",
            "description": "Whether or not the newly created pipeline should be set as the default pipeline for this project"
          },
          "isLegacy": {
            "type": "boolean",
            "description": "Whether or not the pipeline is enabled for Release Automation."
          }
        }
      },
      "CreateWorkflowTemplateInput": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "workflowId": {
            "$ref": "#/components/schemas/FeatureWorkflowId"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StageInput"
            }
          },
          "projectKey": {
            "type": "string"
          },
          "environmentKey": {
            "type": "string"
          },
          "flagKey": {
            "type": "string"
          }
        }
      },
      "CredibleIntervalRep": {
        "type": "object",
        "properties": {
          "upper": {
            "type": "number",
            "description": "The upper bound",
            "example": 0.6713222134386467
          },
          "lower": {
            "type": "number",
            "description": "The lower bound",
            "example": 0.4060771673663068
          }
        }
      },
      "CustomProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/customProperty"
        }
      },
      "CustomRole": {
        "type": "object",
        "required": [
          "_id",
          "_links",
          "key",
          "name",
          "policy"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of the custom role",
            "example": "1234a56b7c89d012345e678f"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this custom role",
            "$ref": "#/components/schemas/Access"
          },
          "description": {
            "type": "string",
            "description": "The description of the custom role",
            "example": "This custom role is just an example"
          },
          "key": {
            "type": "string",
            "description": "The key of the custom role",
            "example": "example-custom-role"
          },
          "name": {
            "type": "string",
            "description": "The name of the custom role",
            "example": "Example custom role"
          },
          "policy": {
            "type": "array",
            "description": "An array of the policies that comprise this custom role",
            "items": {
              "$ref": "#/components/schemas/Statement"
            }
          },
          "basePermissions": {
            "description": "Base permissions to use for this role. Only applicable to roles created prior to October 2024.",
            "example": "reader",
            "$ref": "#/components/schemas/RoleType"
          },
          "resourceCategory": {
            "description": "The category of resources this role is intended to manage. Can be \u003ccode\u003eorganization\u003c/code\u003e, \u003ccode\u003eproject\u003c/code\u003e, or \u003ccode\u003eany\u003c/code\u003e. Once set, this field cannot be changed.",
            "$ref": "#/components/schemas/ResourceCategory"
          },
          "assignedTo": {
            "description": "The number of teams and members this role is assigned to",
            "$ref": "#/components/schemas/AssignedToRep"
          },
          "_presetBundleVersion": {
            "type": "integer",
            "description": "If created from a preset, the preset bundle version"
          },
          "_presetStatements": {
            "type": "array",
            "description": "If created from a preset, the read-only statements copied from the preset",
            "items": {
              "$ref": "#/components/schemas/Statement"
            }
          }
        }
      },
      "CustomRolePost": {
        "type": "object",
        "required": [
          "name",
          "key",
          "policy"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the custom role",
            "example": "Ops team"
          },
          "key": {
            "type": "string",
            "description": "The custom role key",
            "example": "role-key-123abc"
          },
          "description": {
            "type": "string",
            "description": "Description of custom role",
            "example": "An example role for members of the ops team"
          },
          "policy": {
            "description": "Resource statements for custom role",
            "$ref": "#/components/schemas/StatementPostList"
          },
          "basePermissions": {
            "description": "Base permissions to use for this role. Only applicable to roles created prior to October 2024.",
            "example": "reader",
            "enum": [
              "reader",
              "no_access"
            ],
            "$ref": "#/components/schemas/RoleType"
          },
          "resourceCategory": {
            "description": "The category of resources this role is intended to manage. Can be \u003ccode\u003eorganization\u003c/code\u003e, \u003ccode\u003eproject\u003c/code\u003e, or \u003ccode\u003eany\u003c/code\u003e. This field is immutable.",
            "$ref": "#/components/schemas/ResourceCategory"
          }
        }
      },
      "CustomRoles": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "items": {
            "type": "array",
            "description": "An array of custom roles",
            "items": {
              "$ref": "#/components/schemas/CustomRole"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of custom roles"
          }
        }
      },
      "CustomWorkflowInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "maintainerId": {
            "description": "The ID of the workflow maintainer. Defaults to the workflow creator.",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/components/schemas/ObjectId"
          },
          "name": {
            "type": "string",
            "description": "The workflow name",
            "example": "Progressive rollout starting in two days"
          },
          "description": {
            "type": "string",
            "description": "The workflow description",
            "example": "Turn flag on for 10% of users each day"
          },
          "stages": {
            "type": "array",
            "description": "A list of the workflow stages",
            "items": {
              "$ref": "#/components/schemas/StageInput"
            }
          },
          "templateKey": {
            "type": "string",
            "description": "The template key"
          }
        }
      },
      "CustomWorkflowMeta": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the workflow stage that required this approval request",
            "example": "Example workflow name"
          },
          "stage": {
            "description": "Details on the stage of the workflow where this approval request is required",
            "$ref": "#/components/schemas/CustomWorkflowStageMeta"
          }
        }
      },
      "CustomWorkflowOutput": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "_conflicts",
          "_creationDate",
          "_maintainerId",
          "_links",
          "name",
          "_execution"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of the workflow",
            "example": "12ab3c4d5ef1a2345bcde67f"
          },
          "_version": {
            "type": "integer",
            "description": "The version of the workflow",
            "example": 1
          },
          "_conflicts": {
            "type": "array",
            "description": "Any conflicts that are present in the workflow stages",
            "items": {
              "$ref": "#/components/schemas/ConflictOutput"
            }
          },
          "_creationDate": {
            "description": "Timestamp of when the workflow was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_maintainerId": {
            "type": "string",
            "description": "The member ID of the maintainer of the workflow. Defaults to the workflow creator.",
            "example": "12ab3c45de678910abc12345"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "name": {
            "type": "string",
            "description": "The name of the workflow",
            "example": "Progressive rollout starting in two days"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the workflow",
            "example": "Turn flag on for 10% of customers each day"
          },
          "kind": {
            "type": "string",
            "description": "The kind of workflow",
            "example": "custom"
          },
          "stages": {
            "type": "array",
            "description": "The stages that make up the workflow. Each stage contains conditions and actions.",
            "items": {
              "$ref": "#/components/schemas/StageOutput"
            }
          },
          "_execution": {
            "description": "The current execution status of the workflow",
            "example": "{\"status\": \"completed\"}",
            "$ref": "#/components/schemas/ExecutionOutput"
          },
          "meta": {
            "description": "For workflows being created from a workflow template, this value holds any parameters that could potentially be incompatible with the current project, environment, or flag",
            "$ref": "#/components/schemas/WorkflowTemplateMetadata"
          },
          "templateKey": {
            "type": "string",
            "description": "For workflows being created from a workflow template, this value is the template's key",
            "example": "example-workflow-template"
          }
        }
      },
      "CustomWorkflowStageMeta": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "description": "The zero-based index of the workflow stage",
            "example": 0
          },
          "name": {
            "type": "string",
            "description": "The name of the workflow stage",
            "example": "Stage 1"
          }
        }
      },
      "CustomWorkflowsListingOutput": {
        "type": "object",
        "required": [
          "items",
          "totalCount",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of workflows",
            "items": {
              "$ref": "#/components/schemas/CustomWorkflowOutput"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of workflows",
            "example": 1
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "DateVersion": {
        "type": "integer"
      },
      "DefaultClientSideAvailability": {
        "type": "object",
        "required": [
          "usingMobileKey",
          "usingEnvironmentId"
        ],
        "properties": {
          "usingMobileKey": {
            "type": "boolean",
            "description": "Whether to enable availability for mobile SDKs",
            "example": true
          },
          "usingEnvironmentId": {
            "type": "boolean",
            "description": "Whether to enable availability for client-side SDKs",
            "example": true
          }
        }
      },
      "DefaultClientSideAvailabilityPost": {
        "type": "object",
        "required": [
          "usingEnvironmentId",
          "usingMobileKey"
        ],
        "properties": {
          "usingEnvironmentId": {
            "type": "boolean",
            "description": "Whether to enable availability for client-side SDKs.",
            "example": true
          },
          "usingMobileKey": {
            "type": "boolean",
            "description": "Whether to enable availability for mobile SDKs.",
            "example": true
          }
        }
      },
      "Defaults": {
        "type": "object",
        "required": [
          "onVariation",
          "offVariation"
        ],
        "properties": {
          "onVariation": {
            "type": "integer",
            "description": "The index, from the array of variations for this flag, of the variation to serve by default when targeting is on.",
            "example": 0
          },
          "offVariation": {
            "type": "integer",
            "description": "The index, from the array of variations for this flag, of the variation to serve by default when targeting is off.",
            "example": 1
          }
        }
      },
      "DependentExperimentListRep": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DependentExperimentRep"
        }
      },
      "DependentExperimentRep": {
        "type": "object",
        "required": [
          "key",
          "name",
          "environmentId",
          "environmentKey",
          "creationDate",
          "_links"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The experiment key",
            "example": "experiment-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "The experiment name",
            "example": "Example experiment"
          },
          "environmentId": {
            "type": "string",
            "description": "The environment ID",
            "example": "1234a56b7c89d012345e678f"
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key",
            "example": "production"
          },
          "creationDate": {
            "description": "Timestamp of when the experiment was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "archivedDate": {
            "description": "Timestamp of when the experiment was archived",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-environment/experiments/example-experiment",
                "type": "application/json"
              }
            }
          }
        }
      },
      "DependentFlag": {
        "type": "object",
        "required": [
          "key",
          "_links",
          "_site"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The flag name",
            "example": "Example dependent flag"
          },
          "key": {
            "type": "string",
            "description": "The flag key",
            "example": "dependent-flag-key-123abc"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_site": {
            "description": "Details on how to access the dependent flag in the LaunchDarkly UI",
            "example": "{ \"href\": \"/example-project/example-environment/features/example-dependent-flag\", \"type\": \"text/html\" }",
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "DependentFlagEnvironment": {
        "type": "object",
        "required": [
          "key",
          "_links",
          "_site"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The environment name",
            "example": "Example environment"
          },
          "key": {
            "type": "string",
            "description": "The environment key",
            "example": "environment-key-123abc"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_site": {
            "description": "Details on how to access the dependent flag in this environment in the LaunchDarkly UI",
            "example": "{ \"href\": \"/example-project/example-environment/features/example-dependent-flag\", \"type\": \"text/html\" }",
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "DependentFlagsByEnvironment": {
        "type": "object",
        "required": [
          "items",
          "_links",
          "_site"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "A list of dependent flags, which are flags that use the requested flag as a prerequisite",
            "items": {
              "$ref": "#/components/schemas/DependentFlag"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_site": {
            "description": "Details on how to access the prerequisite flag in the LaunchDarkly UI",
            "example": "{ \"href\": \"/example-project/~/features/example-prereq-flag\", \"type\": \"text/html\" }",
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "DependentMetricGroupRep": {
        "type": "object",
        "required": [
          "key",
          "name",
          "kind",
          "_links"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric group",
            "example": "metric-group-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric group",
            "example": "My metric group"
          },
          "kind": {
            "type": "string",
            "description": "The type of the metric group",
            "example": "funnel",
            "enum": [
              "funnel",
              "standard"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/metric-groups/my-metric-group",
                "type": "application/json"
              }
            }
          }
        }
      },
      "DependentMetricGroupRepWithMetrics": {
        "type": "object",
        "required": [
          "key",
          "name",
          "kind",
          "_links"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric group",
            "example": "metric-group-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric group",
            "example": "My metric group"
          },
          "kind": {
            "type": "string",
            "description": "The type of the metric group",
            "example": "funnel",
            "enum": [
              "funnel",
              "standard"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/metric-groups/my-metric-group",
                "type": "application/json"
              }
            }
          },
          "metrics": {
            "type": "array",
            "description": "The metrics in the metric group",
            "items": {
              "$ref": "#/components/schemas/MetricInGroupRep"
            }
          }
        }
      },
      "DependentMetricOrMetricGroupRep": {
        "type": "object",
        "required": [
          "key",
          "_versionId",
          "name",
          "kind",
          "_links",
          "isGroup"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric or metric group",
            "example": "metric-key-123abc"
          },
          "_versionId": {
            "type": "string",
            "description": "The version ID of the metric or metric group"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric or metric group",
            "example": "My metric"
          },
          "kind": {
            "type": "string",
            "description": "If this is a metric, then it represents the kind of event the metric tracks. If this is a metric group, then it represents the group type",
            "example": "custom",
            "enum": [
              "pageview",
              "click",
              "custom",
              "funnel",
              "standard"
            ]
          },
          "isNumeric": {
            "type": "boolean",
            "description": "For custom metrics, whether to track numeric changes in value against a baseline (\u003ccode\u003etrue\u003c/code\u003e) or to track a conversion when an end user takes an action (\u003ccode\u003efalse\u003c/code\u003e).",
            "example": true
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/metrics/my-project/my-metric",
                "type": "application/json"
              }
            }
          },
          "isGroup": {
            "type": "boolean",
            "description": "Whether this is a metric group or a metric"
          },
          "metrics": {
            "type": "array",
            "description": "An ordered list of the metrics in this metric group",
            "items": {
              "$ref": "#/components/schemas/MetricInGroupRep"
            }
          }
        }
      },
      "Destination": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this Data Export destination",
            "example": "610addeadbeefaa86ec9a7d4"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/destinations",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/destinations/my-project/my-environment/610addeadbeefaa86ec9a7d4",
                "type": "application/json"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "A human-readable name for your Data Export destination",
            "example": "example-destination"
          },
          "kind": {
            "type": "string",
            "description": "The type of Data Export destination",
            "example": "google-pubsub",
            "enum": [
              "google-pubsub",
              "kinesis",
              "mparticle",
              "segment",
              "azure-event-hubs",
              "snowflake-v2"
            ]
          },
          "version": {
            "type": "number",
            "example": 1
          },
          "config": {
            "description": "An object with the configuration parameters required for the destination type",
            "example": "{\"project\":\"test-prod\",\"topic\":\"ld-pubsub-test-192301\"}"
          },
          "on": {
            "type": "boolean",
            "description": "Whether the export is on, that is, the status of the integration",
            "example": true
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this Data Export destination",
            "$ref": "#/components/schemas/Access"
          }
        }
      },
      "DestinationPost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-readable name for your Data Export destination",
            "example": "example-destination"
          },
          "kind": {
            "type": "string",
            "description": "The type of Data Export destination",
            "example": "google-pubsub",
            "enum": [
              "google-pubsub",
              "kinesis",
              "mparticle",
              "segment",
              "azure-event-hubs",
              "snowflake-v2"
            ]
          },
          "config": {
            "description": "An object with the configuration parameters required for the destination type",
            "example": "{\"project\":\"test-prod\",\"topic\":\"ld-pubsub-test-192301\"}"
          },
          "on": {
            "type": "boolean",
            "description": "Whether the export is on. Displayed as the integration status in the LaunchDarkly UI.",
            "example": true
          }
        }
      },
      "Destinations": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/destinations",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "description": "An array of Data Export destinations",
            "items": {
              "$ref": "#/components/schemas/Destination"
            }
          }
        }
      },
      "Distribution": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of distribution.",
            "example": "normal",
            "enum": [
              "normal",
              "beta"
            ]
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            },
            "description": "The parameters of the distribution. The parameters are different for each distribution type. When \u003ccode\u003ekind\u003c/code\u003e is \u003ccode\u003enormal\u003c/code\u003e, the parameters of the distribution are 'mu' and 'sigma'. When \u003ccode\u003ekind\u003c/code\u003e is \u003ccode\u003ebeta\u003c/code\u003e, the parameters of the distribution are 'alpha' and 'beta.'"
          }
        }
      },
      "DurationUnit": {
        "type": "string"
      },
      "DynamicOptions": {
        "type": "object",
        "properties": {
          "endpoint": {
            "$ref": "#/components/schemas/Endpoint"
          },
          "parser": {
            "$ref": "#/components/schemas/DynamicOptionsParser"
          }
        }
      },
      "DynamicOptionsParser": {
        "type": "object",
        "properties": {
          "optionsItems": {
            "$ref": "#/components/schemas/OptionsArray"
          },
          "optionsPath": {
            "type": "string"
          }
        }
      },
      "Endpoint": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeaderItems"
            }
          },
          "hmacSignature": {
            "$ref": "#/components/schemas/HMACSignature"
          },
          "method": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "Environment": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "key",
          "name",
          "apiKey",
          "mobileKey",
          "color",
          "defaultTtl",
          "secureMode",
          "defaultTrackEvents",
          "requireComments",
          "confirmChanges",
          "tags",
          "critical"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "The ID for the environment. Use this as the client-side ID for authorization in some client-side SDKs, and to associate LaunchDarkly environments with CDN integrations in edge SDKs.",
            "example": "57be1db38b75bf0772d11384"
          },
          "key": {
            "type": "string",
            "description": "A project-unique key for the new environment",
            "example": "environment-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the new environment",
            "example": "My Environment"
          },
          "apiKey": {
            "type": "string",
            "description": "The SDK key for the environment. Use this for authorization in server-side SDKs.",
            "example": "sdk-xxx"
          },
          "mobileKey": {
            "type": "string",
            "description": "The mobile key for the environment. Use this for authorization in mobile SDKs.",
            "example": "mob-xxx"
          },
          "color": {
            "type": "string",
            "description": "The color used to indicate this environment in the UI",
            "example": "F5A623"
          },
          "defaultTtl": {
            "type": "integer",
            "description": "The default time (in minutes) that the PHP SDK can cache feature flag rules locally",
            "example": 5
          },
          "secureMode": {
            "type": "boolean",
            "description": "Ensures that one end user of the client-side SDK cannot inspect the variations for another end user",
            "example": true
          },
          "defaultTrackEvents": {
            "type": "boolean",
            "description": "Enables tracking detailed information for new flags by default",
            "example": false
          },
          "requireComments": {
            "type": "boolean",
            "description": "Whether members who modify flags and segments through the LaunchDarkly user interface are required to add a comment",
            "example": true
          },
          "confirmChanges": {
            "type": "boolean",
            "description": "Whether members who modify flags and segments through the LaunchDarkly user interface are required to confirm those changes",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "A list of tags for this environment",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "approvalSettings": {
            "description": "Details on the approval settings for this environment",
            "$ref": "#/components/schemas/ApprovalSettings"
          },
          "resourceApprovalSettings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApprovalSettings"
            },
            "description": "Details on the approval settings for this environment for each resource kind"
          },
          "critical": {
            "type": "boolean",
            "description": "Whether the environment is critical",
            "example": true
          }
        }
      },
      "EnvironmentPost": {
        "type": "object",
        "required": [
          "name",
          "key",
          "color"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the new environment",
            "example": "My Environment"
          },
          "key": {
            "type": "string",
            "description": "A project-unique key for the new environment",
            "example": "environment-key-123abc"
          },
          "color": {
            "type": "string",
            "description": "A color to indicate this environment in the UI",
            "example": "F5A623"
          },
          "defaultTtl": {
            "type": "integer",
            "description": "The default time (in minutes) that the PHP SDK can cache feature flag rules locally",
            "example": 5
          },
          "secureMode": {
            "type": "boolean",
            "description": "Ensures that one end user of the client-side SDK cannot inspect the variations for another end user",
            "example": true
          },
          "defaultTrackEvents": {
            "type": "boolean",
            "description": "Enables tracking detailed information for new flags by default",
            "example": false
          },
          "confirmChanges": {
            "type": "boolean",
            "description": "Requires confirmation for all flag and segment changes via the UI in this environment",
            "example": false
          },
          "requireComments": {
            "type": "boolean",
            "description": "Requires comments for all flag and segment changes via the UI in this environment",
            "example": false
          },
          "tags": {
            "type": "array",
            "description": "Tags to apply to the new environment",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "source": {
            "description": "Indicates that the new environment created will be cloned from the provided source environment",
            "$ref": "#/components/schemas/SourceEnv"
          },
          "critical": {
            "type": "boolean",
            "description": "Whether the environment is critical",
            "example": true
          }
        }
      },
      "EnvironmentSummary": {
        "type": "object",
        "required": [
          "_links",
          "key",
          "name",
          "color"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              }
            }
          },
          "key": {
            "type": "string",
            "description": "A project-unique key for the environment",
            "example": "environment-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the environment",
            "example": "My Environment"
          },
          "color": {
            "type": "string",
            "description": "The color used to indicate this environment in the UI",
            "example": "F5A623"
          }
        }
      },
      "Environments": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of environments returned",
            "example": 2
          },
          "items": {
            "type": "array",
            "description": "An array of environments",
            "items": {
              "$ref": "#/components/schemas/Environment"
            }
          }
        }
      },
      "EvaluationReason": {
        "type": "object",
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "Describes the general reason that LaunchDarkly selected this variation.",
            "example": "OFF"
          },
          "ruleIndex": {
            "type": "integer",
            "description": "The positional index of the matching rule if the kind is 'RULE_MATCH'. The index is 0-based.",
            "example": 3
          },
          "ruleID": {
            "type": "string",
            "description": "The unique identifier of the matching rule if the kind is 'RULE_MATCH'.",
            "example": "1234567890"
          },
          "prerequisiteKey": {
            "type": "string",
            "description": "The key of the flag that failed if the kind is 'PREREQUISITE_FAILED'.",
            "example": "someotherflagkey"
          },
          "inExperiment": {
            "type": "boolean",
            "description": "Indicates whether the evaluation occurred as part of an experiment.",
            "example": true
          },
          "errorKind": {
            "type": "string",
            "description": "The specific error type if the kind is 'ERROR'.",
            "example": "USER_NOT_SPECIFIED"
          }
        }
      },
      "ExecutionOutput": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the execution of this workflow stage",
            "example": "completed"
          },
          "stopDate": {
            "description": "Timestamp of when the workflow was completed.",
            "example": "1718467200000",
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "ExpandableApprovalRequestResponse": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "creationDate",
          "serviceKind",
          "reviewStatus",
          "allReviews",
          "notifyMemberIds",
          "status",
          "instructions",
          "conflicts",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this approval request",
            "example": "12ab3c45de678910abc12345"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the approval request",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of when the approval request was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "serviceKind": {
            "description": "The approval service for this request. May be LaunchDarkly or an external approval service, such as ServiceNow or JIRA.",
            "example": "launchdarkly",
            "$ref": "#/components/schemas/ApprovalRequestServiceKind"
          },
          "requestorId": {
            "type": "string",
            "description": "The ID of the member who requested the approval",
            "example": "12ab3c45de678910abc12345"
          },
          "description": {
            "type": "string",
            "description": "A human-friendly name for the approval request",
            "example": "example: request approval from someone"
          },
          "reviewStatus": {
            "type": "string",
            "description": "Current status of the review of this approval request",
            "example": "pending",
            "enum": [
              "approved",
              "declined",
              "pending"
            ]
          },
          "allReviews": {
            "type": "array",
            "description": "An array of individual reviews of this approval request",
            "items": {
              "$ref": "#/components/schemas/ReviewResponse"
            }
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "appliedDate": {
            "description": "Timestamp of when the approval request was applied",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "appliedByMemberId": {
            "type": "string",
            "description": "The member ID of the member who applied the approval request",
            "example": "1234a56b7c89d012345e678f"
          },
          "appliedByServiceTokenId": {
            "type": "string",
            "description": "The service token ID of the service token which applied the approval request",
            "example": "1234a56b7c89d012345e678f"
          },
          "status": {
            "type": "string",
            "description": "Current status of the approval request",
            "example": "pending",
            "enum": [
              "pending",
              "completed",
              "failed",
              "scheduled"
            ]
          },
          "instructions": {
            "description": "List of instructions in semantic patch format to be applied to the feature flag",
            "example": "[{\"kind\": \"turnFlagOn\"}]",
            "$ref": "#/components/schemas/Instructions"
          },
          "conflicts": {
            "type": "array",
            "description": "Details on any conflicting approval requests",
            "items": {
              "$ref": "#/components/schemas/Conflict"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "executionDate": {
            "description": "Timestamp for when instructions will be executed",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "operatingOnId": {
            "type": "string",
            "description": "ID of scheduled change to edit or delete",
            "example": "12ab3c45de678910abc12345"
          },
          "integrationMetadata": {
            "description": "Details about the object in an external service corresponding to this approval request, such as a ServiceNow change request or a JIRA ticket, if an external approval service is being used",
            "$ref": "#/components/schemas/IntegrationMetadata"
          },
          "source": {
            "description": "Details about the source feature flag, if copied",
            "$ref": "#/components/schemas/CopiedFromEnv"
          },
          "customWorkflowMetadata": {
            "description": "Details about the custom workflow, if this approval request is part of a custom workflow",
            "$ref": "#/components/schemas/CustomWorkflowMeta"
          },
          "resourceId": {
            "type": "string",
            "description": "String representation of a resource"
          },
          "approvalSettings": {
            "description": "The settings for this approval",
            "$ref": "#/components/schemas/ApprovalSettings"
          },
          "project": {
            "description": "Project the approval request belongs to",
            "$ref": "#/components/schemas/Project"
          },
          "environments": {
            "type": "array",
            "description": "List of environments the approval impacts",
            "items": {
              "$ref": "#/components/schemas/Environment"
            }
          },
          "flag": {
            "description": "Flag the approval request belongs to",
            "$ref": "#/components/schemas/ExpandedFlagRep"
          },
          "resource": {
            "description": "Resource the approval request belongs to",
            "$ref": "#/components/schemas/ExpandedResourceRep"
          }
        }
      },
      "ExpandableApprovalRequestsResponse": {
        "type": "object",
        "required": [
          "items",
          "totalCount",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of approval requests",
            "items": {
              "$ref": "#/components/schemas/ExpandableApprovalRequestResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of approval requests",
            "example": 1
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ExpandedFlagRep": {
        "type": "object",
        "required": [
          "name",
          "kind",
          "key",
          "_version",
          "creationDate",
          "variations",
          "temporary",
          "tags",
          "_links",
          "customProperties",
          "archived"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the feature flag",
            "example": "My Flag"
          },
          "kind": {
            "type": "string",
            "description": "Kind of feature flag",
            "example": "boolean",
            "enum": [
              "boolean",
              "multivariate"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the feature flag",
            "example": "This flag controls the example widgets"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the flag in your code",
            "example": "flag-key-123abc"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the feature flag",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of flag creation date",
            "example": "1494437420312",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "includeInSnippet": {
            "type": "boolean",
            "description": "Deprecated, use \u003ccode\u003eclientSideAvailability\u003c/code\u003e. Whether this flag should be made available to the client-side JavaScript SDK",
            "example": true,
            "deprecated": true
          },
          "clientSideAvailability": {
            "description": "Which type of client-side SDKs the feature flag is available to",
            "example": "{\"usingMobileKey\":true,\"usingEnvironmentId\":false}",
            "$ref": "#/components/schemas/ClientSideAvailability"
          },
          "variations": {
            "type": "array",
            "description": "An array of possible variations for the flag",
            "items": {
              "$ref": "#/components/schemas/Variation"
            },
            "example": [
              {
                "_id": "e432f62b-55f6-49dd-a02f-eb24acf39d05",
                "value": true
              },
              {
                "_id": "a00bf58d-d252-476c-b915-15a74becacb4",
                "value": false
              }
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag is a temporary flag",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "Tags for the feature flag",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/flags/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/flags/my-project/my-flag",
                "type": "application/json"
              }
            }
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains the flag",
            "example": "569f183514f4432160000007"
          },
          "_maintainer": {
            "description": "Details on the member who maintains this feature flag",
            "$ref": "#/components/schemas/MemberSummary"
          },
          "customProperties": {
            "description": "Metadata attached to the feature flag, in the form of the property key associated with a name and array of values for the metadata to associate with this flag. Typically used to store data related to an integration.",
            "example": "{\"jira.issues\":{\"name\":\"Jira issues\",\"value\":[\"is-123\",\"is-456\"]}}",
            "$ref": "#/components/schemas/CustomProperties"
          },
          "archived": {
            "type": "boolean",
            "description": "Boolean indicating if the feature flag is archived",
            "example": false
          },
          "archivedDate": {
            "description": "If archived is true, date of archive",
            "example": "1494437420312",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "defaults": {
            "description": "The indices, from the array of variations, for the variations to serve by default when targeting is on and when targeting is off. These variations will be used for this flag in new environments. If omitted, the first and last variation will be used.",
            "example": "{\"onVariation\":0,\"offVariation\":1}",
            "$ref": "#/components/schemas/Defaults"
          }
        }
      },
      "ExpandedResourceRep": {
        "type": "object",
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of resource",
            "example": "flag"
          },
          "flag": {
            "$ref": "#/components/schemas/ExpandedFlagRep"
          },
          "segment": {
            "$ref": "#/components/schemas/UserSegment"
          },
          "aiConfig": {
            "$ref": "#/components/schemas/AIConfigRep"
          }
        }
      },
      "Experiment": {
        "type": "object",
        "required": [
          "key",
          "name",
          "_maintainerId",
          "_creationDate",
          "environmentKey",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The experiment ID",
            "example": "12ab3c45de678910fgh12345"
          },
          "key": {
            "type": "string",
            "description": "The experiment key",
            "example": "experiment-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "The experiment name",
            "example": "Example experiment"
          },
          "description": {
            "type": "string",
            "description": "The experiment description",
            "example": "An example experiment, used in testing"
          },
          "_maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this experiment.",
            "example": "12ab3c45de678910fgh12345"
          },
          "_creationDate": {
            "description": "Timestamp of when the experiment was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "environmentKey": {
            "type": "string"
          },
          "archivedDate": {
            "description": "Timestamp of when the experiment was archived",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project/environments/my-environment",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/environments/my-environment/experiments/my-experiment",
                "type": "application/json"
              }
            }
          },
          "holdoutId": {
            "type": "string",
            "description": "The holdout ID",
            "example": "f3b74309-d581-44e1-8a2b-bb2933b4fe40"
          },
          "currentIteration": {
            "description": "Details on the current iteration",
            "$ref": "#/components/schemas/IterationRep"
          },
          "draftIteration": {
            "description": "Details on the current iteration. This iteration may be already started, or may still be a draft.",
            "$ref": "#/components/schemas/IterationRep"
          },
          "previousIterations": {
            "type": "array",
            "description": "Details on the previous iterations for this experiment.",
            "items": {
              "$ref": "#/components/schemas/IterationRep"
            }
          }
        }
      },
      "ExperimentAllocationRep": {
        "type": "object",
        "required": [
          "defaultVariation",
          "canReshuffle"
        ],
        "properties": {
          "defaultVariation": {
            "type": "integer"
          },
          "canReshuffle": {
            "type": "boolean"
          }
        }
      },
      "ExperimentBayesianResultsRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "treatmentResults": {
            "type": "array",
            "description": "Deprecated, use \u003ccode\u003eresults\u003c/code\u003e instead. Only populated when response does not contain results sliced by multiple attributes.",
            "items": {
              "$ref": "#/components/schemas/TreatmentResultRep"
            },
            "deprecated": true
          },
          "metricSeen": {
            "$ref": "#/components/schemas/MetricSeen"
          },
          "probabilityOfMismatch": {
            "type": "number",
            "description": "The probability of a Sample Ratio Mismatch",
            "example": 0.9999999999999738
          },
          "results": {
            "type": "array",
            "description": "A list of attribute values and their corresponding treatment results",
            "items": {
              "$ref": "#/components/schemas/SlicedResultsRep"
            }
          }
        }
      },
      "ExperimentCollectionRep": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of experiments",
            "items": {
              "$ref": "#/components/schemas/Experiment"
            }
          },
          "total_count": {
            "type": "integer",
            "description": "The total number of experiments in this project and environment. Does not include legacy experiments."
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ExperimentEnabledPeriodRep": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "stopDate": {
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "ExperimentEnvironmentSettingRep": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "stopDate": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "enabledPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExperimentEnabledPeriodRep"
            }
          }
        }
      },
      "ExperimentInfoRep": {
        "type": "object",
        "required": [
          "baselineIdx",
          "items"
        ],
        "properties": {
          "baselineIdx": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegacyExperimentRep"
            }
          }
        }
      },
      "ExperimentPatchInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "Optional comment"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like \u003ccode\u003e{\"kind\": \"update_action\"}\u003c/code\u003e. Some instructions also require a \u003ccode\u003evalue\u003c/code\u003e field in the array element.",
            "example": "[{\"kind\": \"updateName\", \"value\": \"Updated experiment name\"}]",
            "$ref": "#/components/schemas/Instructions"
          }
        }
      },
      "ExperimentPost": {
        "type": "object",
        "required": [
          "name",
          "key",
          "iteration"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The experiment name",
            "example": "Example experiment"
          },
          "description": {
            "type": "string",
            "description": "The experiment description",
            "example": "An example experiment, used in testing"
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this experiment",
            "example": "12ab3c45de678910fgh12345"
          },
          "key": {
            "type": "string",
            "description": "The experiment key",
            "example": "experiment-key-123abc"
          },
          "iteration": {
            "description": "Details on the construction of the initial iteration",
            "$ref": "#/components/schemas/IterationInput"
          },
          "holdoutId": {
            "type": "string",
            "description": "The ID of the holdout",
            "example": "f3b74309-d581-44e1-8a2b-bb2933b4fe40"
          }
        }
      },
      "ExpiringTarget": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "expirationDate",
          "contextKind",
          "contextKey",
          "_resourceId"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this expiring target",
            "example": "12ab3c45de678910abc12345"
          },
          "_version": {
            "type": "integer",
            "description": "The version of this expiring target",
            "example": 1
          },
          "expirationDate": {
            "description": "A timestamp for when the target expires",
            "example": "1672358400000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "contextKind": {
            "type": "string",
            "description": "The context kind of the context to be removed",
            "example": "user"
          },
          "contextKey": {
            "type": "string",
            "description": "A unique key used to represent the context to be removed",
            "example": "context-key-123abc"
          },
          "targetType": {
            "type": "string",
            "description": "A segment's target type, \u003ccode\u003eincluded\u003c/code\u003e or \u003ccode\u003eexcluded\u003c/code\u003e. Included when expiring targets are updated on a segment.",
            "example": "included"
          },
          "variationId": {
            "type": "string",
            "description": "A unique ID used to represent the flag variation. Included when expiring targets are updated on a feature flag.",
            "example": "cc4332e2-bd4d-4fe0-b509-dfd2caf8dd73"
          },
          "_resourceId": {
            "description": "Details on the segment or flag this expiring target belongs to, its environment, and its project",
            "$ref": "#/components/schemas/ResourceId"
          }
        }
      },
      "ExpiringTargetError": {
        "type": "object",
        "required": [
          "instructionIndex",
          "message"
        ],
        "properties": {
          "instructionIndex": {
            "type": "integer",
            "description": "The index of the PATCH instruction where the error occurred",
            "example": 1
          },
          "message": {
            "type": "string",
            "description": "The error message related to a failed PATCH instruction",
            "example": "example error message"
          }
        }
      },
      "ExpiringTargetGetResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "A list of expiring targets",
            "items": {
              "$ref": "#/components/schemas/ExpiringTarget"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ExpiringTargetPatchResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "A list of the results from each instruction",
            "items": {
              "$ref": "#/components/schemas/ExpiringTarget"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "totalInstructions": {
            "type": "integer"
          },
          "successfulInstructions": {
            "type": "integer"
          },
          "failedInstructions": {
            "type": "integer"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpiringTargetError"
            }
          }
        }
      },
      "ExpiringUserTargetGetResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of expiring user targets",
            "items": {
              "$ref": "#/components/schemas/ExpiringUserTargetItem"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ExpiringUserTargetItem": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "expirationDate",
          "userKey",
          "_resourceId"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this expiring user target",
            "example": "12ab3c45de678910fgh12345"
          },
          "_version": {
            "type": "integer",
            "description": "The version of this expiring user target",
            "example": 1
          },
          "expirationDate": {
            "description": "A timestamp for when the user target expires",
            "example": "1658192820000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "userKey": {
            "type": "string",
            "description": "A unique key used to represent the user",
            "example": "example-user-key"
          },
          "targetType": {
            "type": "string",
            "description": "A segment's target type. Included when expiring user targets are updated on a segment.",
            "example": "included"
          },
          "variationId": {
            "type": "string",
            "description": "A unique key used to represent the flag variation. Included when expiring user targets are updated on a feature flag.",
            "example": "ce67d625-a8b9-4fb5-a344-ab909d9d4f4d"
          },
          "_resourceId": {
            "description": "Details on the resource from which the user is expiring",
            "$ref": "#/components/schemas/ResourceIDResponse"
          }
        }
      },
      "ExpiringUserTargetPatchResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of expiring user targets",
            "items": {
              "$ref": "#/components/schemas/ExpiringUserTargetItem"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "totalInstructions": {
            "type": "integer",
            "description": "The total count of instructions sent in the PATCH request",
            "example": 1
          },
          "successfulInstructions": {
            "type": "integer",
            "description": "The total count of successful instructions sent in the PATCH request",
            "example": 1
          },
          "failedInstructions": {
            "type": "integer",
            "description": "The total count of the failed instructions sent in the PATCH request",
            "example": 0
          },
          "errors": {
            "type": "array",
            "description": "An array of error messages for the failed instructions",
            "items": {
              "$ref": "#/components/schemas/ExpiringTargetError"
            }
          }
        }
      },
      "Export": {
        "type": "object",
        "required": [
          "id",
          "segmentKey",
          "creationTime",
          "status",
          "sizeBytes",
          "size",
          "initiator",
          "_links"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The export ID",
            "example": "1234a567-bcd8-9123-4567-abcd1234567f"
          },
          "segmentKey": {
            "type": "string",
            "description": "The segment key",
            "example": "example-big-segment"
          },
          "creationTime": {
            "description": "Timestamp of when this export was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "status": {
            "type": "string",
            "description": "The export status",
            "example": "complete"
          },
          "sizeBytes": {
            "type": "integer",
            "format": "int64",
            "description": "The export size, in bytes",
            "example": 18
          },
          "size": {
            "type": "string",
            "description": "The export size, with units",
            "example": "18 B"
          },
          "initiator": {
            "description": "Details on the member who initiated the export",
            "example": "{\"name\": \"Ariel Flores\", \"email\": \"ariel@acme.com\"}",
            "$ref": "#/components/schemas/InitiatorRep"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources, including the location of the exported file"
          }
        }
      },
      "Extinction": {
        "type": "object",
        "required": [
          "revision",
          "message",
          "time",
          "flagKey",
          "projKey"
        ],
        "properties": {
          "revision": {
            "type": "string",
            "description": "The identifier for the revision where flag became extinct. For example, a commit SHA.",
            "example": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"
          },
          "message": {
            "type": "string",
            "description": "Description of the extinction. For example, the commit message for the revision.",
            "example": "Remove flag for launched feature"
          },
          "time": {
            "description": "Time of extinction",
            "example": "1636558831870",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "flagKey": {
            "type": "string",
            "description": "The feature flag key",
            "example": "enable-feature"
          },
          "projKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          }
        }
      },
      "ExtinctionCollectionRep": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Extinction"
              }
            },
            "description": "An array of extinction events"
          }
        }
      },
      "ExtinctionListPost": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Extinction"
        }
      },
      "FeatureFlag": {
        "type": "object",
        "required": [
          "name",
          "kind",
          "key",
          "_version",
          "creationDate",
          "variations",
          "temporary",
          "tags",
          "_links",
          "experiments",
          "customProperties",
          "archived"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the feature flag",
            "example": "My Flag"
          },
          "kind": {
            "type": "string",
            "description": "Kind of feature flag",
            "example": "boolean",
            "enum": [
              "boolean",
              "multivariate"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the feature flag",
            "example": "This flag controls the example widgets"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the flag in your code",
            "example": "flag-key-123abc"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the feature flag",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of flag creation date",
            "example": "1494437420312",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "includeInSnippet": {
            "type": "boolean",
            "description": "Deprecated, use \u003ccode\u003eclientSideAvailability\u003c/code\u003e. Whether this flag should be made available to the client-side JavaScript SDK",
            "example": true,
            "deprecated": true
          },
          "clientSideAvailability": {
            "description": "Which type of client-side SDKs the feature flag is available to",
            "example": "{\"usingMobileKey\":true,\"usingEnvironmentId\":false}",
            "$ref": "#/components/schemas/ClientSideAvailability"
          },
          "variations": {
            "type": "array",
            "description": "An array of possible variations for the flag",
            "items": {
              "$ref": "#/components/schemas/Variation"
            },
            "example": [
              {
                "_id": "e432f62b-55f6-49dd-a02f-eb24acf39d05",
                "value": true
              },
              {
                "_id": "a00bf58d-d252-476c-b915-15a74becacb4",
                "value": false
              }
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag is a temporary flag",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "Tags for the feature flag",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/flags/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/flags/my-project/my-flag",
                "type": "application/json"
              }
            }
          },
          "maintainerId": {
            "type": "string",
            "description": "Associated maintainerId for the feature flag",
            "example": "569f183514f4432160000007"
          },
          "_maintainer": {
            "description": "Associated maintainer member info for the feature flag",
            "$ref": "#/components/schemas/MemberSummary"
          },
          "maintainerTeamKey": {
            "type": "string",
            "description": "The key of the associated team that maintains this feature flag",
            "example": "team-1"
          },
          "_maintainerTeam": {
            "description": "Associated maintainer team info for the feature flag",
            "$ref": "#/components/schemas/MaintainerTeam"
          },
          "goalIds": {
            "type": "array",
            "description": "Deprecated, use \u003ccode\u003eexperiments\u003c/code\u003e instead",
            "items": {
              "type": "string"
            },
            "example": [],
            "deprecated": true
          },
          "experiments": {
            "description": "Experimentation data for the feature flag",
            "example": "{\"baselineIdx\": 0,\"items\": []}",
            "$ref": "#/components/schemas/ExperimentInfoRep"
          },
          "customProperties": {
            "description": "Metadata attached to the feature flag, in the form of the property key associated with a name and array of values for the metadata to associate with this flag. Typically used to store data related to an integration.",
            "example": "{\"jira.issues\":{\"name\":\"Jira issues\",\"value\":[\"is-123\",\"is-456\"]}}",
            "$ref": "#/components/schemas/CustomProperties"
          },
          "archived": {
            "type": "boolean",
            "description": "Boolean indicating if the feature flag is archived",
            "example": false
          },
          "archivedDate": {
            "description": "If archived is true, date of archive",
            "example": "1494437420312",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "deprecated": {
            "type": "boolean",
            "description": "Boolean indicating if the feature flag is deprecated",
            "example": false
          },
          "deprecatedDate": {
            "description": "If deprecated is true, date of deprecation",
            "example": "1494437420312",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "defaults": {
            "description": "The indices, from the array of variations, for the variations to serve by default when targeting is on and when targeting is off. These variations will be used for this flag in new environments. If omitted, the first and last variation will be used.",
            "example": "{\"onVariation\":0,\"offVariation\":1}",
            "$ref": "#/components/schemas/Defaults"
          },
          "_purpose": {
            "type": "string"
          },
          "migrationSettings": {
            "description": "Migration-related settings for the flag",
            "$ref": "#/components/schemas/FlagMigrationSettingsRep"
          },
          "environments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FeatureFlagConfig"
            },
            "description": "Details on the environments for this flag. Only returned if the request is filtered by environment, using the \u003ccode\u003efilterEnv\u003c/code\u003e query parameter.",
            "example": {
              "my-environment": {
                "_environmentName": "My Environment",
                "_site": {
                  "href": "/default/my-environment/features/client-side-flag",
                  "type": "text/html"
                },
                "_summary": {
                  "prerequisites": 0,
                  "variations": {
                    "0": {
                      "contextTargets": 1,
                      "isFallthrough": true,
                      "nullRules": 0,
                      "rules": 0,
                      "targets": 1
                    },
                    "1": {
                      "isOff": true,
                      "nullRules": 0,
                      "rules": 0,
                      "targets": 0
                    }
                  }
                },
                "archived": false,
                "contextTargets": [
                  {
                    "contextKind": "device",
                    "values": [
                      "device-key-123abc"
                    ],
                    "variation": 0
                  }
                ],
                "fallthrough": {
                  "variation": 0
                },
                "lastModified": 1627071171347,
                "offVariation": 1,
                "on": false,
                "prerequisites": [],
                "rules": [],
                "salt": "61eddeadbeef4da1facecafe3a60a397",
                "sel": "810edeadbeef4844facecafe438f2999492",
                "targets": [
                  {
                    "contextKind": "user",
                    "values": [
                      "user-key-123abc"
                    ],
                    "variation": 0
                  }
                ],
                "trackEvents": false,
                "trackEventsFallthrough": false,
                "version": 1
              }
            }
          }
        }
      },
      "FeatureFlagBody": {
        "type": "object",
        "required": [
          "name",
          "key"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the feature flag",
            "example": "My flag"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the flag in your code",
            "example": "flag-key-123abc"
          },
          "description": {
            "type": "string",
            "description": "Description of the feature flag. Defaults to an empty string.",
            "example": "This flag controls the example widgets"
          },
          "includeInSnippet": {
            "type": "boolean",
            "description": "Deprecated, use \u003ccode\u003eclientSideAvailability\u003c/code\u003e. Whether this flag should be made available to the client-side JavaScript SDK. Defaults to \u003ccode\u003efalse\u003c/code\u003e.",
            "deprecated": true
          },
          "clientSideAvailability": {
            "description": "Which type of client-side SDKs the feature flag is available to",
            "example": "{\"usingMobileKey\":true,\"usingEnvironmentId\":false}",
            "$ref": "#/components/schemas/ClientSideAvailabilityPost"
          },
          "variations": {
            "type": "array",
            "description": "An array of possible variations for the flag. The variation values must be unique. If omitted, two boolean variations of \u003ccode\u003etrue\u003c/code\u003e and \u003ccode\u003efalse\u003c/code\u003e will be used.",
            "items": {
              "$ref": "#/components/schemas/Variation"
            },
            "example": [
              {
                "value": true
              },
              {
                "value": false
              }
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag is a temporary flag. Defaults to \u003ccode\u003etrue\u003c/code\u003e.",
            "example": false
          },
          "tags": {
            "type": "array",
            "description": "Tags for the feature flag. Defaults to an empty array.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "customProperties": {
            "description": "Metadata attached to the feature flag, in the form of the property key associated with a name and array of values for the metadata to associate with this flag. Typically used to store data related to an integration.",
            "example": "{ \"jira.issues\": {\"name\": \"Jira issues\", \"value\": [\"is-123\", \"is-456\"]} }",
            "$ref": "#/components/schemas/CustomProperties"
          },
          "defaults": {
            "description": "The indices, from the array of variations, for the variations to serve by default when targeting is on and when targeting is off. These variations will be used for this flag in new environments. If omitted, the first and last variation will be used.",
            "example": "{\"onVariation\":0, \"offVariation\":1}",
            "$ref": "#/components/schemas/Defaults"
          },
          "purpose": {
            "type": "string",
            "description": "Purpose of the flag",
            "example": "migration",
            "enum": [
              "migration",
              "holdout"
            ]
          },
          "migrationSettings": {
            "description": "Settings relevant to flags where \u003ccode\u003epurpose\u003c/code\u003e is \u003ccode\u003emigration\u003c/code\u003e",
            "$ref": "#/components/schemas/MigrationSettingsPost"
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this feature flag",
            "example": "12ab3c45de678910fgh12345"
          },
          "maintainerTeamKey": {
            "type": "string",
            "description": "The key of the team that maintains this feature flag",
            "example": "team-1"
          },
          "initialPrerequisites": {
            "type": "array",
            "description": "Initial set of prerequisite flags for all environments",
            "items": {
              "$ref": "#/components/schemas/FlagPrerequisitePost"
            }
          },
          "isFlagOn": {
            "type": "boolean",
            "description": "Whether to automatically turn the flag on across all environments at creation. Defaults to \u003ccode\u003efalse\u003c/code\u003e."
          }
        }
      },
      "FeatureFlagConfig": {
        "type": "object",
        "required": [
          "on",
          "archived",
          "salt",
          "sel",
          "lastModified",
          "version",
          "_site",
          "_environmentName",
          "trackEvents",
          "trackEventsFallthrough"
        ],
        "properties": {
          "on": {
            "type": "boolean",
            "description": "Whether the flag is on"
          },
          "archived": {
            "type": "boolean",
            "description": "Boolean indicating if the feature flag is archived"
          },
          "salt": {
            "type": "string"
          },
          "sel": {
            "type": "string"
          },
          "lastModified": {
            "description": "Timestamp of when the flag configuration was most recently modified",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "version": {
            "type": "integer",
            "description": "Version of the feature flag"
          },
          "targets": {
            "type": "array",
            "description": "An array of the individual targets that will receive a specific variation based on their key. Individual targets with a context kind of 'user' are included here.",
            "items": {
              "$ref": "#/components/schemas/Target"
            }
          },
          "contextTargets": {
            "type": "array",
            "description": "An array of the individual targets that will receive a specific variation based on their key. Individual targets with context kinds other than 'user' are included here.",
            "items": {
              "$ref": "#/components/schemas/Target"
            }
          },
          "rules": {
            "type": "array",
            "description": "An array of the rules for how to serve a variation to specific targets based on their attributes",
            "items": {
              "$ref": "#/components/schemas/Rule"
            }
          },
          "fallthrough": {
            "description": "Details on the variation or rollout to serve as part of the flag's default rule",
            "$ref": "#/components/schemas/VariationOrRolloutRep"
          },
          "offVariation": {
            "type": "integer",
            "description": "The ID of the variation to serve when the flag is off"
          },
          "prerequisites": {
            "type": "array",
            "description": "An array of the prerequisite flags and their variations that are required before this flag takes effect",
            "items": {
              "$ref": "#/components/schemas/Prerequisite"
            }
          },
          "_site": {
            "description": "Details on how to access the flag configuration in the LaunchDarkly UI",
            "$ref": "#/components/schemas/Link"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this flag",
            "$ref": "#/components/schemas/Access"
          },
          "_environmentName": {
            "type": "string",
            "description": "The environment name"
          },
          "trackEvents": {
            "type": "boolean",
            "description": "Whether LaunchDarkly tracks events for the feature flag, for all rules"
          },
          "trackEventsFallthrough": {
            "type": "boolean",
            "description": "Whether LaunchDarkly tracks events for the feature flag, for the default rule"
          },
          "_debugEventsUntilDate": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_summary": {
            "description": "A summary of the prerequisites and variations for this flag",
            "$ref": "#/components/schemas/FlagSummary"
          },
          "evaluation": {
            "description": "Evaluation information for the flag",
            "$ref": "#/components/schemas/FlagConfigEvaluation"
          },
          "migrationSettings": {
            "description": "Migration-related settings for the flag configuration",
            "$ref": "#/components/schemas/FlagConfigMigrationSettingsRep"
          }
        }
      },
      "FeatureFlagScheduledChange": {
        "type": "object",
        "required": [
          "_id",
          "_creationDate",
          "_maintainerId",
          "_version",
          "executionDate",
          "instructions"
        ],
        "properties": {
          "_id": {
            "description": "The ID of this scheduled change",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/components/schemas/FeatureWorkflowId"
          },
          "_creationDate": {
            "description": "Timestamp of when the scheduled change was created",
            "example": "1654123897062",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_maintainerId": {
            "type": "string",
            "description": "The ID of the scheduled change maintainer",
            "example": "12ab3c45de678910abc12345"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the scheduled change",
            "example": 1
          },
          "executionDate": {
            "description": "When the scheduled changes should be executed",
            "example": "1636558831870",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "instructions": {
            "description": "The actions to perform on the execution date for these scheduled changes",
            "example": "[ { \"kind\": \"turnFlagOn\" }]",
            "$ref": "#/components/schemas/Instructions"
          },
          "conflicts": {
            "description": "Details on any conflicting scheduled changes"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "FeatureFlagScheduledChanges": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of scheduled changes",
            "items": {
              "$ref": "#/components/schemas/FeatureFlagScheduledChange"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "FeatureFlagStatus": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Status of the flag",
            "example": "inactive",
            "enum": [
              "new",
              "inactive",
              "active",
              "launched"
            ]
          },
          "lastRequested": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last time flag was requested",
            "example": "2020-02-05T18:17:01.514Z"
          },
          "default": {
            "description": "Default value seen from code"
          }
        }
      },
      "FeatureFlagStatusAcrossEnvironments": {
        "type": "object",
        "required": [
          "environments",
          "key",
          "_links"
        ],
        "properties": {
          "environments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FeatureFlagStatus"
            },
            "description": "Flag status for environment.",
            "example": {
              "production": {
                "lastRequested": "2020-02-05T18:17:01.514Z",
                "name": "inactive"
              }
            }
          },
          "key": {
            "type": "string",
            "description": "feature flag key",
            "example": "flag-key-123abc"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "example": {
              "parent": {
                "href": "/api/v2/flag-status",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/flag-status/my-project/my-flag",
                "type": "application/json"
              }
            }
          }
        }
      },
      "FeatureFlagStatuses": {
        "type": "object",
        "required": [
          "_links"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "example": {
              "self": {
                "href": "/api/v2/flag-statuses/my-project/my-environment",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlagStatusRep"
            }
          }
        }
      },
      "FeatureFlags": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of feature flags",
            "items": {
              "$ref": "#/components/schemas/FeatureFlag"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/flags/default",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of flags",
            "example": 1
          },
          "totalCountWithDifferences": {
            "type": "integer",
            "description": "The number of flags that have differences between environments. Only shown when query parameter \u003ccode\u003ecompare\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e.",
            "example": 0
          }
        }
      },
      "FeatureWorkflowId": {
        "type": "string"
      },
      "FileRep": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "The imported file name, including the extension",
            "example": "bigsegimport.csv"
          },
          "status": {
            "type": "string",
            "description": "The imported file status",
            "example": "complete"
          }
        }
      },
      "Filter": {
        "type": "object",
        "required": [
          "type",
          "op",
          "values",
          "negate"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Filter type. One of [contextAttribute, eventProperty, group]",
            "example": "contextAttribute",
            "enum": [
              "group",
              "contextAttribute",
              "eventProperty"
            ]
          },
          "attribute": {
            "type": "string",
            "description": "If not a group node, the context attribute name or event property name to filter on",
            "example": "country"
          },
          "op": {
            "description": "The function to perform",
            "example": "in",
            "$ref": "#/components/schemas/Operator"
          },
          "values": {
            "type": "array",
            "description": "The context attribute / event property values or group member nodes",
            "items": {},
            "example": [
              "JP"
            ]
          },
          "contextKind": {
            "type": "string",
            "description": "For context attribute filters, the context kind.",
            "example": "user"
          },
          "negate": {
            "type": "boolean",
            "description": "If set, then take the inverse of the operator. 'in' becomes 'not in'.",
            "example": false
          }
        }
      },
      "FlagConfigApprovalRequestResponse": {
        "type": "object",
        "required": [
          "_id",
          "_version",
          "creationDate",
          "serviceKind",
          "reviewStatus",
          "allReviews",
          "notifyMemberIds",
          "status",
          "instructions",
          "conflicts",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this approval request",
            "example": "12ab3c45de678910abc12345"
          },
          "_version": {
            "type": "integer",
            "description": "Version of the approval request",
            "example": 1
          },
          "creationDate": {
            "description": "Timestamp of when the approval request was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "serviceKind": {
            "description": "The approval service for this request. May be LaunchDarkly or an external approval service, such as ServiceNow or JIRA.",
            "example": "launchdarkly",
            "$ref": "#/components/schemas/ApprovalRequestServiceKind"
          },
          "requestorId": {
            "type": "string",
            "description": "The ID of the member who requested the approval",
            "example": "12ab3c45de678910abc12345"
          },
          "description": {
            "type": "string",
            "description": "A human-friendly name for the approval request",
            "example": "example: request approval from someone"
          },
          "reviewStatus": {
            "type": "string",
            "description": "Current status of the review of this approval request",
            "example": "pending",
            "enum": [
              "approved",
              "declined",
              "pending"
            ]
          },
          "allReviews": {
            "type": "array",
            "description": "An array of individual reviews of this approval request",
            "items": {
              "$ref": "#/components/schemas/ReviewResponse"
            }
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "appliedDate": {
            "description": "Timestamp of when the approval request was applied",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "appliedByMemberId": {
            "type": "string",
            "description": "The member ID of the member who applied the approval request",
            "example": "1234a56b7c89d012345e678f"
          },
          "appliedByServiceTokenId": {
            "type": "string",
            "description": "The service token ID of the service token which applied the approval request",
            "example": "1234a56b7c89d012345e678f"
          },
          "status": {
            "type": "string",
            "description": "Current status of the approval request",
            "example": "pending",
            "enum": [
              "pending",
              "completed",
              "failed",
              "scheduled"
            ]
          },
          "instructions": {
            "description": "List of instructions in semantic patch format to be applied to the feature flag",
            "example": "[{\"kind\": \"turnFlagOn\"}]",
            "$ref": "#/components/schemas/Instructions"
          },
          "conflicts": {
            "type": "array",
            "description": "Details on any conflicting approval requests",
            "items": {
              "$ref": "#/components/schemas/Conflict"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "executionDate": {
            "description": "Timestamp for when instructions will be executed",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "operatingOnId": {
            "type": "string",
            "description": "ID of scheduled change to edit or delete",
            "example": "12ab3c45de678910abc12345"
          },
          "integrationMetadata": {
            "description": "Details about the object in an external service corresponding to this approval request, such as a ServiceNow change request or a JIRA ticket, if an external approval service is being used",
            "$ref": "#/components/schemas/IntegrationMetadata"
          },
          "source": {
            "description": "Details about the source feature flag, if copied",
            "$ref": "#/components/schemas/CopiedFromEnv"
          },
          "customWorkflowMetadata": {
            "description": "Details about the custom workflow, if this approval request is part of a custom workflow",
            "$ref": "#/components/schemas/CustomWorkflowMeta"
          }
        }
      },
      "FlagConfigApprovalRequestsResponse": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of approval requests",
            "items": {
              "$ref": "#/components/schemas/FlagConfigApprovalRequestResponse"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "FlagConfigEvaluation": {
        "type": "object",
        "properties": {
          "contextKinds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FlagConfigMigrationSettingsRep": {
        "type": "object",
        "properties": {
          "checkRatio": {
            "type": "integer"
          }
        }
      },
      "FlagCopyConfigEnvironment": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The environment key"
          },
          "currentVersion": {
            "type": "integer",
            "description": "Optional flag version. If you include this, the operation only succeeds if the current flag version in the environment matches this version."
          }
        }
      },
      "FlagCopyConfigPost": {
        "type": "object",
        "required": [
          "source",
          "target"
        ],
        "properties": {
          "source": {
            "description": "The source environment",
            "example": "{\"key\": \"source-env-key-123abc\", \"currentVersion\": 1}",
            "$ref": "#/components/schemas/FlagCopyConfigEnvironment"
          },
          "target": {
            "description": "The target environment",
            "example": "{\"key\": \"target-env-key-123abc\", \"currentVersion\": 1}",
            "$ref": "#/components/schemas/FlagCopyConfigEnvironment"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment"
          },
          "includedActions": {
            "type": "array",
            "description": "Optional list of the flag changes to copy from the source environment to the target environment. You may include either \u003ccode\u003eincludedActions\u003c/code\u003e or \u003ccode\u003eexcludedActions\u003c/code\u003e, but not both. If you include neither, then all flag changes will be copied.",
            "items": {
              "type": "string",
              "enum": [
                "updateOn",
                "updateRules",
                "updateFallthrough",
                "updateOffVariation",
                "updatePrerequisites",
                "updateTargets",
                "updateFlagConfigMigrationSettings"
              ]
            },
            "example": [
              "updateOn"
            ]
          },
          "excludedActions": {
            "type": "array",
            "description": "Optional list of the flag changes NOT to copy from the source environment to the target environment. You may include either  \u003ccode\u003eincludedActions\u003c/code\u003e or \u003ccode\u003eexcludedActions\u003c/code\u003e, but not both. If you include neither, then all flag changes will be copied.",
            "items": {
              "type": "string",
              "enum": [
                "updateOn",
                "updateRules",
                "updateFallthrough",
                "updateOffVariation",
                "updatePrerequisites",
                "updateTargets",
                "updateFlagConfigMigrationSettings"
              ]
            },
            "example": [
              "updateOn"
            ]
          }
        }
      },
      "FlagFollowersByProjEnvGetRep": {
        "type": "object",
        "required": [
          "_links"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/my-project/flags/my-flay/environments/my-environment/followers",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "description": "An array of flags and their followers",
            "items": {
              "$ref": "#/components/schemas/followersPerFlag"
            }
          }
        }
      },
      "FlagFollowersGetRep": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/my-project/flags/my-flay/environments/my-environment/followers",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "description": "An array of members who are following this flag",
            "items": {
              "$ref": "#/components/schemas/FollowFlagMember"
            }
          }
        }
      },
      "FlagImportConfigurationPost": {
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "description": "The global configuration settings, as specified by the \u003ccode\u003eformVariables\u003c/code\u003e in the \u003ccode\u003emanifest.json\u003c/code\u003e for this configuration.",
            "example": "{\"workspaceApiKey\": \"An API key with read permissions in the external feature management system\", \"workspaceId\": \"The ID of the workspace in the external system\", \"environmentId\": \"The ID of the environment in the external system\", \"splitTag\": \"If provided, imports only the flags from the external system with this tag. Leave blank to import all flags.\", \"ldApiKey\": \"An API key with create flag permissions in your LaunchDarkly account\", \"ldTag\": \"A tag to apply to all flags imported to LaunchDarkly\", \"ldMaintainer\": \"The ID of the member who will be the maintainer of the imported flags\"}",
            "$ref": "#/components/schemas/FormVariableConfig"
          },
          "tags": {
            "type": "array",
            "description": "Tags to associate with the configuration",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name to identify the configuration",
            "example": "Sample configuration"
          }
        }
      },
      "FlagImportIntegration": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "integrationKey",
          "projectKey",
          "config",
          "tags",
          "name",
          "version",
          "_status"
        ],
        "properties": {
          "_links": {
            "description": "The location and content type of related resources",
            "$ref": "#/components/schemas/FlagImportIntegrationLinks"
          },
          "_id": {
            "type": "string",
            "description": "The integration ID",
            "example": "12ab3c4d5ef1a2345bcde67f"
          },
          "integrationKey": {
            "type": "string",
            "description": "The integration key",
            "example": "split",
            "enum": [
              "split",
              "unleash"
            ]
          },
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          },
          "config": {
            "description": "The configuration for the given import integration. Only included when requesting a single integration by ID. Refer to the \u003ccode\u003eformVariables\u003c/code\u003e field in the corresponding \u003ccode\u003emanifest.json\u003c/code\u003e for a full list of fields for each integration.",
            "$ref": "#/components/schemas/FormVariableConfig"
          },
          "tags": {
            "type": "array",
            "description": "List of tags for this configuration",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "name": {
            "type": "string",
            "description": "Name of the configuration",
            "example": "Development environment configuration"
          },
          "version": {
            "type": "integer",
            "description": "Version of the current configuration",
            "example": 1
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this configuration",
            "$ref": "#/components/schemas/Access"
          },
          "_status": {
            "description": "Details on the status of the import job",
            "$ref": "#/components/schemas/FlagImportStatus"
          }
        }
      },
      "FlagImportIntegrationCollection": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "description": "The location and content type of related resources",
            "$ref": "#/components/schemas/FlagImportIntegrationCollectionLinks"
          },
          "items": {
            "type": "array",
            "description": "An array of flag import configurations",
            "items": {
              "$ref": "#/components/schemas/FlagImportIntegration"
            }
          }
        }
      },
      "FlagImportIntegrationCollectionLinks": {
        "type": "object",
        "required": [
          "self"
        ],
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Link"
          },
          "parent": {
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "FlagImportIntegrationLinks": {
        "type": "object",
        "required": [
          "self",
          "parent",
          "project"
        ],
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Link"
          },
          "parent": {
            "$ref": "#/components/schemas/Link"
          },
          "project": {
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "FlagImportStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The current status of the import integrations related import job",
            "example": "pending",
            "enum": [
              "complete",
              "importing",
              "pending",
              "failed",
              "partial"
            ]
          },
          "lastImport": {
            "description": "Timestamp of when the most recent successful import occurred.",
            "example": "1717263000000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "lastError": {
            "description": "Timestamp of when the most recent import error occurred, if any",
            "example": "1714584600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusResponse"
            }
          }
        }
      },
      "FlagInput": {
        "type": "object",
        "required": [
          "ruleId",
          "flagConfigVersion"
        ],
        "properties": {
          "ruleId": {
            "type": "string",
            "description": "The ID of the variation or rollout of the flag to use. Use \"fallthrough\" for the default targeting behavior when the flag is on.",
            "example": "e432f62b-55f6-49dd-a02f-eb24acf39d05"
          },
          "flagConfigVersion": {
            "type": "integer",
            "description": "The flag version",
            "example": 12
          },
          "notInExperimentVariationId": {
            "type": "string",
            "description": "The ID of the variation to route traffic not part of the experiment analysis to. Defaults to variation ID of baseline treatment, if set.",
            "example": "e432f62b-55f6-49dd-a02f-eb24acf39d05"
          }
        }
      },
      "FlagLinkCollectionRep": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of flag links",
            "items": {
              "$ref": "#/components/schemas/FlagLinkRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "FlagLinkMember": {
        "type": "object",
        "required": [
          "_links",
          "_id"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "_id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "FlagLinkRep": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "_deepLink",
          "_timestamp",
          "_createdAt"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_key": {
            "type": "string",
            "description": "The flag link key",
            "example": "flag-link-key-123abc"
          },
          "_integrationKey": {
            "type": "string",
            "description": "The integration key for an integration whose \u003ccode\u003emanifest.json\u003c/code\u003e includes the \u003ccode\u003eflagLink\u003c/code\u003e capability, if this is a flag link for an existing integration"
          },
          "_id": {
            "type": "string",
            "description": "The ID of this flag link",
            "example": "1234a56b7c89d012345e678f"
          },
          "_deepLink": {
            "type": "string",
            "description": "The URL for the external resource the flag is linked to",
            "example": "https://example.com/archives/123123123"
          },
          "_timestamp": {
            "description": "The time to mark this flag link as associated with the external URL. Defaults to the creation time of the flag link, but can be set to another time during creation.",
            "example": "{\"milliseconds\": 1655342199935, \"seconds\": 1655342199, \"rfc3339\": \"2022-06-16T01:16:39Z\", \"simple\": \"2022-06-16 01:16:39\"}",
            "$ref": "#/components/schemas/TimestampRep"
          },
          "title": {
            "type": "string",
            "description": "The title of the flag link",
            "example": "Example link title"
          },
          "description": {
            "type": "string",
            "description": "The description of the flag link",
            "example": "Example link description"
          },
          "_metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The metadata required by this integration in order to create a flag link, if this is a flag link for an existing integration. Defined in the integration's \u003ccode\u003emanifest.json\u003c/code\u003e file under \u003ccode\u003eflagLink\u003c/code\u003e."
          },
          "_createdAt": {
            "description": "Timestamp of when the flag link was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_member": {
            "description": "Details on the member associated with this flag link",
            "$ref": "#/components/schemas/FlagLinkMember"
          }
        }
      },
      "FlagListingRep": {
        "type": "object",
        "required": [
          "name",
          "key"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The flag name",
            "example": "Example flag"
          },
          "key": {
            "type": "string",
            "description": "The flag key",
            "example": "flag-key-123abc"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "_site": {
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "FlagMigrationSettingsRep": {
        "type": "object",
        "properties": {
          "contextKind": {
            "type": "string",
            "description": "The context kind targeted by this migration flag. Only applicable for six-stage migrations.",
            "example": "device"
          },
          "stageCount": {
            "type": "integer",
            "description": "The number of stages for this migration flag",
            "example": 6
          }
        }
      },
      "FlagPrerequisitePost": {
        "type": "object",
        "required": [
          "key",
          "variationId"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Flag key of the prerequisite flag"
          },
          "variationId": {
            "type": "string",
            "description": "ID of a variation of the prerequisite flag"
          }
        }
      },
      "FlagRep": {
        "type": "object",
        "required": [
          "_links"
        ],
        "properties": {
          "targetingRule": {
            "type": "string",
            "description": "The targeting rule",
            "example": "fallthrough"
          },
          "targetingRuleDescription": {
            "type": "string",
            "description": "The rule description",
            "example": "Customers who live in Canada"
          },
          "targetingRuleClauses": {
            "type": "array",
            "description": "An array of clauses used for individual targeting based on attributes",
            "items": {}
          },
          "flagConfigVersion": {
            "type": "integer",
            "description": "The flag version",
            "example": 12
          },
          "notInExperimentVariationId": {
            "type": "string",
            "description": "The ID of the variation to route traffic not part of the experiment analysis to",
            "example": "e432f62b-55f6-49dd-a02f-eb24acf39d05"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/flags/my-project/my-flag",
                "type": "application/json"
              }
            }
          }
        }
      },
      "FlagScheduledChangesInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update to the scheduled changes",
            "example": "optional comment"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like \u003ccode\u003e{\"kind\": \"update_action\"}\u003c/code\u003e. Some instructions also require a \u003ccode\u003evalue\u003c/code\u003e field in the array element.",
            "example": "[ { \"kind\": \"replaceScheduledChangesInstructions\", \"value\": [ { \"kind\": \"turnFlagOff\" } ] } ]",
            "$ref": "#/components/schemas/Instructions"
          }
        }
      },
      "FlagStatusRep": {
        "type": "object",
        "required": [
          "name",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Status of the flag",
            "example": "inactive",
            "enum": [
              "new",
              "inactive",
              "active",
              "launched"
            ]
          },
          "lastRequested": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last time flag was requested",
            "example": "2020-02-05T18:17:01.514Z"
          },
          "default": {
            "description": "Default value seen from code"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "example": {
              "parent": {
                "href": "/api/v2/flags/my-project/my-flag",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/flag-statuses/my-project/my-flag",
                "type": "application/json"
              }
            }
          }
        }
      },
      "FlagSummary": {
        "type": "object",
        "required": [
          "variations",
          "prerequisites"
        ],
        "properties": {
          "variations": {
            "description": "A summary of the variations for this flag",
            "$ref": "#/components/schemas/AllVariationsSummary"
          },
          "prerequisites": {
            "type": "integer",
            "description": "The number of prerequisites for this flag"
          }
        }
      },
      "FlagTriggerInput": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "optional comment"
          },
          "instructions": {
            "type": "array",
            "description": "The instructions to perform when updating. This should be an array with objects that look like \u003ccode\u003e{\"kind\": \"trigger_action\"}\u003c/code\u003e.",
            "items": {
              "$ref": "#/components/schemas/Instruction"
            },
            "example": [
              {
                "kind": "disableTrigger"
              }
            ]
          }
        }
      },
      "FlagsInput": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/FlagInput"
        }
      },
      "FollowFlagMember": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "role",
          "email"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/members/569f183514f4432160000007",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "The member's ID",
            "example": "569f183514f4432160000007"
          },
          "firstName": {
            "type": "string",
            "description": "The member's first name",
            "example": "Ariel"
          },
          "lastName": {
            "type": "string",
            "description": "The member's last name",
            "example": "Flores"
          },
          "role": {
            "type": "string",
            "description": "The member's built-in role. If the member has no custom roles, this role will be in effect.",
            "example": "admin"
          },
          "email": {
            "type": "string",
            "description": "The member's email address",
            "example": "ariel@acme.com"
          }
        }
      },
      "ForbiddenErrorRep": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "forbidden"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Forbidden. Access to the requested resource was denied."
          }
        }
      },
      "FormVariable": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "placeholder": {
            "type": "string"
          },
          "isOptional": {
            "type": "boolean"
          },
          "defaultValue": {},
          "allowedValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dynamicOptions": {
            "$ref": "#/components/schemas/DynamicOptions"
          }
        }
      },
      "FormVariableConfig": {
        "type": "object",
        "additionalProperties": {}
      },
      "GenerateWarehouseDestinationKeyPairPostRep": {
        "type": "object",
        "properties": {
          "public_key": {
            "type": "string",
            "description": "The public key used by LaunchDarkly"
          },
          "public_key_pkcs8": {
            "type": "string",
            "description": "The public key to assign in your Snowflake worksheet"
          }
        }
      },
      "HMACSignature": {
        "type": "object",
        "properties": {
          "headerName": {
            "type": "string"
          },
          "hmacSecretFormVariableKey": {
            "type": "string"
          }
        }
      },
      "HeaderItems": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "HoldoutDetailRep": {
        "type": "object",
        "required": [
          "_id",
          "status",
          "holdoutAmount",
          "createdAt",
          "updatedAt",
          "baseExperiment"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "enabled",
              "running",
              "ended"
            ]
          },
          "description": {
            "type": "string"
          },
          "holdoutAmount": {
            "type": "string",
            "description": "The percentage of traffic allocated to this holdout."
          },
          "isDirty": {
            "type": "boolean",
            "description": "Indicates if the holdout experiment is running and if any related experiments are running."
          },
          "createdAt": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "baseExperiment": {
            "$ref": "#/components/schemas/Experiment"
          },
          "relatedExperiments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Experiment"
            }
          }
        }
      },
      "HoldoutPatchInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "Optional comment"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like \u003ccode\u003e{\"kind\": \"update_action\"}\u003c/code\u003e. Some instructions also require a \u003ccode\u003evalue\u003c/code\u003e field in the array element.",
            "example": "[{\"kind\": \"updateName\", \"name\": \"Updated holdout name\"}]",
            "$ref": "#/components/schemas/Instructions"
          }
        }
      },
      "HoldoutPostRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the holdout",
            "example": "holdout-one-name"
          },
          "key": {
            "type": "string",
            "description": "A key that identifies the holdout",
            "example": "holdout-key"
          },
          "description": {
            "type": "string",
            "description": "Description of the holdout",
            "example": "My holdout-one description"
          },
          "randomizationunit": {
            "type": "string",
            "description": "The chosen randomization unit for the holdout base experiment",
            "example": "user"
          },
          "attributes": {
            "type": "array",
            "description": "The attributes that the holdout iteration's results can be sliced by",
            "items": {
              "type": "string"
            },
            "example": [
              "country",
              "device",
              "os"
            ]
          },
          "holdoutamount": {
            "type": "string",
            "description": "Audience allocation for the holdout",
            "example": "10"
          },
          "primarymetrickey": {
            "type": "string",
            "description": "The key of the primary metric for this holdout",
            "example": "metric-key-123abc"
          },
          "metrics": {
            "type": "array",
            "description": "Details on the metrics for this experiment",
            "items": {
              "$ref": "#/components/schemas/MetricInput"
            }
          },
          "prerequisiteflagkey": {
            "type": "string",
            "description": "The key of the flag that the holdout is dependent on",
            "example": "flag-key-123abc"
          },
          "maintainerId": {
            "type": "string",
            "description": "Maintainer id"
          }
        }
      },
      "HoldoutRep": {
        "type": "object",
        "required": [
          "_id",
          "status",
          "holdoutAmount",
          "createdAt",
          "updatedAt",
          "baseExperiment"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "enabled",
              "running",
              "ended"
            ]
          },
          "description": {
            "type": "string"
          },
          "holdoutAmount": {
            "type": "string",
            "description": "The percentage of traffic allocated to this holdout."
          },
          "createdAt": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "baseExperiment": {
            "$ref": "#/components/schemas/Experiment"
          },
          "experiments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedExperimentRep"
            }
          }
        }
      },
      "HoldoutsCollectionRep": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleHoldoutRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/my-project/environments/my-environment/holdouts?limit=20",
                "type": "application/json"
              }
            }
          },
          "total_count": {
            "type": "integer",
            "description": "The total number of holdouts in this project and environment."
          }
        }
      },
      "HunkRep": {
        "type": "object",
        "required": [
          "startingLineNumber"
        ],
        "properties": {
          "startingLineNumber": {
            "type": "integer",
            "description": "Line number of beginning of code reference hunk",
            "example": 45
          },
          "lines": {
            "type": "string",
            "description": "Contextual lines of code that include the referenced feature flag",
            "example": "var enableFeature = 'enable-feature';"
          },
          "projKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          },
          "flagKey": {
            "type": "string",
            "description": "The feature flag key",
            "example": "enable-feature"
          },
          "aliases": {
            "type": "array",
            "description": "An array of flag key aliases",
            "items": {
              "type": "string"
            },
            "example": [
              "enableFeature",
              "EnableFeature"
            ]
          }
        }
      },
      "Import": {
        "type": "object",
        "required": [
          "id",
          "segmentKey",
          "creationTime",
          "mode",
          "status",
          "_links"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The import ID",
            "example": "1234a567-bcd8-9123-4567-abcd1234567f"
          },
          "segmentKey": {
            "type": "string",
            "description": "The segment key",
            "example": "example-big-segment"
          },
          "creationTime": {
            "description": "Timestamp of when this import was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "mode": {
            "type": "string",
            "description": "The import mode used, either \u003ccode\u003emerge\u003c/code\u003e or \u003ccode\u003ereplace\u003c/code\u003e",
            "example": "replace"
          },
          "status": {
            "type": "string",
            "description": "The import status",
            "example": "complete",
            "enum": [
              "preparing",
              "pending_approval",
              "ready",
              "in_progress",
              "complete",
              "stopped"
            ]
          },
          "files": {
            "type": "array",
            "description": "The imported files and their status",
            "items": {
              "$ref": "#/components/schemas/FileRep"
            },
            "example": [
              {
                "filename": "bigsegimport.csv",
                "status": "complete"
              }
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "InitiatorRep": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the member who initiated the export",
            "example": "Bob Loblaw"
          },
          "email": {
            "type": "string",
            "description": "The email address of the member who initiated the export",
            "example": "ariel@acme.com"
          }
        }
      },
      "Instruction": {
        "type": "object",
        "additionalProperties": {}
      },
      "Instructions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Instruction"
        }
      },
      "Integration": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The ID for this integration audit log subscription",
            "example": "1234a56b7c89d012345e678f"
          },
          "kind": {
            "type": "string",
            "description": "The type of integration",
            "example": "datadog"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the integration",
            "example": "Example Datadog integration"
          },
          "config": {
            "type": "object",
            "additionalProperties": {},
            "description": "Details on configuration for an integration of this type. Refer to the \u003ccode\u003eformVariables\u003c/code\u003e field in the corresponding \u003ccode\u003emanifest.json\u003c/code\u003e for a full list of fields for each integration."
          },
          "statements": {
            "type": "array",
            "description": "Represents a Custom role policy, defining a resource kinds filter the integration audit log subscription responds to.",
            "items": {
              "$ref": "#/components/schemas/Statement"
            }
          },
          "on": {
            "type": "boolean",
            "description": "Whether the integration is currently active",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "An array of tags for this integration",
            "items": {
              "type": "string"
            },
            "example": [
              "testing"
            ]
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this subscription",
            "$ref": "#/components/schemas/Access"
          },
          "_status": {
            "description": "Details on the most recent successes and errors for this integration",
            "$ref": "#/components/schemas/IntegrationSubscriptionStatusRep"
          },
          "url": {
            "type": "string",
            "description": "Slack webhook receiver URL. Only used for legacy Slack webhook integrations."
          },
          "apiKey": {
            "type": "string",
            "description": "Datadog API key. Only used for legacy Datadog webhook integrations."
          }
        }
      },
      "IntegrationConfigurationCollectionRep": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of integration configurations",
            "items": {
              "$ref": "#/components/schemas/IntegrationConfigurationsRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "IntegrationConfigurationPost": {
        "type": "object",
        "required": [
          "name",
          "configValues"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the integration configuration",
            "example": "Example integration configuration"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the integration configuration is enabled. If omitted, defaults to true",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "Tags for the integration",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "configValues": {
            "type": "object",
            "additionalProperties": {},
            "description": "The unique set of fields required to configure the integration. Refer to the \u003ccode\u003eformVariables\u003c/code\u003e field in the corresponding \u003ccode\u003emanifest.json\u003c/code\u003e at https://github.com/launchdarkly/integration-framework/tree/main/integrations for a full list of fields for the integration you wish to configure.",
            "example": {
              "optional": "an optional property",
              "required": "the required property",
              "url": "https://example.com"
            }
          },
          "capabilityConfig": {
            "description": "The capability configuration for the integration",
            "example": "{\"auditLogEventsHook\": \"policy\": []\"}",
            "$ref": "#/components/schemas/CapabilityConfigPost"
          }
        }
      },
      "IntegrationConfigurationsRep": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "name"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The unique identifier for this integration configuration"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the integration",
            "example": "Example Datadog integration"
          },
          "_createdAt": {
            "description": "The time the integration configuration was created",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_integrationKey": {
            "type": "string",
            "description": "The type of integration",
            "example": "datadog"
          },
          "tags": {
            "type": "array",
            "description": "An array of tags for this integration",
            "items": {
              "type": "string"
            },
            "example": [
              "testing"
            ]
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the integration is currently active"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this integration configuration",
            "$ref": "#/components/schemas/Access"
          },
          "configValues": {
            "type": "object",
            "additionalProperties": {},
            "description": "Details on configuration for an integration of this type. Refer to the \u003ccode\u003eformVariables\u003c/code\u003e field in the corresponding \u003ccode\u003emanifest.json\u003c/code\u003e for a full list of fields for each integration."
          },
          "capabilityConfig": {
            "description": "The capability configuration for the integration",
            "example": "{\"auditLogEventsHook\": \"statements\": []\"}",
            "$ref": "#/components/schemas/CapabilityConfigRep"
          }
        }
      },
      "IntegrationDeliveryConfiguration": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "integrationKey",
          "projectKey",
          "environmentKey",
          "config",
          "on",
          "tags",
          "name",
          "version"
        ],
        "properties": {
          "_links": {
            "description": "The location and content type of related resources",
            "$ref": "#/components/schemas/IntegrationDeliveryConfigurationLinks"
          },
          "_id": {
            "type": "string",
            "description": "The integration ID",
            "example": "12ab3c4d5ef1a2345bcde67f"
          },
          "integrationKey": {
            "type": "string",
            "description": "The integration key",
            "example": "example-integration-key"
          },
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key",
            "example": "development"
          },
          "config": {
            "description": "The delivery configuration for the given integration provider. Only included when requesting a single integration by ID. Refer to the \u003ccode\u003eformVariables\u003c/code\u003e field in the corresponding \u003ccode\u003emanifest.json\u003c/code\u003e for a full list of fields for each integration.",
            "$ref": "#/components/schemas/FormVariableConfig"
          },
          "on": {
            "type": "boolean",
            "description": "Whether the configuration is turned on",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "List of tags for this configuration",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "name": {
            "type": "string",
            "description": "Name of the configuration",
            "example": "Development environment configuration"
          },
          "version": {
            "type": "integer",
            "description": "Version of the current configuration",
            "example": 1
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this configuration",
            "$ref": "#/components/schemas/Access"
          }
        }
      },
      "IntegrationDeliveryConfigurationCollection": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "description": "The location and content type of related resources",
            "$ref": "#/components/schemas/IntegrationDeliveryConfigurationCollectionLinks"
          },
          "items": {
            "type": "array",
            "description": "An array of integration delivery configurations",
            "items": {
              "$ref": "#/components/schemas/IntegrationDeliveryConfiguration"
            }
          }
        }
      },
      "IntegrationDeliveryConfigurationCollectionLinks": {
        "type": "object",
        "required": [
          "self"
        ],
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Link"
          },
          "parent": {
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "IntegrationDeliveryConfigurationLinks": {
        "type": "object",
        "required": [
          "self",
          "parent",
          "project",
          "environment"
        ],
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Link"
          },
          "parent": {
            "$ref": "#/components/schemas/Link"
          },
          "project": {
            "$ref": "#/components/schemas/Link"
          },
          "environment": {
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "IntegrationDeliveryConfigurationPost": {
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "on": {
            "type": "boolean",
            "description": "Whether the integration configuration is active. Default value is false.",
            "example": false
          },
          "config": {
            "description": "The global integration settings, as specified by the \u003ccode\u003eformVariables\u003c/code\u003e in the \u003ccode\u003emanifest.json\u003c/code\u003e for this integration.",
            "example": "{\"required\": \"example value for required formVariables property for sample-integration\", \"optional\": \"example value for optional formVariables property for sample-integration\"}",
            "$ref": "#/components/schemas/FormVariableConfig"
          },
          "tags": {
            "type": "array",
            "description": "Tags to associate with the integration",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name to identify the integration",
            "example": "Sample integration"
          }
        }
      },
      "IntegrationDeliveryConfigurationResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "The status code returned by the validation",
            "example": 200
          },
          "error": {
            "type": "string"
          },
          "timestamp": {
            "description": "Timestamp of when the validation was performed",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "responseBody": {
            "type": "string",
            "description": "JSON response to the validation request"
          }
        }
      },
      "IntegrationMetadata": {
        "type": "object",
        "required": [
          "externalId",
          "externalStatus",
          "externalUrl",
          "lastChecked"
        ],
        "properties": {
          "externalId": {
            "type": "string"
          },
          "externalStatus": {
            "$ref": "#/components/schemas/IntegrationStatus"
          },
          "externalUrl": {
            "type": "string"
          },
          "lastChecked": {
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "IntegrationStatus": {
        "type": "object",
        "required": [
          "display",
          "value"
        ],
        "properties": {
          "display": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "IntegrationStatusRep": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "responseBody": {
            "type": "string"
          },
          "timestamp": {
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "IntegrationSubscriptionStatusRep": {
        "type": "object",
        "properties": {
          "successCount": {
            "type": "integer"
          },
          "lastSuccess": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "lastError": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "errorCount": {
            "type": "integer"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationStatusRep"
            }
          }
        }
      },
      "Integrations": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration"
            }
          },
          "key": {
            "type": "string"
          }
        }
      },
      "InvalidRequestErrorRep": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "invalid_request"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Invalid request body"
          }
        }
      },
      "IterationInput": {
        "type": "object",
        "required": [
          "hypothesis",
          "metrics",
          "treatments",
          "flags"
        ],
        "properties": {
          "hypothesis": {
            "type": "string",
            "description": "The expected outcome of this experiment",
            "example": "Example hypothesis, the new button placement will increase conversion"
          },
          "canReshuffleTraffic": {
            "type": "boolean",
            "description": "Whether to allow the experiment to reassign traffic to different variations when you increase or decrease the traffic in your experiment audience (true) or keep all traffic assigned to its initial variation (false). Defaults to true.",
            "example": true
          },
          "metrics": {
            "description": "Details on the metrics for this experiment",
            "$ref": "#/components/schemas/MetricsInput"
          },
          "primarySingleMetricKey": {
            "type": "string",
            "description": "The key of the primary metric for this experiment. Either \u003ccode\u003eprimarySingleMetricKey\u003c/code\u003e or \u003ccode\u003eprimaryFunnelKey\u003c/code\u003e must be present.",
            "example": "metric-key-123abc"
          },
          "primaryFunnelKey": {
            "type": "string",
            "description": "The key of the primary funnel group for this experiment. Either \u003ccode\u003eprimarySingleMetricKey\u003c/code\u003e or \u003ccode\u003eprimaryFunnelKey\u003c/code\u003e must be present.",
            "example": "metric-group-key-123abc"
          },
          "treatments": {
            "description": "Details on the variations you are testing in the experiment. You establish these variations in feature flags, and then reuse them in experiments.",
            "$ref": "#/components/schemas/TreatmentsInput"
          },
          "flags": {
            "description": "Details on the feature flag and targeting rules for this iteration",
            "example": "{\"example-flag-key\": { \"ruleId\": \"e432f62b-55f6-49dd-a02f-eb24acf39d05\", \"flagConfigVersion\": 12, \"notInExperimentVariationId\": \"e432f62b-55f6-49dd-a02f-eb24acf39d05\" }}",
            "$ref": "#/components/schemas/FlagsInput"
          },
          "randomizationUnit": {
            "type": "string",
            "description": "The unit of randomization for this iteration. Defaults to user.",
            "example": "user"
          },
          "attributes": {
            "type": "array",
            "description": "The attributes that this iteration's results can be sliced by",
            "items": {
              "type": "string"
            },
            "example": [
              "country",
              "device",
              "os"
            ]
          }
        }
      },
      "IterationRep": {
        "type": "object",
        "required": [
          "hypothesis",
          "status",
          "createdAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The iteration ID",
            "example": "12ab3c45de678910fgh12345"
          },
          "hypothesis": {
            "type": "string",
            "description": "The expected outcome of this experiment",
            "example": "The new button placement will increase conversion"
          },
          "status": {
            "type": "string",
            "description": "The status of the iteration: \u003ccode\u003enot_started\u003c/code\u003e, \u003ccode\u003erunning\u003c/code\u003e, \u003ccode\u003estopped\u003c/code\u003e",
            "example": "running"
          },
          "createdAt": {
            "description": "Timestamp of when the iteration was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "startedAt": {
            "description": "Timestamp of when the iteration started",
            "example": "1655314200000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "endedAt": {
            "description": "Timestamp of when the iteration ended",
            "example": "1656610200000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "winningTreatmentId": {
            "type": "string",
            "description": "The ID of the treatment chosen when the experiment stopped",
            "example": "122c9f3e-da26-4321-ba68-e0fc02eced58"
          },
          "winningReason": {
            "type": "string",
            "description": "The reason you stopped the experiment",
            "example": "We ran this iteration for two weeks and the winning variation was clear"
          },
          "canReshuffleTraffic": {
            "type": "boolean",
            "description": "Whether the experiment may reassign traffic to different variations when the experiment audience changes (true) or must keep all traffic assigned to its initial variation (false).",
            "example": true
          },
          "flags": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FlagRep"
            },
            "description": "Details on the flag used in this experiment"
          },
          "primaryMetric": {
            "description": "Deprecated, use \u003ccode\u003eprimarySingleMetric\u003c/code\u003e and \u003ccode\u003eprimaryFunnel\u003c/code\u003e instead. Details on the primary metric for this experiment.",
            "deprecated": true,
            "$ref": "#/components/schemas/DependentMetricOrMetricGroupRep"
          },
          "primarySingleMetric": {
            "description": "Details on the primary metric for this experiment",
            "$ref": "#/components/schemas/MetricV2Rep"
          },
          "primaryFunnel": {
            "description": "Details on the primary funnel group for this experiment",
            "$ref": "#/components/schemas/DependentMetricGroupRepWithMetrics"
          },
          "randomizationUnit": {
            "type": "string",
            "description": "The unit of randomization for this iteration",
            "example": "user"
          },
          "attributes": {
            "type": "array",
            "description": "The available attribute filters for this iteration",
            "items": {
              "type": "string"
            }
          },
          "treatments": {
            "type": "array",
            "description": "Details on the variations you are testing in the experiment",
            "items": {
              "$ref": "#/components/schemas/TreatmentRep"
            }
          },
          "secondaryMetrics": {
            "type": "array",
            "description": "Deprecated, use \u003ccode\u003emetrics\u003c/code\u003e instead. Details on the secondary metrics for this experiment.",
            "items": {
              "$ref": "#/components/schemas/MetricV2Rep"
            },
            "deprecated": true
          },
          "metrics": {
            "type": "array",
            "description": "Details on the metrics for this experiment",
            "items": {
              "$ref": "#/components/schemas/DependentMetricOrMetricGroupRep"
            }
          },
          "layerSnapshot": {
            "description": "Snapshot of the layer state on iteration stop, if part of a layer. Otherwise omitted.",
            "$ref": "#/components/schemas/LayerSnapshotRep"
          }
        }
      },
      "JSONPatch": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PatchOperation"
        }
      },
      "LastSeenMetadata": {
        "type": "object",
        "properties": {
          "tokenId": {
            "type": "string",
            "description": "The ID of the token used in the member's last session",
            "example": "5b52207f8ca8e631d31fdb2b"
          }
        }
      },
      "LayerCollectionRep": {
        "type": "object",
        "required": [
          "items",
          "totalCount",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "The layers in the project",
            "items": {
              "$ref": "#/components/schemas/LayerRep"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of layers in the project"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/projects/my-project/layers",
                "type": "application/json"
              }
            }
          }
        }
      },
      "LayerConfigurationRep": {
        "type": "object",
        "required": [
          "reservations"
        ],
        "properties": {
          "reservations": {
            "type": "array",
            "description": "The experiment reservations for the layer",
            "items": {
              "$ref": "#/components/schemas/LayerReservationRep"
            }
          }
        }
      },
      "LayerPatchInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "Optional comment"
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key used for making environment specific updates. For example, updating the reservation of an experiment",
            "example": "production"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like \u003ccode\u003e{\"kind\": \"update_action\"}\u003c/code\u003e. Some instructions also require a \u003ccode\u003evalue\u003c/code\u003e field in the array element.",
            "example": "[{\"kind\": \"updateName\", \"name\": \"Updated layer name\"}]",
            "$ref": "#/components/schemas/Instructions"
          }
        }
      },
      "LayerPost": {
        "type": "object",
        "required": [
          "key",
          "name",
          "description"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Unique identifier for the layer",
            "example": "checkout-flow"
          },
          "name": {
            "type": "string",
            "description": "Layer name",
            "example": "Checkout Flow"
          },
          "description": {
            "type": "string",
            "description": "The checkout flow for the application"
          }
        }
      },
      "LayerRep": {
        "type": "object",
        "required": [
          "key",
          "name",
          "description",
          "createdAt"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the layer",
            "example": "checkout-flow"
          },
          "name": {
            "type": "string",
            "description": "The name of the layer",
            "example": "Checkout Flow"
          },
          "description": {
            "type": "string",
            "description": "The description of the layer",
            "example": "The checkout flow for the application"
          },
          "createdAt": {
            "description": "The date and time when the layer was created",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "randomizationUnit": {
            "type": "string",
            "description": "The unit of randomization for the layer",
            "example": "user"
          },
          "environments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LayerConfigurationRep"
            },
            "description": "The layer configurations for each requested environment"
          }
        }
      },
      "LayerReservationRep": {
        "type": "object",
        "required": [
          "experimentKey",
          "flagKey",
          "reservationPercent"
        ],
        "properties": {
          "experimentKey": {
            "type": "string",
            "description": "The key of the experiment",
            "example": "checkout-flow-experiment"
          },
          "flagKey": {
            "type": "string",
            "description": "The key of the flag",
            "example": "checkout-flow-flag"
          },
          "reservationPercent": {
            "type": "integer",
            "description": "The percentage of traffic reserved for the experiment",
            "example": 20
          }
        }
      },
      "LayerSnapshotRep": {
        "type": "object",
        "required": [
          "key",
          "name",
          "reservationPercent",
          "otherReservationPercent"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Key of the layer the experiment was part of",
            "example": "checkout-flow"
          },
          "name": {
            "type": "string",
            "description": "Layer name at the time this experiment iteration was stopped",
            "example": "Checkout Flow"
          },
          "reservationPercent": {
            "type": "integer",
            "description": "Percent of layer traffic that was reserved in the layer for this experiment iteration",
            "example": 10
          },
          "otherReservationPercent": {
            "type": "integer",
            "description": "Percent of layer traffic that was reserved for other experiments in the same environment, when this experiment iteration was stopped",
            "example": 70
          }
        }
      },
      "LegacyExperimentRep": {
        "type": "object",
        "properties": {
          "metricKey": {
            "type": "string",
            "example": "my-metric"
          },
          "_metric": {
            "$ref": "#/components/schemas/MetricListingRep"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "production",
              "test",
              "my-environment"
            ]
          },
          "_environmentSettings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ExperimentEnvironmentSettingRep"
            }
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "MaintainerRep": {
        "type": "object",
        "properties": {
          "member": {
            "description": "Details on the member who maintains this resource",
            "$ref": "#/components/schemas/MemberSummary"
          },
          "team": {
            "description": "Details on the team that maintains this resource",
            "$ref": "#/components/schemas/MemberTeamSummaryRep"
          }
        }
      },
      "MaintainerTeam": {
        "type": "object",
        "required": [
          "key",
          "name"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the maintainer team",
            "example": "team-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the maintainer team",
            "example": "Example team"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/teams",
                "type": "application/json"
              },
              "roles": {
                "href": "/api/v2/teams/example-team/roles",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/teams/example-team",
                "type": "application/json"
              }
            }
          }
        }
      },
      "Member": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "role",
          "email",
          "_pendingInvite",
          "_verified",
          "customRoles",
          "mfa",
          "_lastSeen",
          "creationDate"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The member's ID",
            "example": "507f1f77bcf86cd799439011"
          },
          "firstName": {
            "type": "string",
            "description": "The member's first name",
            "example": "Ariel"
          },
          "lastName": {
            "type": "string",
            "description": "The member's last name",
            "example": "Flores"
          },
          "role": {
            "type": "string",
            "description": "The member's built-in role. If the member has no custom roles, this role will be in effect.",
            "example": "reader"
          },
          "email": {
            "type": "string",
            "description": "The member's email address",
            "example": "ariel@acme.com"
          },
          "_pendingInvite": {
            "type": "boolean",
            "description": "Whether the member has a pending invitation",
            "example": false
          },
          "_verified": {
            "type": "boolean",
            "description": "Whether the member's email address has been verified",
            "example": true
          },
          "_pendingEmail": {
            "type": "string",
            "description": "The member's email address before it has been verified, for accounts where email verification is required"
          },
          "customRoles": {
            "type": "array",
            "description": "The set of custom roles (as keys) assigned to the member",
            "items": {
              "type": "string"
            },
            "example": [
              "devOps",
              "backend-devs"
            ]
          },
          "mfa": {
            "type": "string",
            "description": "Whether multi-factor authentication is enabled for this member"
          },
          "excludedDashboards": {
            "type": "array",
            "description": "Default dashboards that the member has chosen to ignore",
            "items": {
              "type": "string"
            }
          },
          "_lastSeen": {
            "description": "The member's last session date (as Unix milliseconds since epoch)",
            "example": "1608260796147",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_lastSeenMetadata": {
            "description": "Additional metadata associated with the member's last session, for example, whether a token was used",
            "$ref": "#/components/schemas/LastSeenMetadata"
          },
          "_integrationMetadata": {
            "description": "Details on the member account in an external source, if this member is provisioned externally",
            "$ref": "#/components/schemas/IntegrationMetadata"
          },
          "teams": {
            "type": "array",
            "description": "Details on the teams this member is assigned to",
            "items": {
              "$ref": "#/components/schemas/MemberTeamSummaryRep"
            }
          },
          "permissionGrants": {
            "type": "array",
            "description": "A list of permission grants. Permission grants allow a member to have access to a specific action, without having to create or update a custom role.",
            "items": {
              "$ref": "#/components/schemas/MemberPermissionGrantSummaryRep"
            }
          },
          "creationDate": {
            "description": "Timestamp of when the member was created",
            "example": "1628001602644",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "oauthProviders": {
            "type": "array",
            "description": "A list of OAuth providers",
            "items": {
              "$ref": "#/components/schemas/OAuthProviderKind"
            }
          },
          "version": {
            "type": "integer",
            "description": "Version of the current configuration",
            "example": 1
          },
          "roleAttributes": {
            "description": "The role attributes for the member",
            "$ref": "#/components/schemas/RoleAttributeMap"
          }
        }
      },
      "MemberDataRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "_id": {
            "type": "string",
            "description": "The member ID",
            "example": "507f1f77bcf86cd799439011"
          },
          "email": {
            "type": "string",
            "description": "The member email",
            "example": "ariel@acme.com"
          },
          "firstName": {
            "type": "string",
            "description": "The member first name",
            "example": "Ariel"
          },
          "lastName": {
            "type": "string",
            "description": "The member last name",
            "example": "Flores"
          }
        }
      },
      "MemberImportItem": {
        "type": "object",
        "required": [
          "status",
          "value"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message, including CSV line number, if the \u003ccode\u003estatus\u003c/code\u003e is \u003ccode\u003eerror\u003c/code\u003e"
          },
          "status": {
            "type": "string",
            "description": "Whether this member can be successfully imported (\u003ccode\u003esuccess\u003c/code\u003e) or not (\u003ccode\u003eerror\u003c/code\u003e). Even if the status is \u003ccode\u003esuccess\u003c/code\u003e, members are only added to a team on a \u003ccode\u003e201\u003c/code\u003e response.",
            "example": "error"
          },
          "value": {
            "type": "string",
            "description": "The email address for the member requested to be added to this team. May be blank or an error, such as 'invalid email format', if the email address cannot be found or parsed.",
            "example": "new-team-member@acme.com"
          }
        }
      },
      "MemberPermissionGrantSummaryRep": {
        "type": "object",
        "required": [
          "resource"
        ],
        "properties": {
          "actionSet": {
            "type": "string",
            "description": "The name of the group of related actions to allow. A permission grant may have either an \u003ccode\u003eactionSet\u003c/code\u003e or a list of \u003ccode\u003eactions\u003c/code\u003e but not both at the same time."
          },
          "actions": {
            "type": "array",
            "description": "A list of actions to allow. A permission grant may have either an \u003ccode\u003eactionSet\u003c/code\u003e or a list of \u003ccode\u003eactions\u003c/code\u003e but not both at the same time.",
            "items": {
              "type": "string"
            },
            "example": [
              "maintainTeam"
            ]
          },
          "resource": {
            "type": "string",
            "description": "The resource for which the actions are allowed",
            "example": "team/qa-team"
          }
        }
      },
      "MemberSummary": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "role",
          "email"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/members/569f183514f4432160000007",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "The member's ID",
            "example": "569f183514f4432160000007"
          },
          "firstName": {
            "type": "string",
            "description": "The member's first name",
            "example": "Ariel"
          },
          "lastName": {
            "type": "string",
            "description": "The member's last name",
            "example": "Flores"
          },
          "role": {
            "type": "string",
            "description": "The member's built-in role. If the member has no custom roles, this role will be in effect.",
            "example": "admin"
          },
          "email": {
            "type": "string",
            "description": "The member's email address",
            "example": "ariel@acme.com"
          }
        }
      },
      "MemberTeamSummaryRep": {
        "type": "object",
        "required": [
          "customRoleKeys",
          "key",
          "name"
        ],
        "properties": {
          "customRoleKeys": {
            "type": "array",
            "description": "A list of keys of the custom roles this team has access to",
            "items": {
              "type": "string"
            },
            "example": [
              "access-to-test-projects"
            ]
          },
          "key": {
            "type": "string",
            "description": "The team key",
            "example": "team-key-123abc"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "The team name",
            "example": "QA Team"
          }
        }
      },
      "MemberTeamsPostInput": {
        "type": "object",
        "required": [
          "teamKeys"
        ],
        "properties": {
          "teamKeys": {
            "type": "array",
            "description": "List of team keys",
            "items": {
              "type": "string"
            },
            "example": [
              "team1",
              "team2"
            ]
          }
        }
      },
      "Members": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of members",
            "items": {
              "$ref": "#/components/schemas/Member"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of members returned"
          }
        }
      },
      "MethodNotAllowedErrorRep": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "method_not_allowed"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Method not allowed"
          }
        }
      },
      "MetricCollectionRep": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of metrics",
            "items": {
              "$ref": "#/components/schemas/MetricListingRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/metrics/my-project?limit=20",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer"
          }
        }
      },
      "MetricEventDefaultRep": {
        "type": "object",
        "properties": {
          "disabled": {
            "type": "boolean",
            "description": "Whether to disable defaulting missing unit events when calculating results. Defaults to false"
          },
          "value": {
            "type": "number",
            "description": "The default value applied to missing unit events. Set to 0 when \u003ccode\u003edisabled\u003c/code\u003e is false. No other values are currently supported.",
            "example": 0
          }
        }
      },
      "MetricGroupCollectionRep": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of metric groups",
            "items": {
              "$ref": "#/components/schemas/MetricGroupRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/metric-groups",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer"
          }
        }
      },
      "MetricGroupPost": {
        "type": "object",
        "required": [
          "key",
          "name",
          "kind",
          "maintainerId",
          "tags",
          "metrics"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric group",
            "example": "metric-group-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric group",
            "example": "My metric group"
          },
          "kind": {
            "type": "string",
            "description": "The type of the metric group",
            "example": "funnel",
            "enum": [
              "funnel"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the metric group",
            "example": "Description of the metric group"
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this metric group",
            "example": "569fdeadbeef1644facecafe"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the metric group",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "metrics": {
            "type": "array",
            "description": "An ordered list of the metrics in this metric group",
            "items": {
              "$ref": "#/components/schemas/MetricInMetricGroupInput"
            }
          }
        }
      },
      "MetricGroupRep": {
        "type": "object",
        "required": [
          "_id",
          "key",
          "name",
          "kind",
          "_links",
          "tags",
          "_creationDate",
          "_lastModified",
          "maintainer",
          "metrics",
          "_version"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this metric group",
            "example": "bc3e5be1-02d2-40c7-9926-26d0aacd7aab"
          },
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric group",
            "example": "metric-group-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric group",
            "example": "My metric group"
          },
          "kind": {
            "type": "string",
            "description": "The type of the metric group",
            "example": "funnel",
            "enum": [
              "funnel",
              "standard"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the metric group",
            "example": "Description of the metric group"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/projects/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project/metric-groups/my-metric-group",
                "type": "application/json"
              }
            }
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this metric group",
            "$ref": "#/components/schemas/Access"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the metric group",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "_creationDate": {
            "description": "Timestamp of when the metric group was created",
            "example": "1628192791148",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_lastModified": {
            "description": "Timestamp of when the metric group was last modified",
            "example": "1628192791148",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "maintainer": {
            "description": "The maintainer of this metric",
            "$ref": "#/components/schemas/MaintainerRep"
          },
          "metrics": {
            "type": "array",
            "description": "An ordered list of the metrics in this metric group",
            "items": {
              "$ref": "#/components/schemas/MetricInGroupRep"
            }
          },
          "_version": {
            "type": "integer",
            "description": "The version of this metric group",
            "example": 1
          },
          "experiments": {
            "description": "Experiments that use this metric group. Only included if specified in the \u003ccode\u003eexpand\u003c/code\u003e query parameter in a \u003ccode\u003egetMetricGroup\u003c/code\u003e request.",
            "$ref": "#/components/schemas/DependentExperimentListRep"
          },
          "experimentCount": {
            "type": "integer",
            "description": "The number of experiments using this metric group",
            "example": 0
          }
        }
      },
      "MetricGroupResultsRep": {
        "type": "object",
        "required": [
          "_links",
          "metrics"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "metrics": {
            "type": "array",
            "description": "An ordered list of the metrics in this metric group, and each of their results",
            "items": {
              "$ref": "#/components/schemas/MetricInGroupResultsRep"
            }
          }
        }
      },
      "MetricInGroupRep": {
        "type": "object",
        "required": [
          "key",
          "name",
          "kind",
          "_links"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The metric key",
            "example": "metric-key-123abc"
          },
          "_versionId": {
            "type": "string",
            "description": "The version ID of the metric",
            "example": "version-id-123abc"
          },
          "name": {
            "type": "string",
            "description": "The metric name",
            "example": "Example metric"
          },
          "kind": {
            "type": "string",
            "description": "The kind of event the metric tracks",
            "example": "custom",
            "enum": [
              "pageview",
              "click",
              "custom"
            ]
          },
          "isNumeric": {
            "type": "boolean",
            "description": "For custom metrics, whether to track numeric changes in value against a baseline (\u003ccode\u003etrue\u003c/code\u003e) or to track a conversion when an end user takes an action (\u003ccode\u003efalse\u003c/code\u003e).",
            "example": true
          },
          "unitAggregationType": {
            "type": "string",
            "description": "The type of unit aggregation to use for the metric",
            "example": "sum",
            "enum": [
              "sum",
              "average"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/metrics/my-project/my-metric",
                "type": "application/json"
              }
            }
          },
          "nameInGroup": {
            "type": "string",
            "description": "Name of the metric when used within the associated metric group. Can be different from the original name of the metric. Required if and only if the metric group is a \u003ccode\u003efunnel\u003c/code\u003e.",
            "example": "Step 1"
          },
          "randomizationUnits": {
            "type": "array",
            "description": "The randomization units for the metric",
            "items": {
              "type": "string"
            },
            "example": [
              "user"
            ]
          }
        }
      },
      "MetricInGroupResultsRep": {
        "type": "object",
        "required": [
          "metric",
          "results"
        ],
        "properties": {
          "metric": {
            "description": "Metric metadata",
            "$ref": "#/components/schemas/MetricInGroupRep"
          },
          "results": {
            "description": "The results of this metric",
            "$ref": "#/components/schemas/ExperimentBayesianResultsRep"
          }
        }
      },
      "MetricInMetricGroupInput": {
        "type": "object",
        "required": [
          "key",
          "nameInGroup"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The metric key",
            "example": "metric-key-123abc"
          },
          "nameInGroup": {
            "type": "string",
            "description": "Name of the metric when used within the associated metric group. Can be different from the original name of the metric",
            "example": "Step 1"
          }
        }
      },
      "MetricInput": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The metric key",
            "example": "metric-key-123abc"
          },
          "isGroup": {
            "type": "boolean",
            "description": "Whether this is a metric group (true) or a metric (false). Defaults to false",
            "example": true
          },
          "primary": {
            "type": "boolean",
            "description": "Deprecated, use \u003ccode\u003eprimarySingleMetricKey\u003c/code\u003e and \u003ccode\u003eprimaryFunnelKey\u003c/code\u003e. Whether this is a primary metric (true) or a secondary metric (false)",
            "example": true,
            "deprecated": true
          }
        }
      },
      "MetricListingRep": {
        "type": "object",
        "required": [
          "_id",
          "_versionId",
          "key",
          "name",
          "kind",
          "_links",
          "tags",
          "_creationDate"
        ],
        "properties": {
          "experimentCount": {
            "type": "integer",
            "description": "The number of experiments using this metric",
            "example": 0
          },
          "metricGroupCount": {
            "type": "integer",
            "description": "The number of metric groups using this metric",
            "example": 0
          },
          "_id": {
            "type": "string",
            "description": "The ID of this metric",
            "example": "5902deadbeef667524a01290"
          },
          "_versionId": {
            "type": "string",
            "description": "The version ID of the metric",
            "example": "version-id-123abc"
          },
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric",
            "example": "metric-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric",
            "example": "My metric"
          },
          "kind": {
            "type": "string",
            "description": "The kind of event the metric tracks",
            "example": "custom",
            "enum": [
              "pageview",
              "click",
              "custom"
            ]
          },
          "_attachedFlagCount": {
            "type": "integer",
            "description": "The number of feature flags currently attached to this metric",
            "example": 0
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/metrics/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/metrics/my-project/my-metric",
                "type": "application/json"
              }
            }
          },
          "_site": {
            "description": "Details on how to access the metric in the LaunchDarkly UI",
            "example": "{\"href\":\"/experiments/metrics/my-metric/edit\",\"type\":\"text/html\"}",
            "$ref": "#/components/schemas/Link"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this metric",
            "$ref": "#/components/schemas/Access"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the metric",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "_creationDate": {
            "description": "Timestamp of when the metric was created",
            "example": "1628192791148",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "lastModified": {
            "$ref": "#/components/schemas/Modification"
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this metric",
            "example": "569fdeadbeef1644facecafe"
          },
          "_maintainer": {
            "description": "Details on the member who maintains this metric",
            "example": "{\"_links\":{\"self\":{\"href\":\"/api/v2/members/569fdeadbeef1644facecafe\",\"type\":\"application/json\"}},\"_id\":\"569fdeadbeef1644facecafe\",\"firstName\":\"Ariel\",\"lastName\":\"Flores\",\"role\":\"owner\",\"email\":\"ariel@acme.com\"}",
            "$ref": "#/components/schemas/MemberSummary"
          },
          "description": {
            "type": "string",
            "description": "Description of the metric"
          },
          "category": {
            "type": "string",
            "description": "The category of the metric",
            "example": "Error monitoring"
          },
          "isNumeric": {
            "type": "boolean",
            "description": "For custom metrics, whether to track numeric changes in value against a baseline (\u003ccode\u003etrue\u003c/code\u003e) or to track a conversion when an end user takes an action (\u003ccode\u003efalse\u003c/code\u003e).",
            "example": true
          },
          "successCriteria": {
            "type": "string",
            "description": "For custom metrics, the success criteria",
            "enum": [
              "HigherThanBaseline",
              "LowerThanBaseline"
            ]
          },
          "unit": {
            "type": "string",
            "description": "For numeric custom metrics, the unit of measure"
          },
          "eventKey": {
            "type": "string",
            "description": "For custom metrics, the event key to use in your code",
            "example": "Order placed"
          },
          "randomizationUnits": {
            "type": "array",
            "description": "An array of randomization units allowed for this metric",
            "items": {
              "type": "string"
            },
            "example": [
              "user"
            ]
          },
          "filters": {
            "description": "The filters narrowing down the audience based on context attributes or event properties.",
            "example": "{\"type\":\"group\",\"op\":\"and\",\"values\":[{\"type\":\"contextAttribute\",\"op\":\"in\",\"contextKind\":\"user\",\"attribute\":\"country\",\"values\":[\"JP\"],\"negate\":false},{\"type\":\"eventProperty\",\"op\":\"in\",\"attribute\":\"category\",\"values\":[\"magic-wands\"],\"negate\":false}]}",
            "$ref": "#/components/schemas/Filter"
          },
          "unitAggregationType": {
            "type": "string",
            "description": "The method by which multiple unit event values are aggregated",
            "example": "average",
            "enum": [
              "average",
              "sum"
            ]
          },
          "analysisType": {
            "type": "string",
            "description": "The method for analyzing metric events",
            "example": "mean",
            "enum": [
              "mean",
              "percentile"
            ]
          },
          "percentileValue": {
            "type": "integer",
            "description": "The percentile for the analysis method. An integer denoting the target percentile between 0 and 100. Required when \u003ccode\u003eanalysisType\u003c/code\u003e is \u003ccode\u003epercentile\u003c/code\u003e.",
            "example": 95
          },
          "eventDefault": {
            "$ref": "#/components/schemas/MetricEventDefaultRep"
          }
        }
      },
      "MetricPost": {
        "type": "object",
        "required": [
          "key",
          "kind"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric",
            "example": "metric-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric",
            "example": "Example metric"
          },
          "description": {
            "type": "string",
            "description": "Description of the metric",
            "example": "optional description"
          },
          "kind": {
            "type": "string",
            "description": "The kind of event your metric will track",
            "example": "custom",
            "enum": [
              "pageview",
              "click",
              "custom"
            ]
          },
          "selector": {
            "type": "string",
            "description": "One or more CSS selectors. Required for click metrics only.",
            "example": ".dropdown-toggle"
          },
          "urls": {
            "type": "array",
            "description": "One or more target URLs. Required for click and pageview metrics only.",
            "items": {
              "$ref": "#/components/schemas/UrlPost"
            },
            "example": "invalid example"
          },
          "isNumeric": {
            "type": "boolean",
            "description": "Whether to track numeric changes in value against a baseline (\u003ccode\u003etrue\u003c/code\u003e) or to track a conversion when an end user takes an action (\u003ccode\u003efalse\u003c/code\u003e). Required for custom metrics only.",
            "example": false
          },
          "unit": {
            "type": "string",
            "description": "The unit of measure. Applicable for numeric custom metrics only.",
            "example": "orders"
          },
          "eventKey": {
            "type": "string",
            "description": "The event key to use in your code. Required for custom conversion/binary and custom numeric metrics only.",
            "example": "Order placed"
          },
          "successCriteria": {
            "type": "string",
            "description": "Success criteria. Required for custom numeric metrics, optional for custom conversion metrics.",
            "example": "HigherThanBaseline",
            "enum": [
              "HigherThanBaseline",
              "LowerThanBaseline"
            ]
          },
          "tags": {
            "type": "array",
            "description": "Tags for the metric",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "randomizationUnits": {
            "type": "array",
            "description": "An array of randomization units allowed for this metric",
            "items": {
              "type": "string"
            },
            "example": [
              "user"
            ]
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this metric",
            "example": "569fdeadbeef1644facecafe"
          },
          "unitAggregationType": {
            "type": "string",
            "description": "The method by which multiple unit event values are aggregated",
            "example": "average",
            "enum": [
              "average",
              "sum"
            ]
          },
          "analysisType": {
            "type": "string",
            "description": "The method for analyzing metric events",
            "example": "mean"
          },
          "percentileValue": {
            "type": "integer",
            "description": "The percentile for the analysis method. An integer denoting the target percentile between 0 and 100. Required when \u003ccode\u003eanalysisType\u003c/code\u003e is \u003ccode\u003epercentile\u003c/code\u003e.",
            "example": 95
          },
          "eventDefault": {
            "$ref": "#/components/schemas/MetricEventDefaultRep"
          }
        }
      },
      "MetricRep": {
        "type": "object",
        "required": [
          "_id",
          "_versionId",
          "key",
          "name",
          "kind",
          "_links",
          "tags",
          "_creationDate"
        ],
        "properties": {
          "experimentCount": {
            "type": "integer",
            "description": "The number of experiments using this metric",
            "example": 0
          },
          "metricGroupCount": {
            "type": "integer",
            "description": "The number of metric groups using this metric",
            "example": 0
          },
          "_id": {
            "type": "string",
            "description": "The ID of this metric",
            "example": "5902deadbeef667524a01290"
          },
          "_versionId": {
            "type": "string",
            "description": "The version ID of the metric",
            "example": "version-id-123abc"
          },
          "key": {
            "type": "string",
            "description": "A unique key to reference the metric",
            "example": "metric-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the metric",
            "example": "My metric"
          },
          "kind": {
            "type": "string",
            "description": "The kind of event the metric tracks",
            "example": "custom",
            "enum": [
              "pageview",
              "click",
              "custom"
            ]
          },
          "_attachedFlagCount": {
            "type": "integer",
            "description": "The number of feature flags currently attached to this metric",
            "example": 0
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/metrics/my-project",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/metrics/my-project/my-metric",
                "type": "application/json"
              }
            }
          },
          "_site": {
            "description": "Details on how to access the metric in the LaunchDarkly UI",
            "example": "{\"href\":\"/experiments/metrics/my-metric/edit\",\"type\":\"text/html\"}",
            "$ref": "#/components/schemas/Link"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this metric",
            "$ref": "#/components/schemas/Access"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the metric",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "_creationDate": {
            "description": "Timestamp of when the metric was created",
            "example": "1628192791148",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "lastModified": {
            "$ref": "#/components/schemas/Modification"
          },
          "maintainerId": {
            "type": "string",
            "description": "The ID of the member who maintains this metric",
            "example": "569fdeadbeef1644facecafe"
          },
          "_maintainer": {
            "description": "Details on the member who maintains this metric",
            "example": "{\"_links\":{\"self\":{\"href\":\"/api/v2/members/569fdeadbeef1644facecafe\",\"type\":\"application/json\"}},\"_id\":\"569fdeadbeef1644facecafe\",\"firstName\":\"Ariel\",\"lastName\":\"Flores\",\"role\":\"owner\",\"email\":\"ariel@acme.com\"}",
            "$ref": "#/components/schemas/MemberSummary"
          },
          "description": {
            "type": "string",
            "description": "Description of the metric"
          },
          "category": {
            "type": "string",
            "description": "The category of the metric",
            "example": "Error monitoring"
          },
          "isNumeric": {
            "type": "boolean",
            "description": "For custom metrics, whether to track numeric changes in value against a baseline (\u003ccode\u003etrue\u003c/code\u003e) or to track a conversion when an end user takes an action (\u003ccode\u003efalse\u003c/code\u003e).",
            "example": true
          },
          "successCriteria": {
            "type": "string",
            "description": "For custom metrics, the success criteria",
            "enum": [
              "HigherThanBaseline",
              "LowerThanBaseline"
            ]
          },
          "unit": {
            "type": "string",
            "description": "For numeric custom metrics, the unit of measure"
          },
          "eventKey": {
            "type": "string",
            "description": "For custom metrics, the event key to use in your code",
            "example": "Order placed"
          },
          "randomizationUnits": {
            "type": "array",
            "description": "An array of randomization units allowed for this metric",
            "items": {
              "type": "string"
            },
            "example": [
              "user"
            ]
          },
          "filters": {
            "description": "The filters narrowing down the audience based on context attributes or event properties.",
            "example": "{\"type\":\"group\",\"op\":\"and\",\"values\":[{\"type\":\"contextAttribute\",\"op\":\"in\",\"contextKind\":\"user\",\"attribute\":\"country\",\"values\":[\"JP\"],\"negate\":false},{\"type\":\"eventProperty\",\"op\":\"in\",\"attribute\":\"category\",\"values\":[\"magic-wands\"],\"negate\":false}]}",
            "$ref": "#/components/schemas/Filter"
          },
          "unitAggregationType": {
            "type": "string",
            "description": "The method by which multiple unit event values are aggregated",
            "example": "average",
            "enum": [
              "average",
              "sum"
            ]
          },
          "analysisType": {
            "type": "string",
            "description": "The method for analyzing metric events",
            "example": "mean",
            "enum": [
              "mean",
              "percentile"
            ]
          },
          "percentileValue": {
            "type": "integer",
            "description": "The percentile for the analysis method. An integer denoting the target percentile between 0 and 100. Required when \u003ccode\u003eanalysisType\u003c/code\u003e is \u003ccode\u003epercentile\u003c/code\u003e.",
            "example": 95
          },
          "eventDefault": {
            "$ref": "#/components/schemas/MetricEventDefaultRep"
          },
          "experiments": {
            "description": "Experiments that use this metric, including those using a metric group that contains this metric",
            "$ref": "#/components/schemas/DependentExperimentListRep"
          },
          "metricGroups": {
            "type": "array",
            "description": "Metric groups that use this metric",
            "items": {
              "$ref": "#/components/schemas/DependentMetricGroupRep"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the metric is active",
            "example": true
          },
          "_attachedFeatures": {
            "type": "array",
            "description": "Details on the flags attached to this metric",
            "items": {
              "$ref": "#/components/schemas/FlagListingRep"
            }
          },
          "_version": {
            "type": "integer",
            "description": "Version of the metric",
            "example": 1
          },
          "selector": {
            "type": "string",
            "description": "For click metrics, the CSS selectors"
          },
          "urls": {
            "description": "For click and pageview metrics, the target URLs",
            "$ref": "#/components/schemas/UrlMatchers"
          }
        }
      },
      "MetricSeen": {
        "type": "object",
        "properties": {
          "ever": {
            "type": "boolean",
            "description": "Whether the metric has received an event for this iteration",
            "example": true
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of when the metric most recently received an event for this iteration",
            "example": 1657129307
          }
        }
      },
      "MetricV2Rep": {
        "type": "object",
        "required": [
          "key",
          "name",
          "kind",
          "_links"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The metric key",
            "example": "metric-key-123abc"
          },
          "_versionId": {
            "type": "string",
            "description": "The version ID of the metric",
            "example": "version-id-123abc"
          },
          "name": {
            "type": "string",
            "description": "The metric name",
            "example": "Example metric"
          },
          "kind": {
            "type": "string",
            "description": "The kind of event the metric tracks",
            "example": "custom",
            "enum": [
              "pageview",
              "click",
              "custom"
            ]
          },
          "isNumeric": {
            "type": "boolean",
            "description": "For custom metrics, whether to track numeric changes in value against a baseline (\u003ccode\u003etrue\u003c/code\u003e) or to track a conversion when an end user takes an action (\u003ccode\u003efalse\u003c/code\u003e).",
            "example": true
          },
          "unitAggregationType": {
            "type": "string",
            "description": "The type of unit aggregation to use for the metric",
            "example": "sum",
            "enum": [
              "sum",
              "average"
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/metrics/my-project/my-metric",
                "type": "application/json"
              }
            }
          }
        }
      },
      "MetricsInput": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MetricInput"
        }
      },
      "MigrationFlagStageCount": {
        "type": "integer"
      },
      "MigrationSafetyIssueRep": {
        "type": "object",
        "properties": {
          "causingRuleId": {
            "type": "string",
            "description": "The ID of the rule which caused this issue"
          },
          "affectedRuleIds": {
            "type": "array",
            "description": "A list of the IDs of the rules which are affected by this issue. \u003ccode\u003efallthrough\u003c/code\u003e is a sentinel value for the default rule.",
            "items": {
              "type": "string"
            }
          },
          "issue": {
            "type": "string",
            "description": "A description of the issue that \u003ccode\u003ecausingRuleId\u003c/code\u003e has caused for \u003ccode\u003eaffectedRuleIds\u003c/code\u003e."
          },
          "oldSystemAffected": {
            "type": "boolean",
            "description": "Whether the changes caused by \u003ccode\u003ecausingRuleId\u003c/code\u003e bring inconsistency to the old system"
          }
        }
      },
      "MigrationSettingsPost": {
        "type": "object",
        "required": [
          "stageCount"
        ],
        "properties": {
          "contextKind": {
            "type": "string",
            "description": "Context kind for a migration with 6 stages, where data is being moved"
          },
          "stageCount": {
            "enum": [
              "2",
              "4",
              "6"
            ],
            "$ref": "#/components/schemas/MigrationFlagStageCount"
          }
        }
      },
      "Modification": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-08-05T19:46:31.148082Z"
          }
        }
      },
      "MultiEnvironmentDependentFlag": {
        "type": "object",
        "required": [
          "key",
          "environments"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The flag name",
            "example": "Example dependent flag"
          },
          "key": {
            "type": "string",
            "description": "The flag key",
            "example": "dependent-flag-key-123abc"
          },
          "environments": {
            "type": "array",
            "description": "A list of environments in which the dependent flag appears",
            "items": {
              "$ref": "#/components/schemas/DependentFlagEnvironment"
            }
          }
        }
      },
      "MultiEnvironmentDependentFlags": {
        "type": "object",
        "required": [
          "items",
          "_links",
          "_site"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of dependent flags with their environment information",
            "items": {
              "$ref": "#/components/schemas/MultiEnvironmentDependentFlag"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_site": {
            "description": "Details on how to access the prerequisite flag in the LaunchDarkly UI",
            "example": "{ \"href\": \"/example-project/~/features/example-prereq-flag\", \"type\": \"text/html\" }",
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "NamingConvention": {
        "type": "object",
        "properties": {
          "case": {
            "type": "string",
            "description": "The casing convention to enforce for new flag keys in this project",
            "example": "kebabCase",
            "enum": [
              "none",
              "camelCase",
              "upperCamelCase",
              "snakeCase",
              "kebabCase"
            ]
          },
          "prefix": {
            "type": "string",
            "description": "The prefix to enforce for new flag keys in this project",
            "example": "enable-"
          }
        }
      },
      "NewMemberForm": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "The member's email",
            "example": "sandy@acme.com"
          },
          "password": {
            "type": "string",
            "description": "The member's password",
            "example": "***"
          },
          "firstName": {
            "type": "string",
            "description": "The member's first name",
            "example": "Ariel"
          },
          "lastName": {
            "type": "string",
            "description": "The member's last name",
            "example": "Flores"
          },
          "role": {
            "type": "string",
            "description": "The member's built-in role",
            "example": "reader",
            "enum": [
              "reader",
              "writer",
              "admin",
              "no_access"
            ]
          },
          "customRoles": {
            "type": "array",
            "description": "An array of the member's custom roles",
            "items": {
              "type": "string"
            },
            "example": [
              "customRole1",
              "customRole2"
            ]
          },
          "teamKeys": {
            "type": "array",
            "description": "An array of the member's teams",
            "items": {
              "type": "string"
            },
            "example": [
              "team-1",
              "team-2"
            ]
          },
          "roleAttributes": {
            "description": "An object of role attributes for the member",
            "example": "{\"developerProjectKey\": [\"default\"]}",
            "$ref": "#/components/schemas/RoleAttributeMap"
          }
        }
      },
      "NewMemberFormListPost": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/NewMemberForm"
        }
      },
      "NotFoundErrorRep": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "not_found"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Invalid resource identifier"
          }
        }
      },
      "OAuthProviderKind": {
        "type": "string"
      },
      "ObjectId": {
        "type": "string"
      },
      "Operator": {
        "type": "string"
      },
      "OptionsArray": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ParameterDefault": {
        "type": "object",
        "properties": {
          "value": {
            "description": "The default value for the given parameter"
          },
          "booleanVariationValue": {
            "type": "boolean",
            "description": "Variation value for boolean flags. Not applicable for non-boolean flags."
          },
          "ruleClause": {
            "description": "Metadata related to add rule instructions",
            "$ref": "#/components/schemas/RuleClause"
          }
        }
      },
      "ParameterRep": {
        "type": "object",
        "properties": {
          "variationId": {
            "type": "string"
          },
          "flagKey": {
            "type": "string"
          }
        }
      },
      "ParentResourceRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the parent resource"
          },
          "resource": {
            "type": "string",
            "description": "The parent's resource specifier"
          }
        }
      },
      "PatchFailedErrorRep": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "patch_failed"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Unprocessable entity. Could not apply patch."
          }
        }
      },
      "PatchOperation": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The type of operation to perform",
            "example": "replace"
          },
          "path": {
            "type": "string",
            "description": "A JSON Pointer string specifying the part of the document to operate on",
            "example": "/exampleField"
          },
          "value": {
            "description": "A JSON value used in \"add\", \"replace\", and \"test\" operations",
            "example": "new example value"
          }
        }
      },
      "PatchWithComment": {
        "type": "object",
        "required": [
          "patch"
        ],
        "properties": {
          "patch": {
            "description": "A JSON patch representation of the change to make",
            "$ref": "#/components/schemas/JSONPatch"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment"
          }
        }
      },
      "Phase": {
        "type": "object",
        "required": [
          "id",
          "audiences",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The phase ID",
            "example": "1234a56b7c89d012345e678f"
          },
          "audiences": {
            "description": "An ordered list of the audiences for this release phase. Each audience corresponds to a LaunchDarkly environment.",
            "$ref": "#/components/schemas/Audiences"
          },
          "name": {
            "type": "string",
            "description": "The release phase name",
            "example": "Phase 1 - Testing"
          },
          "configuration": {
            "description": "The configuration for the phase's rollout.",
            "$ref": "#/components/schemas/PhaseConfiguration"
          }
        }
      },
      "PhaseConfiguration": {
        "type": "object",
        "properties": {}
      },
      "PhaseInfo": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "releaseCount"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The phase ID",
            "example": "1234a56b7c89d012345e678f"
          },
          "name": {
            "type": "string",
            "description": "The release phase name",
            "example": "Phase 1 - Testing"
          },
          "releaseCount": {
            "type": "integer",
            "description": "The number of active releases in this phase",
            "example": 2
          }
        }
      },
      "PhaseStatus": {
        "type": "string"
      },
      "PostFlagScheduledChangesInput": {
        "type": "object",
        "required": [
          "executionDate",
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the scheduled changes",
            "example": "optional comment"
          },
          "executionDate": {
            "description": "When the scheduled changes should be executed",
            "example": "1636558831870",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "instructions": {
            "description": "The actions to perform on the execution date for these scheduled changes. This should be an array with a single object that looks like \u003ccode\u003e{\"kind\": \"scheduled_action\"}\u003c/code\u003e. Supported scheduled actions are \u003ccode\u003eturnFlagOn\u003c/code\u003e and \u003ccode\u003eturnFlagOff\u003c/code\u003e.",
            "example": "[ { \"kind\": \"turnFlagOn\" }]",
            "$ref": "#/components/schemas/Instructions"
          }
        }
      },
      "Prerequisite": {
        "type": "object",
        "required": [
          "key",
          "variation"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "variation": {
            "type": "integer"
          }
        }
      },
      "Project": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "key",
          "includeInSnippetByDefault",
          "name",
          "tags"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "environments": {
                "href": "/api/v2/projects/my-project/environments",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "The ID of this project",
            "example": "57be1db38b75bf0772d11383"
          },
          "key": {
            "type": "string",
            "description": "The key of this project",
            "example": "project-key-123abc"
          },
          "includeInSnippetByDefault": {
            "type": "boolean",
            "description": "Whether or not flags created in this project are made available to the client-side JavaScript SDK by default",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Describes which client-side SDKs can use new flags by default",
            "$ref": "#/components/schemas/ClientSideAvailability"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the project",
            "example": "My Project"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this project",
            "$ref": "#/components/schemas/Access"
          },
          "tags": {
            "type": "array",
            "description": "A list of tags for the project",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "defaultReleasePipelineKey": {
            "type": "string",
            "description": "The key of the default release pipeline for this project"
          },
          "environments": {
            "description": "A paginated list of environments for the project. By default this field is omitted unless expanded by the client.",
            "$ref": "#/components/schemas/Environments"
          }
        }
      },
      "ProjectPost": {
        "type": "object",
        "required": [
          "name",
          "key"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the project.",
            "example": "My Project"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the project in your code.",
            "example": "project-key-123abc"
          },
          "includeInSnippetByDefault": {
            "type": "boolean",
            "description": "Whether or not flags created in this project are made available to the client-side JavaScript SDK by default.",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Controls which client-side SDKs can use new flags by default.",
            "$ref": "#/components/schemas/DefaultClientSideAvailabilityPost"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the project",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "environments": {
            "type": "array",
            "description": "Creates the provided environments for this project. If omitted default environments will be created instead.",
            "items": {
              "$ref": "#/components/schemas/EnvironmentPost"
            }
          },
          "namingConvention": {
            "description": "The flag key convention for this project",
            "$ref": "#/components/schemas/NamingConvention"
          }
        }
      },
      "ProjectRep": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "key",
          "includeInSnippetByDefault",
          "name",
          "tags",
          "environments"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "environments": {
                "href": "/api/v2/projects/my-project/environments",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/my-project",
                "type": "application/json"
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "The ID of this project",
            "example": "57be1db38b75bf0772d11383"
          },
          "key": {
            "type": "string",
            "description": "The key of this project",
            "example": "project-key-123abc"
          },
          "includeInSnippetByDefault": {
            "type": "boolean",
            "description": "Whether or not flags created in this project are made available to the client-side JavaScript SDK by default",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Describes which client-side SDKs can use new flags by default",
            "$ref": "#/components/schemas/ClientSideAvailability"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the project",
            "example": "My Project"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this project",
            "$ref": "#/components/schemas/Access"
          },
          "tags": {
            "type": "array",
            "description": "A list of tags for the project",
            "items": {
              "type": "string"
            },
            "example": [
              "ops"
            ]
          },
          "defaultReleasePipelineKey": {
            "type": "string",
            "description": "The key of the default release pipeline for this project"
          },
          "environments": {
            "type": "array",
            "description": "A list of environments for the project",
            "items": {
              "$ref": "#/components/schemas/Environment"
            }
          }
        }
      },
      "ProjectSummary": {
        "type": "object",
        "required": [
          "_id",
          "_links",
          "key",
          "name"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this project",
            "example": "57be1db38b75bf0772d11383"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "environments": {
                "href": "/api/v2/projects/example-project/environments",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/projects/example-project",
                "type": "application/json"
              }
            }
          },
          "key": {
            "type": "string",
            "description": "The project key",
            "example": "project-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "The project name",
            "example": "Example project"
          }
        }
      },
      "Projects": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "A link to this resource.",
            "example": {
              "self": {
                "href": "/api/v2/projects",
                "type": "application/json"
              }
            }
          },
          "items": {
            "type": "array",
            "description": "List of projects.",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "totalCount": {
            "type": "integer"
          }
        }
      },
      "RandomizationSettingsPut": {
        "type": "object",
        "required": [
          "randomizationUnits"
        ],
        "properties": {
          "randomizationUnits": {
            "type": "array",
            "description": "An array of randomization units allowed for this project.",
            "items": {
              "$ref": "#/components/schemas/RandomizationUnitInput"
            }
          }
        }
      },
      "RandomizationSettingsRep": {
        "type": "object",
        "properties": {
          "_projectId": {
            "type": "string",
            "description": "The project ID",
            "example": "12345abcde67890fghij"
          },
          "_projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "project-key-123abc"
          },
          "randomizationUnits": {
            "type": "array",
            "description": "An array of the randomization units in this project",
            "items": {
              "$ref": "#/components/schemas/RandomizationUnitRep"
            }
          },
          "_creationDate": {
            "description": "Timestamp of when the experiment was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "RandomizationUnitInput": {
        "type": "object",
        "required": [
          "randomizationUnit",
          "standardRandomizationUnit"
        ],
        "properties": {
          "randomizationUnit": {
            "type": "string",
            "description": "The unit of randomization. Must match the key of an existing context kind in this project.",
            "example": "user"
          },
          "default": {
            "type": "boolean",
            "description": "If true, any experiment iterations created within this project will default to using this randomization unit. A project can only have one default randomization unit.",
            "example": true
          },
          "standardRandomizationUnit": {
            "type": "string",
            "description": "One of LaunchDarkly's fixed set of standard randomization units.",
            "enum": [
              "guest",
              "guestTime",
              "organization",
              "request",
              "user",
              "userTime"
            ]
          }
        }
      },
      "RandomizationUnitRep": {
        "type": "object",
        "properties": {
          "randomizationUnit": {
            "type": "string",
            "description": "The unit of randomization. Defaults to user.",
            "example": "user"
          },
          "standardRandomizationUnit": {
            "type": "string",
            "description": "One of LaunchDarkly's fixed set of standard randomization units.",
            "example": "user"
          },
          "default": {
            "type": "boolean",
            "description": "Whether this randomization unit is the default for experiments",
            "example": true
          },
          "_hidden": {
            "type": "boolean"
          },
          "_displayName": {
            "type": "string",
            "description": "The display name for the randomization unit, displayed in the LaunchDarkly user interface.",
            "example": "User"
          }
        }
      },
      "RateLimitedErrorRep": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "rate_limited"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "You've exceeded the API rate limit. Try again later."
          }
        }
      },
      "RecentTriggerBody": {
        "type": "object",
        "properties": {
          "timestamp": {
            "description": "Timestamp of the incoming trigger webhook",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "jsonBody": {
            "type": "object",
            "additionalProperties": {},
            "description": "The marshalled JSON request body for the incoming trigger webhook. If this is empty or contains invalid JSON, the timestamp is recorded but this field will be empty."
          }
        }
      },
      "ReferenceRep": {
        "type": "object",
        "required": [
          "path",
          "hunks"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "File path of the reference",
            "example": "/main/index.js"
          },
          "hint": {
            "type": "string",
            "description": "Programming language used in the file",
            "example": "javascript"
          },
          "hunks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HunkRep"
            }
          }
        }
      },
      "RelatedExperimentRep": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          }
        }
      },
      "RelativeDifferenceRep": {
        "type": "object",
        "properties": {
          "upper": {
            "type": "number",
            "description": "An upper bound of the relative difference between the treatment and the \u003ccode\u003efromTreatmentId\u003c/code\u003e",
            "example": 0.42655970355712425
          },
          "lower": {
            "type": "number",
            "description": "A lower bound of the relative difference between the treatment and the \u003ccode\u003efromTreatmentId\u003c/code\u003e",
            "example": -0.13708601934659803
          },
          "fromTreatmentId": {
            "type": "string",
            "description": "The treatment ID of the treatment against which the relative difference is calculated",
            "example": "92b8354e-360e-4d67-8f13-fa6a46ca8077"
          },
          "variance": {
            "type": "number",
            "description": "Variance of the relative difference",
            "example": 4.23
          },
          "varianceReduction": {
            "type": "number",
            "description": "The reduction in variance resulting from CUPED",
            "example": 0.1
          }
        }
      },
      "RelayAutoConfigCollectionRep": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of Relay Proxy configurations",
            "items": {
              "$ref": "#/components/schemas/RelayAutoConfigRep"
            }
          }
        }
      },
      "RelayAutoConfigPost": {
        "type": "object",
        "required": [
          "name",
          "policy"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the Relay Proxy configuration"
          },
          "policy": {
            "type": "array",
            "description": "A description of what environments and projects the Relay Proxy should include or exclude. To learn more, read [Write an inline policy](https://launchdarkly.com/docs/sdk/relay-proxy/automatic-configuration#write-an-inline-policy).",
            "items": {
              "$ref": "#/components/schemas/Statement"
            }
          }
        }
      },
      "RelayAutoConfigRep": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "policy",
          "fullKey",
          "displayKey",
          "creationDate",
          "lastModified"
        ],
        "properties": {
          "_id": {
            "description": "The ID of the Relay Proxy configuration",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/components/schemas/ObjectId"
          },
          "_creator": {
            "description": "Details on the member who created this Relay Proxy configuration",
            "$ref": "#/components/schemas/MemberSummary"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this Relay Proxy configuration",
            "$ref": "#/components/schemas/Access"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the Relay Proxy configuration",
            "example": "Relay Proxy Demo Config"
          },
          "policy": {
            "type": "array",
            "description": "A description of what environments and projects the Relay Proxy should include or exclude",
            "items": {
              "$ref": "#/components/schemas/Statement"
            }
          },
          "fullKey": {
            "type": "string",
            "description": "The Relay Proxy configuration key"
          },
          "displayKey": {
            "type": "string",
            "description": "The last few characters of the Relay Proxy configuration key, displayed in the LaunchDarkly UI",
            "example": "7f30"
          },
          "creationDate": {
            "description": "Timestamp of when the Relay Proxy configuration was created",
            "example": "1628001602644",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "lastModified": {
            "description": "Timestamp of when the Relay Proxy configuration was most recently modified",
            "example": "1628001602644",
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "Release": {
        "type": "object",
        "required": [
          "name",
          "releasePipelineKey",
          "releasePipelineDescription",
          "phases",
          "_version"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "name": {
            "type": "string",
            "description": "The release pipeline name",
            "example": "Example release pipeline"
          },
          "releasePipelineKey": {
            "type": "string",
            "description": "The release pipeline key",
            "example": "example-release-pipeline"
          },
          "releasePipelineDescription": {
            "type": "string",
            "description": "The release pipeline description",
            "example": "Our release pipeline for typical testing and deployment"
          },
          "phases": {
            "type": "array",
            "description": "An ordered list of the release pipeline phases",
            "items": {
              "$ref": "#/components/schemas/ReleasePhase"
            }
          },
          "_version": {
            "type": "integer",
            "description": "The release version",
            "example": 1
          },
          "_releaseVariationId": {
            "type": "string",
            "description": "The chosen release variation ID to use across all phases of a release"
          },
          "_canceledAt": {
            "description": "Timestamp of when the release was canceled",
            "example": "1684262711507",
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "ReleaseAudience": {
        "type": "object",
        "required": [
          "_id",
          "name"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The audience ID",
            "example": "1234a56b7c89d012345e678g"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "environment": {
            "description": "Details about the environment. If the environment is deleted, this field will be omitted.",
            "$ref": "#/components/schemas/EnvironmentSummary"
          },
          "name": {
            "type": "string",
            "description": "The release phase name",
            "example": "Phase 1 - Testing"
          },
          "configuration": {
            "description": "The audience configuration",
            "$ref": "#/components/schemas/AudienceConfiguration"
          },
          "segmentKeys": {
            "type": "array",
            "description": "A list of segment keys",
            "items": {
              "type": "string"
            },
            "example": [
              "segment-key-123abc"
            ]
          },
          "status": {
            "description": "The audience status",
            "example": "active",
            "$ref": "#/components/schemas/AudienceStatus"
          },
          "_ruleIds": {
            "type": "array",
            "description": "The rules IDs added or updated by this audience",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReleaseGuardianConfiguration": {
        "type": "object",
        "required": [
          "monitoringWindowMilliseconds",
          "rolloutWeight",
          "rollbackOnRegression"
        ],
        "properties": {
          "monitoringWindowMilliseconds": {
            "type": "integer",
            "format": "int64",
            "description": "The monitoring window in milliseconds",
            "example": 60000
          },
          "rolloutWeight": {
            "type": "integer",
            "description": "The rollout weight percentage",
            "example": 50
          },
          "rollbackOnRegression": {
            "type": "boolean",
            "description": "Whether or not to roll back on regression",
            "example": true
          },
          "randomizationUnit": {
            "type": "string",
            "description": "The randomization unit for the measured rollout",
            "example": "user"
          }
        }
      },
      "ReleaseGuardianConfigurationInput": {
        "type": "object",
        "properties": {
          "monitoringWindowMilliseconds": {
            "type": "integer",
            "format": "int64",
            "description": "The monitoring window in milliseconds",
            "example": 60000
          },
          "rolloutWeight": {
            "type": "integer",
            "description": "The rollout weight",
            "example": 50
          },
          "rollbackOnRegression": {
            "type": "boolean",
            "description": "Whether or not to rollback on regression",
            "example": true
          },
          "randomizationUnit": {
            "type": "string",
            "description": "The randomization unit for the measured rollout",
            "example": "user"
          }
        }
      },
      "ReleasePhase": {
        "type": "object",
        "required": [
          "_id",
          "_name",
          "complete",
          "_creationDate",
          "_audiences"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The phase ID",
            "example": "1234a56b7c89d012345e678f"
          },
          "_name": {
            "type": "string",
            "description": "The release phase name",
            "example": "Phase 1 - Testing"
          },
          "complete": {
            "type": "boolean",
            "description": "Whether this phase is complete",
            "example": true
          },
          "_creationDate": {
            "description": "Timestamp of when the release phase was created",
            "example": "1684262711507",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_completionDate": {
            "description": "Timestamp of when the release phase was completed",
            "example": "1684262711509",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_completedBy": {
            "description": "Details about how this phase was marked as complete",
            "$ref": "#/components/schemas/CompletedBy"
          },
          "_audiences": {
            "type": "array",
            "description": "A logical grouping of one or more environments that share attributes for rolling out changes",
            "items": {
              "$ref": "#/components/schemas/ReleaseAudience"
            }
          },
          "status": {
            "description": "Status of the phase",
            "example": "Started",
            "enum": [
              "NotStarted",
              "ReadyToStart",
              "Started",
              "Paused",
              "Complete"
            ],
            "$ref": "#/components/schemas/PhaseStatus"
          },
          "started": {
            "type": "boolean",
            "description": "Whether or not this phase has started"
          },
          "_startedDate": {
            "description": "Timestamp of when the release phase was started",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "configuration": {
            "description": "The phase configuration",
            "$ref": "#/components/schemas/PhaseConfiguration"
          }
        }
      },
      "ReleasePipeline": {
        "type": "object",
        "required": [
          "createdAt",
          "key",
          "name",
          "phases"
        ],
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the release pipeline was created",
            "example": "1684262711507"
          },
          "description": {
            "type": "string",
            "description": "The release pipeline description",
            "example": "Standard pipeline to roll out to production"
          },
          "key": {
            "type": "string",
            "description": "The release pipeline key",
            "example": "standard-pipeline"
          },
          "name": {
            "type": "string",
            "description": "The release pipeline name",
            "example": "Standard Pipeline"
          },
          "phases": {
            "type": "array",
            "description": "An ordered list of the release pipeline phases. Each phase is a logical grouping of one or more environments that share attributes for rolling out changes.",
            "items": {
              "$ref": "#/components/schemas/Phase"
            }
          },
          "tags": {
            "type": "array",
            "description": "A list of the release pipeline's tags",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          },
          "_version": {
            "type": "integer",
            "description": "The release pipeline version",
            "example": 1
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this release pipeline",
            "$ref": "#/components/schemas/Access"
          },
          "isProjectDefault": {
            "type": "boolean",
            "description": "Whether this release pipeline is the default pipeline for the project"
          },
          "_isLegacy": {
            "type": "boolean",
            "description": "Whether this release pipeline is a legacy pipeline",
            "example": true
          }
        }
      },
      "ReleasePipelineCollection": {
        "type": "object",
        "required": [
          "items",
          "totalCount"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of release pipelines",
            "items": {
              "$ref": "#/components/schemas/ReleasePipeline"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of release pipelines",
            "example": 1
          }
        }
      },
      "ReleaseProgression": {
        "type": "object",
        "required": [
          "_createdAt",
          "flagKey",
          "_links"
        ],
        "properties": {
          "_createdAt": {
            "description": "Timestamp of when the release was created",
            "example": "1684262711507",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_completedAt": {
            "description": "Timestamp of when the release was completed",
            "example": "1684262711509",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "flagKey": {
            "type": "string",
            "description": "The flag key",
            "example": "flag-key-123abc"
          },
          "activePhaseId": {
            "type": "string",
            "description": "The ID of the currently active release phase",
            "example": "1234a56b7c89d012345e678f"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ReleaseProgressionCollection": {
        "type": "object",
        "required": [
          "activeCount",
          "completedCount",
          "items",
          "phases",
          "totalCount",
          "_links"
        ],
        "properties": {
          "activeCount": {
            "type": "integer",
            "description": "The number of active releases",
            "example": 3
          },
          "completedCount": {
            "type": "integer",
            "description": "The number of completed releases",
            "example": 1
          },
          "items": {
            "type": "array",
            "description": "A list of details for each release, across all flags, for this release pipeline",
            "items": {
              "$ref": "#/components/schemas/ReleaseProgression"
            }
          },
          "phases": {
            "type": "array",
            "description": "A list of details for each phase, across all releases, for this release pipeline",
            "items": {
              "$ref": "#/components/schemas/PhaseInfo"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of releases for this release pipeline",
            "example": 8
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "ReleaseStrategy": {
        "type": "string"
      },
      "ReleaserAudienceConfigInput": {
        "type": "object",
        "properties": {
          "audienceId": {
            "type": "string",
            "description": "UUID of the audience."
          },
          "releaseGuardianConfiguration": {
            "description": "Optional configuration details for the specified audience. Will default to the release pipeline's audience configuration if omitted.",
            "$ref": "#/components/schemas/ReleaseGuardianConfigurationInput"
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "notifyTeamKeys": {
            "type": "array",
            "description": "An array of team keys. The members of these teams are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-reviewer-team"
            ]
          }
        }
      },
      "RepositoryCollectionRep": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "items": {
            "type": "array",
            "description": "An array of repositories",
            "items": {
              "$ref": "#/components/schemas/RepositoryRep"
            }
          }
        }
      },
      "RepositoryRep": {
        "type": "object",
        "required": [
          "name",
          "type",
          "defaultBranch",
          "enabled",
          "version",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The repository name",
            "example": "LaunchDarkly-Docs"
          },
          "sourceLink": {
            "type": "string",
            "description": "A URL to access the repository",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs"
          },
          "commitUrlTemplate": {
            "type": "string",
            "description": "A template for constructing a valid URL to view the commit",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}"
          },
          "hunkUrlTemplate": {
            "type": "string",
            "description": "A template for constructing a valid URL to view the hunk",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}"
          },
          "type": {
            "type": "string",
            "description": "The type of repository",
            "example": "github",
            "enum": [
              "bitbucket",
              "custom",
              "github",
              "gitlab"
            ]
          },
          "defaultBranch": {
            "type": "string",
            "description": "The repository's default branch",
            "example": "main"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether or not a repository is enabled for code reference scanning",
            "example": true
          },
          "version": {
            "type": "integer",
            "description": "The version of the repository's saved information",
            "example": 3
          },
          "branches": {
            "type": "array",
            "description": "An array of the repository's branches that have been scanned for code references",
            "items": {
              "$ref": "#/components/schemas/BranchRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {}
          },
          "_access": {
            "$ref": "#/components/schemas/Access"
          }
        }
      },
      "ResourceAccess": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionIdentifier"
          },
          "resource": {
            "type": "string"
          }
        }
      },
      "ResourceCategory": {
        "type": "string"
      },
      "ResourceIDResponse": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string"
          },
          "projectKey": {
            "type": "string"
          },
          "environmentKey": {
            "type": "string"
          },
          "flagKey": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "ResourceId": {
        "type": "object",
        "properties": {
          "environmentKey": {
            "type": "string",
            "description": "The environment key",
            "example": "environment-key-123abc"
          },
          "flagKey": {
            "type": "string",
            "description": "Deprecated, use \u003ccode\u003ekey\u003c/code\u003e instead",
            "deprecated": true
          },
          "key": {
            "type": "string",
            "description": "The key of the flag or segment",
            "example": "segment-key-123abc"
          },
          "kind": {
            "description": "The type of resource, \u003ccode\u003eflag\u003c/code\u003e or \u003ccode\u003esegment\u003c/code\u003e",
            "example": "segment",
            "$ref": "#/components/schemas/ResourceKind"
          },
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "project-key-123abc"
          }
        }
      },
      "ResourceKind": {
        "type": "string"
      },
      "ReviewOutput": {
        "type": "object",
        "required": [
          "_id",
          "kind"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "creationDate": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "comment": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "serviceTokenId": {
            "type": "string"
          }
        }
      },
      "ReviewResponse": {
        "type": "object",
        "required": [
          "_id",
          "kind"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The approval request ID",
            "example": "12ab3c45de678910abc12345"
          },
          "kind": {
            "type": "string",
            "description": "The type of review action to take",
            "example": "approve",
            "enum": [
              "approve",
              "decline",
              "comment"
            ]
          },
          "creationDate": {
            "description": "Timestamp of when the request was created",
            "example": "1653606981113",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "comment": {
            "type": "string",
            "description": "A comment describing the approval response",
            "example": "Approved!"
          },
          "memberId": {
            "type": "string",
            "description": "ID of account member that reviewed request",
            "example": "12ab3c45de678910abc12345"
          },
          "serviceTokenId": {
            "type": "string",
            "description": "ID of account service token that reviewed request",
            "example": "12ab3c45de678910abc12345"
          }
        }
      },
      "RoleAttributeMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/RoleAttributeValues"
        }
      },
      "RoleAttributeValues": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "RoleType": {
        "type": "string"
      },
      "Rollout": {
        "type": "object",
        "required": [
          "variations"
        ],
        "properties": {
          "variations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeightedVariation"
            }
          },
          "experimentAllocation": {
            "$ref": "#/components/schemas/ExperimentAllocationRep"
          },
          "seed": {
            "type": "integer"
          },
          "bucketBy": {
            "type": "string"
          },
          "contextKind": {
            "type": "string"
          }
        }
      },
      "RootResponse": {
        "type": "object",
        "required": [
          "links"
        ],
        "properties": {
          "links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "Rule": {
        "type": "object",
        "required": [
          "clauses",
          "trackEvents"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The flag rule ID"
          },
          "variation": {
            "type": "integer",
            "description": "The index of the variation, from the array of variations for this flag"
          },
          "rollout": {
            "description": "Details on the percentage rollout, if it exists",
            "$ref": "#/components/schemas/Rollout"
          },
          "clauses": {
            "type": "array",
            "description": "An array of clauses used for individual targeting based on attributes",
            "items": {
              "$ref": "#/components/schemas/Clause"
            }
          },
          "trackEvents": {
            "type": "boolean",
            "description": "Whether LaunchDarkly tracks events for this rule"
          },
          "description": {
            "type": "string",
            "description": "The rule description"
          },
          "ref": {
            "type": "string"
          }
        }
      },
      "RuleClause": {
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string",
            "description": "The attribute the rule applies to, for example, last name or email address"
          },
          "op": {
            "type": "string",
            "description": "The operator to apply to the given attribute",
            "enum": [
              "in",
              "endsWith",
              "startsWith",
              "matches",
              "contains",
              "lessThan",
              "lessThanOrEqual",
              "greaterThan",
              "greaterThanOrEqual",
              "before",
              "after",
              "segmentMatch",
              "semVerEqual",
              "semVerLessThan",
              "semVerGreaterThan"
            ]
          },
          "negate": {
            "type": "boolean",
            "description": "Whether the operator should be negated"
          }
        }
      },
      "ScheduleKind": {
        "type": "string"
      },
      "SdkListRep": {
        "type": "object",
        "required": [
          "_links",
          "sdks"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "sdks": {
            "type": "array",
            "description": "The list of SDK names",
            "items": {
              "type": "string"
            },
            "example": [
              "Android",
              "Java",
              "Node.js"
            ]
          }
        }
      },
      "SdkVersionListRep": {
        "type": "object",
        "required": [
          "_links",
          "sdkVersions"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "sdkVersions": {
            "type": "array",
            "description": "The list of SDK names and versions",
            "items": {
              "$ref": "#/components/schemas/SdkVersionRep"
            },
            "example": [
              {
                "sdk": "Android",
                "version": "3.1.2"
              },
              {
                "sdk": "Android",
                "version": "3.1.5"
              },
              {
                "sdk": "C",
                "version": "2.4.6"
              }
            ]
          }
        }
      },
      "SdkVersionRep": {
        "type": "object",
        "required": [
          "sdk",
          "version"
        ],
        "properties": {
          "sdk": {
            "type": "string",
            "description": "The SDK name, or \"Unknown\""
          },
          "version": {
            "type": "string",
            "description": "The version number, or \"Unknown\""
          }
        }
      },
      "SegmentBody": {
        "type": "object",
        "required": [
          "name",
          "key"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the segment",
            "example": "Example segment"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the segment",
            "example": "segment-key-123abc"
          },
          "description": {
            "type": "string",
            "description": "A description of the segment's purpose",
            "example": "Bundle our sample customers together"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the segment",
            "items": {
              "type": "string"
            },
            "example": [
              "testing"
            ]
          },
          "unbounded": {
            "type": "boolean",
            "description": "Whether to create a standard segment (\u003ccode\u003efalse\u003c/code\u003e) or a big segment (\u003ccode\u003etrue\u003c/code\u003e). Standard segments include rule-based and smaller list-based segments. Big segments include larger list-based segments and synced segments. Only use a big segment if you need to add more than 15,000 individual targets.",
            "example": false
          },
          "unboundedContextKind": {
            "type": "string",
            "description": "For big segments, the targeted context kind.",
            "example": "device"
          }
        }
      },
      "SegmentId": {
        "type": "string"
      },
      "SegmentMetadata": {
        "type": "object",
        "properties": {
          "envId": {
            "type": "string"
          },
          "segmentId": {
            "$ref": "#/components/schemas/SegmentId"
          },
          "version": {
            "type": "integer"
          },
          "includedCount": {
            "type": "integer"
          },
          "excludedCount": {
            "type": "integer"
          },
          "lastModified": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "SegmentTarget": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contextKind": {
            "type": "string"
          }
        }
      },
      "SegmentUserList": {
        "type": "object",
        "properties": {
          "add": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remove": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SegmentUserState": {
        "type": "object",
        "properties": {
          "included": {
            "$ref": "#/components/schemas/SegmentUserList"
          },
          "excluded": {
            "$ref": "#/components/schemas/SegmentUserList"
          }
        }
      },
      "Series": {
        "type": "object",
        "required": [
          "time",
          "value"
        ],
        "properties": {
          "time": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp",
            "example": 1676332800000
          },
          "value": {
            "type": "number",
            "description": "The value for the given timestamp",
            "example": 92
          }
        }
      },
      "SeriesIntervalsRep": {
        "type": "object",
        "required": [
          "series",
          "_links"
        ],
        "properties": {
          "series": {
            "type": "array",
            "description": "An array of timestamps and values for a given meter",
            "items": {
              "$ref": "#/components/schemas/Series"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          }
        }
      },
      "SeriesListRep": {
        "type": "object",
        "required": [
          "_links",
          "metadata",
          "series"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {},
            "description": "The location and content type of related resources"
          },
          "metadata": {
            "type": "array",
            "description": "Metadata about each series",
            "items": {
              "$ref": "#/components/schemas/SeriesMetadataRep"
            }
          },
          "series": {
            "type": "array",
            "description": "An array of data points with timestamps. Each element of the array is an object with a 'time' field, whose value is the timestamp, and one or more key fields. If there are multiple key fields, they are labeled '0', '1', and so on, and are explained in the \u003ccode\u003emetadata\u003c/code\u003e.",
            "items": {
              "$ref": "#/components/schemas/SeriesTimeSliceRep"
            },
            "example": [
              {
                "0": 11,
                "1": 15,
                "time": 1677888000000
              }
            ]
          }
        }
      },
      "SeriesMetadataRep": {
        "type": "object",
        "additionalProperties": {}
      },
      "SeriesTimeSliceRep": {
        "type": "object",
        "additionalProperties": {
          "type": "integer"
        }
      },
      "SimpleHoldoutRep": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "experiments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedExperimentRep"
            }
          }
        }
      },
      "SlicedResultsRep": {
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string",
            "description": "An attribute that results are sliced by",
            "example": "country"
          },
          "attributeValue": {
            "type": "string",
            "description": "Attribute Value for 'attribute'",
            "example": "Canada"
          },
          "treatmentResults": {
            "type": "array",
            "description": "A list of the results for each treatment",
            "items": {
              "$ref": "#/components/schemas/TreatmentResultRep"
            }
          }
        }
      },
      "SourceEnv": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the source environment to clone from"
          },
          "version": {
            "type": "integer",
            "description": "(Optional) The version number of the source environment to clone from. Used for optimistic locking"
          }
        }
      },
      "StageInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The stage name",
            "example": "10% rollout on day 1"
          },
          "executeConditionsInSequence": {
            "type": "boolean",
            "description": "Whether to execute the conditions in sequence for the given stage",
            "example": true
          },
          "conditions": {
            "type": "array",
            "description": "An array of conditions for the stage",
            "items": {
              "$ref": "#/components/schemas/ConditionInput"
            },
            "example": [
              {
                "kind": "schedule",
                "scheduleKind": "relative",
                "waitDuration": 2,
                "waitDurationUnit": "calendarDay"
              }
            ]
          },
          "action": {
            "description": "An \u003ccode\u003einstructions\u003c/code\u003e field containing an array of instructions for the stage. Each object in the array uses the semantic patch format for updating a feature flag.",
            "example": "{\"instructions\": [{ \"kind\": \"turnFlagOn\"}]}",
            "$ref": "#/components/schemas/ActionInput"
          }
        }
      },
      "StageOutput": {
        "type": "object",
        "required": [
          "_id",
          "conditions",
          "action",
          "_execution"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of this stage",
            "example": "12ab3c45de678910abc12345"
          },
          "name": {
            "type": "string",
            "description": "The stage name",
            "example": "10% rollout on day 1"
          },
          "conditions": {
            "type": "array",
            "description": "An array of conditions for the stage",
            "items": {
              "$ref": "#/components/schemas/ConditionOutput"
            },
            "example": [
              {
                "_execution": {
                  "status": "completed"
                },
                "id": "12ab3c45de678910abc12345",
                "kind": "schedule",
                "scheduleKind": "relative",
                "waitDuration": 2,
                "waitDurationUnit": "calendarDay"
              }
            ]
          },
          "action": {
            "description": "The type of instruction, and an array of instructions for the stage. Each object in the array uses the semantic patch format for updating a feature flag.",
            "example": "{ \"kind\": \"patch\", \"instructions\": [{ \"kind\": \"turnFlagOn\"}] }",
            "$ref": "#/components/schemas/ActionOutput"
          },
          "_execution": {
            "description": "Details on the execution of this stage",
            "example": "{ \"status\": \"completed\" }",
            "$ref": "#/components/schemas/ExecutionOutput"
          }
        }
      },
      "Statement": {
        "type": "object",
        "required": [
          "effect"
        ],
        "properties": {
          "resources": {
            "type": "array",
            "description": "Resource specifier strings",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/*:env/*;qa_*:/flag/*"
            ]
          },
          "notResources": {
            "type": "array",
            "description": "Targeted resources are the resources NOT in this list. The \u003ccode\u003eresources\u003c/code\u003e and \u003ccode\u003enotActions\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "type": "string"
            }
          },
          "actions": {
            "type": "array",
            "description": "Actions to perform on a resource",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "example": [
              "*"
            ]
          },
          "notActions": {
            "type": "array",
            "description": "Targeted actions are the actions NOT in this list. The \u003ccode\u003eactions\u003c/code\u003e and \u003ccode\u003enotResources\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            }
          },
          "effect": {
            "type": "string",
            "description": "Whether this statement should allow or deny actions on the resources.",
            "example": "allow",
            "enum": [
              "allow",
              "deny"
            ]
          }
        }
      },
      "StatementPost": {
        "type": "object",
        "required": [
          "effect"
        ],
        "properties": {
          "resources": {
            "type": "array",
            "description": "Resource specifier strings",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/*:env/*:flag/*;testing-tag"
            ]
          },
          "notResources": {
            "type": "array",
            "description": "Targeted resources are the resources NOT in this list. The \u003ccode\u003eresources\u003c/code\u003e field must be empty to use this field.",
            "items": {
              "type": "string"
            }
          },
          "actions": {
            "type": "array",
            "description": "Actions to perform on a resource",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "example": [
              "*"
            ]
          },
          "notActions": {
            "type": "array",
            "description": "Targeted actions are the actions NOT in this list. The \u003ccode\u003eactions\u003c/code\u003e field must be empty to use this field.",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            }
          },
          "effect": {
            "type": "string",
            "description": "Whether this statement should allow or deny actions on the resources.",
            "example": "allow",
            "enum": [
              "allow",
              "deny"
            ]
          }
        }
      },
      "StatementPostList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StatementPost"
        }
      },
      "StatisticCollectionRep": {
        "type": "object",
        "required": [
          "flags",
          "_links"
        ],
        "properties": {
          "flags": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatisticRep"
              }
            },
            "description": "A map of flag keys to a list of code reference statistics for each code repository in which the flag key appears"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "StatisticRep": {
        "type": "object",
        "required": [
          "name",
          "type",
          "sourceLink",
          "defaultBranch",
          "enabled",
          "version",
          "hunkCount",
          "fileCount",
          "_links"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The repository name",
            "example": "LaunchDarkly-Docs"
          },
          "type": {
            "type": "string",
            "description": "The type of repository",
            "example": "github",
            "enum": [
              "bitbucket",
              "custom",
              "github",
              "gitlab"
            ]
          },
          "sourceLink": {
            "type": "string",
            "description": "A URL to access the repository",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs"
          },
          "defaultBranch": {
            "type": "string",
            "description": "The repository's default branch",
            "example": "main"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether or not a repository is enabled for code reference scanning",
            "example": true
          },
          "version": {
            "type": "integer",
            "description": "The version of the repository's saved information",
            "example": 3
          },
          "hunkCount": {
            "type": "integer",
            "description": "The number of code reference hunks in which the flag appears in this repository"
          },
          "fileCount": {
            "type": "integer",
            "description": "The number of files in which the flag appears in this repository"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "latestCommitTime": {
            "description": "The timestamp of the latest commit in the repository including the flag",
            "example": "1636558831870",
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "StatisticsRoot": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "description": "The location and content type of all projects that have code references",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "example": [
              {
                "href": "/api/v2/code-refs/statistics/example-project-with-code-refs",
                "type": "application/json"
              }
            ]
          },
          "self": {
            "description": "The location and content type for accessing this resource",
            "example": "{\"href\": \"/api/v2/code-refs/statistics\", \"type\": \"application/json\"}",
            "$ref": "#/components/schemas/Link"
          }
        }
      },
      "StatusConflictErrorRep": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "optimistic_locking_error"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Conflict. Optimistic lock error. Try again later."
          }
        }
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "integrationId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          },
          "timestamp": {
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "StatusServiceUnavailable": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "service_unavailable"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Requested service unavailable"
          }
        }
      },
      "StoreIntegrationError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "SubjectDataRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "The subject's name"
          },
          "avatarUrl": {
            "type": "string",
            "description": "The subject's avatar"
          }
        }
      },
      "Target": {
        "type": "object",
        "required": [
          "values",
          "variation"
        ],
        "properties": {
          "values": {
            "type": "array",
            "description": "A list of the keys for targets that will receive this variation because of individual targeting",
            "items": {
              "type": "string"
            }
          },
          "variation": {
            "type": "integer",
            "description": "The index, from the array of variations for this flag, of the variation to serve this list of targets"
          },
          "contextKind": {
            "type": "string",
            "description": "The context kind of the individual target"
          }
        }
      },
      "TargetResourceRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the resource",
            "example": "Example flag name"
          },
          "resources": {
            "type": "array",
            "description": "The resource specifier",
            "items": {
              "type": "string"
            },
            "example": [
              "proj/example-project:env/production:flag/example-flag"
            ]
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A description of the team",
            "example": "Description for this team."
          },
          "key": {
            "type": "string",
            "description": "The team key",
            "example": "team-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the team",
            "example": "Example team"
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this team",
            "$ref": "#/components/schemas/Access"
          },
          "_creationDate": {
            "description": "Timestamp of when the team was created",
            "example": "1648671956143",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/teams",
                "type": "application/json"
              },
              "roles": {
                "href": "/api/v2/teams/example-team/roles",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/teams/example-team",
                "type": "application/json"
              }
            }
          },
          "_lastModified": {
            "description": "Timestamp of when the team was most recently updated",
            "example": "1648672446072",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_version": {
            "type": "integer",
            "description": "The team version",
            "example": 3
          },
          "_idpSynced": {
            "type": "boolean",
            "description": "Whether the team has been synced with an external identity provider (IdP). Team sync is available to customers on an Enterprise plan.",
            "example": true
          },
          "roleAttributes": {
            "description": "A map of role attributes for the team",
            "example": "{\"developerProjectKey\": [\"default\"]}",
            "$ref": "#/components/schemas/RoleAttributeMap"
          },
          "roles": {
            "description": "Paginated list of the custom roles assigned to this team. Only included if specified in the \u003ccode\u003eexpand\u003c/code\u003e query parameter.",
            "$ref": "#/components/schemas/TeamCustomRoles"
          },
          "members": {
            "description": "Details on the total count of members that belong to the team. Only included if specified in the \u003ccode\u003eexpand\u003c/code\u003e query parameter.",
            "$ref": "#/components/schemas/TeamMembers"
          },
          "projects": {
            "description": "Paginated list of the projects that the team has any write access to. Only included if specified in the \u003ccode\u003eexpand\u003c/code\u003e query parameter.",
            "$ref": "#/components/schemas/TeamProjects"
          },
          "maintainers": {
            "description": "Paginated list of the maintainers assigned to this team. Only included if specified in the \u003ccode\u003eexpand\u003c/code\u003e query parameter.",
            "$ref": "#/components/schemas/TeamMaintainers"
          }
        }
      },
      "TeamCustomRole": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the custom role",
            "example": "role-key-123abc"
          },
          "name": {
            "type": "string",
            "description": "The name of the custom role",
            "example": "Example role"
          },
          "projects": {
            "description": "Details on the projects where team members have write privileges on at least one resource type (e.g. flags)",
            "$ref": "#/components/schemas/TeamProjects"
          },
          "appliedOn": {
            "description": "Timestamp of when the custom role was assigned to this team",
            "example": "1648672018410",
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "TeamCustomRoles": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The number of custom roles assigned to this team",
            "example": 1
          },
          "items": {
            "type": "array",
            "description": "An array of the custom roles that have been assigned to this team",
            "items": {
              "$ref": "#/components/schemas/TeamCustomRole"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/teams/example-team/roles?limit=25",
                "type": "application/json"
              }
            }
          }
        }
      },
      "TeamImportsRep": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of details about the members requested to be added to this team",
            "items": {
              "$ref": "#/components/schemas/MemberImportItem"
            }
          }
        }
      },
      "TeamMaintainers": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The number of maintainers of the team",
            "example": 1
          },
          "items": {
            "type": "array",
            "description": "Details on the members that have been assigned as maintainers of the team",
            "items": {
              "$ref": "#/components/schemas/MemberSummary"
            },
            "example": [
              {
                "_id": "569f183514f4432160000007",
                "_links": {
                  "self": {
                    "href": "/api/v2/members/569f183514f4432160000007",
                    "type": "application/json"
                  }
                },
                "email": "ariel@acme.com",
                "firstName": "Ariel",
                "lastName": "Flores",
                "role": "reader"
              }
            ]
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/teams/example-team/maintainers?limit=5",
                "type": "application/json"
              }
            }
          }
        }
      },
      "TeamMembers": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total count of members that belong to the team",
            "example": 15
          }
        }
      },
      "TeamProjects": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "example": 1
          },
          "items": {
            "type": "array",
            "description": "Details on each project where team members have write privileges on at least one resource type (e.g. flags)",
            "items": {
              "$ref": "#/components/schemas/ProjectSummary"
            },
            "example": [
              {
                "_links": {
                  "environments": {
                    "href": "/api/v2/projects/example-project/environments",
                    "type": "application/json"
                  },
                  "self": {
                    "href": "/api/v2/projects/example-project",
                    "type": "application/json"
                  }
                },
                "key": "project-key-123abc",
                "name": "Example project"
              }
            ]
          }
        }
      },
      "Teams": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of teams",
            "items": {
              "$ref": "#/components/schemas/Team"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/teams?expand=maintainers%2Cmembers%2Croles%2Cprojects\u0026limit=20",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of teams",
            "example": 1
          }
        }
      },
      "TimestampRep": {
        "type": "object",
        "properties": {
          "milliseconds": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "seconds": {
            "type": "integer",
            "format": "int64"
          },
          "rfc3339": {
            "type": "string"
          },
          "simple": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "object",
        "required": [
          "_id",
          "ownerId",
          "memberId",
          "creationDate",
          "lastModified",
          "_links"
        ],
        "properties": {
          "_id": {
            "description": "The ID of the access token",
            "example": "61095542756dba551110ae21",
            "$ref": "#/components/schemas/ObjectId"
          },
          "ownerId": {
            "description": "The ID of the owner of the account for the access token",
            "example": "569f514156e003339cfd3917",
            "$ref": "#/components/schemas/ObjectId"
          },
          "memberId": {
            "description": "The ID of the member who created the access token",
            "example": "569f514183f2164430000002",
            "$ref": "#/components/schemas/ObjectId"
          },
          "_member": {
            "description": "Details on the member who created the access token",
            "$ref": "#/components/schemas/MemberSummary"
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the access token",
            "example": "Example reader token"
          },
          "description": {
            "type": "string",
            "description": "A description for the access token",
            "example": "A reader token used in testing and examples"
          },
          "creationDate": {
            "description": "Timestamp of when the access token was created",
            "example": "1628001602644",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "lastModified": {
            "description": "Timestamp of the last modification of the access token",
            "example": "1628001602644",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "customRoleIds": {
            "type": "array",
            "description": "A list of custom role IDs to use as access limits for the access token",
            "items": {
              "$ref": "#/components/schemas/ObjectId"
            },
            "example": []
          },
          "inlineRole": {
            "type": "array",
            "description": "An array of policy statements, with three attributes: effect, resources, actions. May be used in place of a built-in or custom role.",
            "items": {
              "$ref": "#/components/schemas/Statement"
            },
            "example": []
          },
          "role": {
            "type": "string",
            "description": "Built-in role for the token",
            "example": "reader"
          },
          "token": {
            "type": "string",
            "description": "The token value. When creating or resetting, contains the entire token value. Otherwise, contains the last four characters.",
            "example": "1234"
          },
          "serviceToken": {
            "type": "boolean",
            "description": "Whether this is a service token or a personal token",
            "example": false
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/tokens",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/tokens/61095542756dba551110ae21",
                "type": "application/json"
              }
            }
          },
          "defaultApiVersion": {
            "type": "integer",
            "description": "The default API version for this token",
            "example": 20220603
          },
          "lastUsed": {
            "description": "Timestamp of when the access token was last used",
            "example": "0",
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "TokenSummary": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The name of the token",
            "example": "DevOps token"
          },
          "ending": {
            "type": "string",
            "description": "The last few characters of the token",
            "example": "2345"
          },
          "serviceToken": {
            "type": "boolean",
            "description": "Whether this is a service token",
            "example": false
          }
        }
      },
      "Tokens": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of access tokens",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The number of access tokens returned"
          }
        }
      },
      "TreatmentInput": {
        "type": "object",
        "required": [
          "name",
          "baseline",
          "allocationPercent",
          "parameters"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The treatment name",
            "example": "Treatment 1"
          },
          "baseline": {
            "type": "boolean",
            "description": "Whether this treatment is the baseline to compare other treatments against",
            "example": true
          },
          "allocationPercent": {
            "type": "string",
            "description": "The percentage of traffic allocated to this treatment during the iteration",
            "example": "10"
          },
          "parameters": {
            "type": "array",
            "description": "Details on the flag and variation to use for this treatment",
            "items": {
              "$ref": "#/components/schemas/TreatmentParameterInput"
            }
          }
        }
      },
      "TreatmentParameterInput": {
        "type": "object",
        "required": [
          "flagKey",
          "variationId"
        ],
        "properties": {
          "flagKey": {
            "type": "string",
            "description": "The flag key",
            "example": "example-flag-for-experiment"
          },
          "variationId": {
            "type": "string",
            "description": "The ID of the flag variation",
            "example": "e432f62b-55f6-49dd-a02f-eb24acf39d05"
          }
        }
      },
      "TreatmentRep": {
        "type": "object",
        "required": [
          "name",
          "allocationPercent"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The treatment ID. This is the variation ID from the flag.",
            "example": "122c9f3e-da26-4321-ba68-e0fc02eced58"
          },
          "name": {
            "type": "string",
            "description": "The treatment name. This is the variation name from the flag.",
            "example": "Treatment 1"
          },
          "allocationPercent": {
            "type": "string",
            "description": "The percentage of traffic allocated to this treatment during the iteration",
            "example": "10"
          },
          "baseline": {
            "type": "boolean",
            "description": "Whether this treatment is the baseline to compare other treatments against",
            "example": true
          },
          "parameters": {
            "type": "array",
            "description": "Details on the flag and variation used for this treatment",
            "items": {
              "$ref": "#/components/schemas/ParameterRep"
            }
          }
        }
      },
      "TreatmentResultRep": {
        "type": "object",
        "properties": {
          "treatmentId": {
            "type": "string",
            "description": "The ID of the treatment",
            "example": "92b8354e-360e-4d67-8f13-fa6a46ca8077"
          },
          "treatmentName": {
            "type": "string",
            "description": "The name of the treatment",
            "example": "variation 25% off"
          },
          "mean": {
            "type": "number",
            "description": "The average value of the variation in this sample. It doesn’t capture the uncertainty in the measurement, so it should not be the only measurement you use to make decisions.",
            "example": 0.5432525951557093
          },
          "dataMean": {
            "type": "number",
            "description": "The mean of the data, with no priors effecting the result.",
            "example": 2.464845
          },
          "dataStdDev": {
            "type": "number",
            "description": "The standard deviation of the data, with no priors effecting the result.",
            "example": 1e-7
          },
          "credibleInterval": {
            "description": "The range of the metric's values that you should have 90% confidence in.",
            "example": "{\"lower\": 0.4060771673663068, \"upper\": 0.6713222134386467}",
            "$ref": "#/components/schemas/CredibleIntervalRep"
          },
          "pBest": {
            "type": "number",
            "description": "The likelihood that this variation has the biggest effect on the primary metric. The variation with the highest probability is likely the best of the variations you're testing",
            "example": 0.6083
          },
          "relativeDifferences": {
            "type": "array",
            "description": "Estimates of the relative difference between this treatment's mean and the mean of each other treatment",
            "items": {
              "$ref": "#/components/schemas/RelativeDifferenceRep"
            },
            "example": [
              {
                "fromTreatmentId": "92b8354e-360e-4d67-8f13-fa6a46ca8077",
                "lower": -0.13708601934659803,
                "upper": 0.42655970355712425
              }
            ]
          },
          "units": {
            "type": "integer",
            "format": "int64",
            "description": "The number of units exposed to this treatment that have event values, including those that are configured to default to 0",
            "example": 76
          },
          "traffic": {
            "type": "integer",
            "format": "int64",
            "description": "The number of units exposed to this treatment.",
            "example": 332
          },
          "eventValuesSum": {
            "type": "number",
            "description": "The sum of the event values for the units exposed to this treatment.",
            "example": 6234
          },
          "distribution": {
            "description": "The posterior distribution of the mean of the metric in this variation.",
            "$ref": "#/components/schemas/Distribution"
          },
          "correlation": {
            "type": "number",
            "description": "The outcome-covariate correlation"
          },
          "standardDeviationRatio": {
            "type": "number",
            "description": "The ratio of the outcome SD to covariate SD"
          },
          "covariateImbalance": {
            "type": "number",
            "description": "The imbalance between the covariate mean for the arm and the covariate mean for the experiment"
          },
          "varianceReduction": {
            "type": "number",
            "description": "The reduction in variance resulting from CUPED",
            "example": 0.1
          },
          "model": {
            "type": "string",
            "description": "The model used to calculate the results. Parameters specific to this model will be defined under the field under the same name",
            "example": "bayesianNormal",
            "enum": [
              "bayesianNormal",
              "bayesianBeta"
            ]
          },
          "bayesianNormal": {
            "description": "The statistical parameters relevant to the Bayesian Normal model",
            "$ref": "#/components/schemas/BayesianNormalStatsRep"
          },
          "bayesianBeta": {
            "description": "The statistical parameters relevant to the Bayesian Beta-Binomial model",
            "$ref": "#/components/schemas/BayesianBetaBinomialStatsRep"
          }
        }
      },
      "TreatmentsInput": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TreatmentInput"
        }
      },
      "TriggerWorkflowCollectionRep": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of flag triggers",
            "items": {
              "$ref": "#/components/schemas/TriggerWorkflowRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "TriggerWorkflowRep": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "The ID of this flag trigger",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/components/schemas/FeatureWorkflowId"
          },
          "_version": {
            "type": "integer",
            "description": "The flag trigger version",
            "example": 1
          },
          "_creationDate": {
            "description": "Timestamp of when the flag trigger was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_maintainerId": {
            "type": "string",
            "description": "The ID of the flag trigger maintainer",
            "example": "12ab3c45de678910abc12345"
          },
          "_maintainer": {
            "description": "Details on the member who maintains this flag trigger",
            "$ref": "#/components/schemas/MemberSummary"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the flag trigger is currently enabled",
            "example": true
          },
          "_integrationKey": {
            "type": "string",
            "description": "The unique identifier of the integration for your trigger",
            "example": "generic-trigger"
          },
          "instructions": {
            "description": "Details on the action to perform when triggering",
            "example": "[ { \"kind\": \"turnFlagOn\" }]",
            "$ref": "#/components/schemas/Instructions"
          },
          "_lastTriggeredAt": {
            "description": "Timestamp of when the trigger was most recently executed",
            "example": "1654114600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_recentTriggerBodies": {
            "type": "array",
            "description": "Details on recent flag trigger requests.",
            "items": {
              "$ref": "#/components/schemas/RecentTriggerBody"
            }
          },
          "_triggerCount": {
            "type": "integer",
            "description": "Number of times the trigger has been executed",
            "example": 3
          },
          "triggerURL": {
            "type": "string",
            "description": "The unguessable URL for this flag trigger"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "UnauthorizedErrorRep": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "unauthorized"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "Invalid access token"
          }
        }
      },
      "UnixMillis": {
        "type": "integer",
        "format": "int64"
      },
      "UpdatePhaseStatusInput": {
        "type": "object",
        "properties": {
          "status": {
            "description": "Status of the phase",
            "example": "Started",
            "enum": [
              "NotStarted",
              "ReadyToStart",
              "Started",
              "Paused",
              "Complete"
            ],
            "$ref": "#/components/schemas/PhaseStatus"
          },
          "audiences": {
            "type": "array",
            "description": "Extra configuration for audiences required upon phase initialization.",
            "items": {
              "$ref": "#/components/schemas/ReleaserAudienceConfigInput"
            }
          }
        }
      },
      "UpdateReleasePipelineInput": {
        "type": "object",
        "required": [
          "name",
          "phases"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "The release pipeline description",
            "example": "Standard pipeline to roll out to production"
          },
          "name": {
            "type": "string",
            "description": "The name of the release pipeline",
            "example": "Standard Pipeline"
          },
          "phases": {
            "type": "array",
            "description": "A logical grouping of one or more environments that share attributes for rolling out changes",
            "items": {
              "$ref": "#/components/schemas/CreatePhaseInput"
            }
          },
          "tags": {
            "type": "array",
            "description": "A list of tags for this release pipeline",
            "items": {
              "type": "string"
            },
            "example": [
              "example-tag"
            ]
          }
        }
      },
      "UpsertContextKindPayload": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The context kind name",
            "example": "organization"
          },
          "description": {
            "type": "string",
            "description": "The context kind description",
            "example": "An example context kind for organizations"
          },
          "hideInTargeting": {
            "type": "boolean",
            "description": "Alias for archived.",
            "example": false
          },
          "archived": {
            "type": "boolean",
            "description": "Whether the context kind is archived. Archived context kinds are unavailable for targeting.",
            "example": false
          },
          "version": {
            "type": "integer",
            "description": "The context kind version. If not specified when the context kind is created, defaults to 1.",
            "example": 1
          }
        }
      },
      "UpsertFlagDefaultsPayload": {
        "type": "object",
        "required": [
          "tags",
          "temporary",
          "booleanDefaults",
          "defaultClientSideAvailability"
        ],
        "properties": {
          "tags": {
            "type": "array",
            "description": "A list of default tags for each flag",
            "items": {
              "type": "string"
            },
            "example": [
              "tag-1",
              "tag-2"
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag should be temporary by default",
            "example": true
          },
          "booleanDefaults": {
            "$ref": "#/components/schemas/BooleanFlagDefaults"
          },
          "defaultClientSideAvailability": {
            "description": "Which client-side SDK types can use this flag by default.",
            "$ref": "#/components/schemas/DefaultClientSideAvailability"
          }
        }
      },
      "UpsertResponseRep": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the create or update operation",
            "example": "success"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "UrlMatcher": {
        "type": "object",
        "additionalProperties": {}
      },
      "UrlMatchers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UrlMatcher"
        }
      },
      "UrlPost": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "exact",
              "canonical",
              "substring",
              "regex"
            ]
          },
          "url": {
            "type": "string"
          },
          "substring": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The user key. This is the only mandatory user attribute.",
            "example": "user-key-123abc"
          },
          "secondary": {
            "type": "string",
            "description": "If provided, used with the user key to generate a variation in percentage rollouts",
            "example": "2398127"
          },
          "ip": {
            "type": "string",
            "description": "The user's IP address",
            "example": "10.10.10.10"
          },
          "country": {
            "type": "string",
            "description": "The user's country",
            "example": "United States"
          },
          "email": {
            "type": "string",
            "description": "The user's email",
            "example": "sandy@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name",
            "example": "Sandy"
          },
          "lastName": {
            "type": "string",
            "description": "The user's last name",
            "example": "Smith"
          },
          "avatar": {
            "type": "string",
            "description": "An absolute URL to an avatar image.",
            "example": "http://example.com/avatar.png"
          },
          "name": {
            "type": "string",
            "description": "The user's full name",
            "example": "Sandy Smith"
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether the user is anonymous. If true, this user does not appear on the Contexts list in the LaunchDarkly user interface.",
            "example": false
          },
          "custom": {
            "type": "object",
            "additionalProperties": {},
            "description": "Any other custom attributes for this user. Custom attributes contain any other user data that you would like to use to conditionally target your users."
          },
          "privateAttrs": {
            "type": "array",
            "description": "A list of attribute names that are marked as private. You can use these attributes in targeting rules and segments. If you are using a server-side SDK, the SDK will not send the private attribute back to LaunchDarkly. If you are using a client-side SDK, the SDK will send the private attribute back to LaunchDarkly for evaluation. However, the SDK won't send the attribute to LaunchDarkly in events data, LaunchDarkly won't store the private attribute, and the private attribute will not appear on the Contexts list.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserAttributeNamesRep": {
        "type": "object",
        "properties": {
          "private": {
            "type": "array",
            "description": "private attributes",
            "items": {
              "type": "string"
            },
            "example": [
              "SSN",
              "credit_card_number"
            ]
          },
          "custom": {
            "type": "array",
            "description": "custom attributes",
            "items": {
              "type": "string"
            },
            "example": [
              "Age",
              "FavoriteFood",
              "FavoriteColor"
            ]
          },
          "standard": {
            "type": "array",
            "description": "standard attributes",
            "items": {
              "type": "string"
            },
            "example": [
              "key",
              "ip",
              "firstName",
              "lastName",
              "country",
              "anonymous"
            ]
          }
        }
      },
      "UserFlagSetting": {
        "type": "object",
        "required": [
          "_links",
          "_value",
          "setting"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources.",
            "example": {
              "sort.order": {
                "href": "/api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order",
                "type": "application/json"
              }
            }
          },
          "_value": {
            "description": "The value of the flag variation that the user receives. If there is no defined default rule, this is null.",
            "example": "true"
          },
          "setting": {
            "description": "Whether the user is explicitly targeted to receive a particular variation. The setting is false if you have turned off a feature flag for a user. It is null if you haven't assigned that user to a specific variation.",
            "example": "null"
          },
          "reason": {
            "description": "Contains information about why that variation was selected.",
            "example": "{\"kind\": \"RULE_MATCH\"}",
            "$ref": "#/components/schemas/EvaluationReason"
          }
        }
      },
      "UserFlagSettings": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/UserFlagSetting"
            },
            "description": "An array of flag settings for the user",
            "example": {
              "alternate.page": {
                "_links": {
                  "self": {
                    "href": "/api/v2/users/lacuna/production/Abbie_Braun/flags/alternate.page",
                    "type": "application/json"
                  }
                },
                "_value": false,
                "setting": null
              },
              "sort.order": {
                "_links": {
                  "self": {
                    "href": "/api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order",
                    "type": "application/json"
                  }
                },
                "_value": true,
                "setting": null
              }
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "self": {
                "href": "/api/v2/users/lacuna/production/Abbie_Braun/flags",
                "type": "application/json"
              }
            }
          }
        }
      },
      "UserRecord": {
        "type": "object",
        "properties": {
          "lastPing": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last time this user was seen",
            "example": "2022-06-28T23:21:29.176609596Z"
          },
          "environmentId": {
            "description": "The environment ID",
            "example": "1234a56b7c89d012345e678f",
            "$ref": "#/components/schemas/ObjectId"
          },
          "ownerId": {
            "description": "The ID of the member who is the owner for this account",
            "example": "12ab3c45de678910abc12345",
            "$ref": "#/components/schemas/ObjectId"
          },
          "user": {
            "description": "Details on the user",
            "$ref": "#/components/schemas/User"
          },
          "sortValue": {
            "description": "If this record is returned as part of a list, the value used to sort the list. This is only included when the \u003ccode\u003esort\u003c/code\u003e query parameter is specified. It is a time, in Unix milliseconds, if the sort is by \u003ccode\u003elastSeen\u003c/code\u003e. It is a user key if the sort is by \u003ccode\u003euserKey\u003c/code\u003e.",
            "example": "user-key-123abc"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "parent": {
                "href": "/api/v2/users/my-project/my-environment",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/users/my-project/my-environment/my-user",
                "type": "application/json"
              },
              "settings": {
                "href": "/api/v2/users/my-project/my-environment/my-user/flags",
                "type": "text/html"
              },
              "site": {
                "href": "/my-project/my-environment/users/my-user",
                "type": "text/html"
              }
            }
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this user",
            "$ref": "#/components/schemas/Access"
          }
        }
      },
      "UserSegment": {
        "type": "object",
        "required": [
          "name",
          "tags",
          "creationDate",
          "lastModifiedDate",
          "key",
          "_links",
          "rules",
          "version",
          "deleted",
          "generation"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for the segment.",
            "example": "Example segment"
          },
          "description": {
            "type": "string",
            "description": "A description of the segment's purpose. Defaults to \u003ccode\u003enull\u003c/code\u003e and is omitted in the response if not provided.",
            "example": "Bundle our sample customers together"
          },
          "tags": {
            "type": "array",
            "description": "Tags for the segment. Defaults to an empty array.",
            "items": {
              "type": "string"
            },
            "example": [
              "testing"
            ]
          },
          "creationDate": {
            "description": "Timestamp of when the segment was created",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "lastModifiedDate": {
            "description": "Timestamp of when the segment was last modified",
            "example": "1654104600000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "key": {
            "type": "string",
            "description": "A unique key used to reference the segment",
            "example": "segment-key-123abc"
          },
          "included": {
            "type": "array",
            "description": "An array of keys for included targets. Included individual targets are always segment members, regardless of segment rules. For list-based segments over 15,000 entries, also called big segments, this array is either empty or omitted.",
            "items": {
              "type": "string"
            },
            "example": [
              "user-key-123abc"
            ]
          },
          "excluded": {
            "type": "array",
            "description": "An array of keys for excluded targets. Segment rules bypass individual excluded targets, so they will never be included based on rules. Excluded targets may still be included explicitly. This value is omitted for list-based segments over 15,000 entries, also called big segments.",
            "items": {
              "type": "string"
            },
            "example": [
              "user-key-123abc"
            ]
          },
          "includedContexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SegmentTarget"
            }
          },
          "excludedContexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SegmentTarget"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "rules": {
            "type": "array",
            "description": "An array of the targeting rules for this segment.",
            "items": {
              "$ref": "#/components/schemas/UserSegmentRule"
            },
            "example": [
              {
                "_id": "1234a56b7c89d012345e678f",
                "clauses": [
                  {
                    "_id": "12ab3c45de678910fab12345",
                    "attribute": "email",
                    "negate": false,
                    "op": "endsWith",
                    "values": [
                      ".edu"
                    ]
                  }
                ]
              }
            ]
          },
          "version": {
            "type": "integer",
            "description": "Version of the segment",
            "example": 1
          },
          "deleted": {
            "type": "boolean",
            "description": "Whether the segment has been deleted",
            "example": false
          },
          "_access": {
            "$ref": "#/components/schemas/Access"
          },
          "_flags": {
            "type": "array",
            "description": "A list of flags targeting this segment. Only included when getting a single segment, using the \u003ccode\u003egetSegment\u003c/code\u003e endpoint.",
            "items": {
              "$ref": "#/components/schemas/FlagListingRep"
            }
          },
          "unbounded": {
            "type": "boolean",
            "description": "Whether this is a standard segment (\u003ccode\u003efalse\u003c/code\u003e) or a big segment (\u003ccode\u003etrue\u003c/code\u003e). Standard segments include rule-based segments and smaller list-based segments. Big segments include larger list-based segments and synced segments. If omitted, the segment is a standard segment.",
            "example": false
          },
          "unboundedContextKind": {
            "type": "string",
            "description": "For big segments, the targeted context kind."
          },
          "generation": {
            "type": "integer",
            "description": "For big segments, how many times this segment has been created."
          },
          "_unboundedMetadata": {
            "description": "Details on the external data store backing this segment. Only applies to big segments.",
            "$ref": "#/components/schemas/SegmentMetadata"
          },
          "_external": {
            "type": "string",
            "description": "The external data store backing this segment. Only applies to synced segments.",
            "example": "amplitude"
          },
          "_externalLink": {
            "type": "string",
            "description": "The URL for the external data store backing this segment. Only applies to synced segments.",
            "example": "https://analytics.amplitude.com/org/1234/cohort/123abc"
          },
          "_importInProgress": {
            "type": "boolean",
            "description": "Whether an import is currently in progress for the specified segment. Only applies to big segments.",
            "example": false
          }
        }
      },
      "UserSegmentRule": {
        "type": "object",
        "required": [
          "clauses"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "clauses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Clause"
            }
          },
          "weight": {
            "type": "integer"
          },
          "rolloutContextKind": {
            "type": "string"
          },
          "bucketBy": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "UserSegments": {
        "type": "object",
        "required": [
          "items",
          "_links"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "An array of segments",
            "items": {
              "$ref": "#/components/schemas/UserSegment"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of segments"
          }
        }
      },
      "Users": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/api/v2/user-search/my-project/my-environment?after=1647993600000\u0026limit=20\u0026searchAfter=my-user\u0026sort=userKey",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/user-search/my-project/my-environment?after=1647993600000\u0026limit=20\u0026sort=userKey",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of users in the environment",
            "example": 245
          },
          "items": {
            "type": "array",
            "description": "Details on the users",
            "items": {
              "$ref": "#/components/schemas/UserRecord"
            }
          }
        }
      },
      "UsersRep": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/api/v2/users/my-project/my-environment?after=1647993600000\u0026limit=20\u0026searchAfter=my-user",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/users/my-project/my-environment?after=1647993600000\u0026limit=20",
                "type": "application/json"
              }
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of users in the environment",
            "example": 245
          },
          "items": {
            "type": "array",
            "description": "Details on the users",
            "items": {
              "$ref": "#/components/schemas/UserRecord"
            }
          }
        }
      },
      "ValuePut": {
        "type": "object",
        "properties": {
          "setting": {
            "description": "The variation value to set for the context. Must match the flag's variation type.",
            "example": "existing_variation_value_to_use"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment describing the change",
            "example": "make sure this context experiences a specific variation"
          }
        }
      },
      "Variation": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of the variation. Leave empty when you are creating a flag."
          },
          "value": {
            "description": "The value of the variation. For boolean flags, this must be \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e. For multivariate flags, this may be a string, number, or JSON object."
          },
          "description": {
            "type": "string",
            "description": "Description of the variation. Defaults to an empty string, but is omitted from the response if not set."
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the variation. Defaults to an empty string, but is omitted from the response if not set."
          }
        }
      },
      "VariationOrRolloutRep": {
        "type": "object",
        "properties": {
          "variation": {
            "type": "integer",
            "description": "The index of the variation, from the array of variations for this flag"
          },
          "rollout": {
            "description": "Details on the percentage rollout, if it exists",
            "$ref": "#/components/schemas/Rollout"
          }
        }
      },
      "VariationSummary": {
        "type": "object",
        "required": [
          "rules",
          "nullRules",
          "targets",
          "contextTargets"
        ],
        "properties": {
          "rules": {
            "type": "integer"
          },
          "nullRules": {
            "type": "integer"
          },
          "targets": {
            "type": "integer"
          },
          "contextTargets": {
            "type": "integer"
          },
          "isFallthrough": {
            "type": "boolean"
          },
          "isOff": {
            "type": "boolean"
          },
          "rollout": {
            "type": "integer"
          },
          "bucketBy": {
            "type": "string"
          }
        }
      },
      "VersionsRep": {
        "type": "object",
        "required": [
          "validVersions",
          "latestVersion",
          "currentVersion"
        ],
        "properties": {
          "validVersions": {
            "type": "array",
            "description": "A list of all valid API versions. To learn more about our versioning, read [Versioning](https://launchdarkly.com/docs/api#versioning).",
            "items": {
              "$ref": "#/components/schemas/DateVersion"
            }
          },
          "latestVersion": {
            "description": "The most recently released version of the API",
            "example": "20220603",
            "$ref": "#/components/schemas/DateVersion"
          },
          "currentVersion": {
            "description": "The version of the API currently in use. Typically this is the API version specified for your access token. If you add the \u003ccode\u003eLD-API-Version: beta\u003c/code\u003e header to your request, this will be equal to the \u003ccode\u003elatestVersion\u003c/code\u003e.",
            "example": "20220603",
            "$ref": "#/components/schemas/DateVersion"
          },
          "beta": {
            "type": "boolean",
            "description": "Whether the version of the API currently is use is a beta version. This is always \u003ccode\u003etrue\u003c/code\u003e if you add the \u003ccode\u003eLD-API-Version: beta\u003c/code\u003e header to your request.",
            "example": false
          }
        }
      },
      "Webhook": {
        "type": "object",
        "required": [
          "_links",
          "_id",
          "url",
          "on",
          "tags"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "_id": {
            "type": "string",
            "description": "The ID of this webhook",
            "example": "57be1db38b75bf0772d11384"
          },
          "name": {
            "type": "string",
            "description": "A human-readable name for this webhook",
            "example": "Example hook"
          },
          "url": {
            "type": "string",
            "description": "The URL to which LaunchDarkly sends an HTTP POST payload for this webhook",
            "example": "http://www.example.com"
          },
          "secret": {
            "type": "string",
            "description": "The secret for this webhook",
            "example": "frobozz"
          },
          "statements": {
            "type": "array",
            "description": "Represents a Custom role policy, defining a resource kinds filter the webhook responds to.",
            "items": {
              "$ref": "#/components/schemas/Statement"
            }
          },
          "on": {
            "type": "boolean",
            "description": "Whether or not this webhook is enabled",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "List of tags for this webhook",
            "items": {
              "type": "string"
            },
            "example": [
              "examples"
            ]
          },
          "_access": {
            "description": "Details on the allowed and denied actions for this webhook",
            "$ref": "#/components/schemas/Access"
          }
        }
      },
      "Webhooks": {
        "type": "object",
        "required": [
          "_links",
          "items"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "items": {
            "type": "array",
            "description": "An array of webhooks",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            }
          }
        }
      },
      "WeightedVariation": {
        "type": "object",
        "required": [
          "variation",
          "weight"
        ],
        "properties": {
          "variation": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          },
          "_untracked": {
            "type": "boolean"
          }
        }
      },
      "WorkflowTemplateMetadata": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowTemplateParameter"
            }
          }
        }
      },
      "WorkflowTemplateOutput": {
        "type": "object",
        "required": [
          "_id",
          "_key",
          "_creationDate",
          "_ownerId",
          "_maintainerId",
          "_links"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "_key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "_creationDate": {
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_ownerId": {
            "type": "string"
          },
          "_maintainerId": {
            "type": "string"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "description": {
            "type": "string"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StageOutput"
            }
          }
        }
      },
      "WorkflowTemplateParameter": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "The ID of the condition or instruction referenced by this parameter",
            "$ref": "#/components/schemas/ObjectId"
          },
          "path": {
            "type": "string",
            "description": "The path of the property to parameterize, relative to its parent condition or instruction"
          },
          "default": {
            "description": "The default value of the parameter and other relevant metadata",
            "$ref": "#/components/schemas/ParameterDefault"
          },
          "valid": {
            "type": "boolean",
            "description": "Whether the default value is valid for the target flag and environment"
          }
        }
      },
      "WorkflowTemplatesListingOutputRep": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowTemplateOutput"
            }
          }
        }
      },
      "createCopyFlagConfigApprovalRequestRequest": {
        "type": "object",
        "required": [
          "description",
          "source"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the approval request",
            "example": "optional comment"
          },
          "description": {
            "type": "string",
            "description": "A brief description of your changes",
            "example": "copy flag settings to another environment"
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "notifyTeamKeys": {
            "type": "array",
            "description": "An array of team keys. The members of these teams are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-reviewer-team"
            ]
          },
          "source": {
            "description": "The flag to copy",
            "$ref": "#/components/schemas/sourceFlag"
          },
          "includedActions": {
            "type": "array",
            "description": "Optional list of the flag changes to copy from the source environment to the target environment. You may include either \u003ccode\u003eincludedActions\u003c/code\u003e or \u003ccode\u003eexcludedActions\u003c/code\u003e, but not both. If neither are included, then all flag changes will be copied.",
            "items": {
              "type": "string",
              "enum": [
                "updateOn",
                "updateFallthrough",
                "updateOffVariation",
                "updateRules",
                "updateTargets",
                "updatePrerequisites"
              ]
            },
            "example": [
              "updateOn"
            ]
          },
          "excludedActions": {
            "type": "array",
            "description": "Optional list of the flag changes NOT to copy from the source environment to the target environment. You may include either \u003ccode\u003eincludedActions\u003c/code\u003e or \u003ccode\u003eexcludedActions\u003c/code\u003e, but not both. If neither are included, then all flag changes will be copied.",
            "items": {
              "type": "string",
              "enum": [
                "updateOn",
                "updateFallthrough",
                "updateOffVariation",
                "updateRules",
                "updateTargets",
                "updatePrerequisites"
              ]
            },
            "example": [
              "updateOn"
            ]
          }
        }
      },
      "createFlagConfigApprovalRequestRequest": {
        "type": "object",
        "required": [
          "description",
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the approval request",
            "example": "optional comment"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the changes you're requesting",
            "example": "Requesting to update targeting"
          },
          "instructions": {
            "description": "List of instructions in semantic patch format to be applied to the feature flag. Review the [Update feature flag](https://launchdarkly.com/docs/ld-docs/api/feature-flags/patch-feature-flag) documentation for details on available instructions.",
            "example": "[{\"kind\": \"addTargets\", \"values\": [ \"context-key-123abc\"], \"variationId\": \"ce67d625-a8b9-4fb5-a344-ab909d9d4f4d\" }]",
            "$ref": "#/components/schemas/Instructions"
          },
          "notifyMemberIds": {
            "type": "array",
            "description": "An array of member IDs. These members are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "1234a56b7c89d012345e678f"
            ]
          },
          "notifyTeamKeys": {
            "type": "array",
            "description": "An array of team keys. The members of these teams are notified to review the approval request.",
            "items": {
              "type": "string"
            },
            "example": [
              "example-reviewer-team"
            ]
          },
          "executionDate": {
            "description": "Timestamp for when instructions will be executed",
            "example": "1653926400000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "operatingOnId": {
            "type": "string",
            "description": "The ID of a scheduled change. Include this if your \u003ccode\u003einstructions\u003c/code\u003e include editing or deleting a scheduled change.",
            "example": "6297ed79dee7dc14e1f9a80c"
          },
          "integrationConfig": {
            "description": "Additional approval request fields for third-party integration approval systems. If you are using a third-party integration to manage approval requests, these additional fields will be described in the \u003ccode\u003emanifest.json\u003c/code\u003e for that integration, at https://github.com/launchdarkly/integration-framework.",
            "$ref": "#/components/schemas/FormVariableConfig"
          }
        }
      },
      "customProperty": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the custom property of this type.",
            "example": "Jira issues"
          },
          "value": {
            "type": "array",
            "description": "An array of values for the custom property data to associate with this flag.",
            "items": {
              "type": "string"
            },
            "example": [
              "is-123",
              "is-456"
            ]
          }
        }
      },
      "flagDefaultsRep": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "key": {
            "type": "string",
            "description": "A unique key for the flag default"
          },
          "tags": {
            "type": "array",
            "description": "A list of default tags for each flag",
            "items": {
              "type": "string"
            },
            "example": [
              "tag-1",
              "tag-2"
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag should be temporary by default",
            "example": true
          },
          "defaultClientSideAvailability": {
            "description": "Which client-side SDK types can use this flag by default. Set \u003ccode\u003eusingMobileKey\u003c/code\u003e to make the flag available for mobile SDKs. Set \u003ccode\u003eusingEnvironmentId\u003c/code\u003e to make the flag available for client-side SDKs.",
            "example": "{\"usingMobileKey\": true, \"usingEnvironmentId\": false}",
            "$ref": "#/components/schemas/ClientSideAvailability"
          },
          "booleanDefaults": {
            "description": "Defaults for boolean flags within this project",
            "$ref": "#/components/schemas/BooleanDefaults"
          }
        }
      },
      "flagLinkPost": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The flag link key",
            "example": "flag-link-key-123abc"
          },
          "integrationKey": {
            "type": "string",
            "description": "The integration key for an integration whose \u003ccode\u003emanifest.json\u003c/code\u003e includes the \u003ccode\u003eflagLink\u003c/code\u003e capability, if this is a flag link for an existing integration. Do not include for URL flag links."
          },
          "timestamp": {
            "description": "The time, in Unix milliseconds, to mark this flag link as associated with the external URL. If omitted, defaults to the creation time of this flag link.",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "deepLink": {
            "type": "string",
            "description": "The URL for the external resource you are linking the flag to",
            "example": "https://example.com/archives/123123123"
          },
          "title": {
            "type": "string",
            "description": "The title of the flag link",
            "example": "Example link title"
          },
          "description": {
            "type": "string",
            "description": "The description of the flag link",
            "example": "Example link description"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The metadata required by this integration in order to create a flag link, if this is a flag link for an existing integration. Defined in the integration's \u003ccode\u003emanifest.json\u003c/code\u003e file under \u003ccode\u003eflagLink\u003c/code\u003e."
          }
        }
      },
      "flagSempatch": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "instructions": {
            "description": "Semantic patch instructions. The same ones that are valid for flags are valid here.",
            "$ref": "#/components/schemas/Instructions"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "followersPerFlag": {
        "type": "object",
        "properties": {
          "flagKey": {
            "type": "string",
            "description": "The flag key",
            "example": "example-flag-key"
          },
          "followers": {
            "type": "array",
            "description": "A list of members who are following this flag",
            "items": {
              "$ref": "#/components/schemas/FollowFlagMember"
            }
          }
        }
      },
      "instructionUserRequest": {
        "type": "object",
        "required": [
          "kind",
          "flagKey",
          "variationId"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of change to make to the removal date for this user from individual targeting for this flag.",
            "example": "addExpireUserTargetDate",
            "enum": [
              "addExpireUserTargetDate",
              "updateExpireUserTargetDate",
              "removeExpireUserTargetDate"
            ]
          },
          "flagKey": {
            "type": "string",
            "description": "The flag key",
            "example": "sample-flag-key"
          },
          "variationId": {
            "type": "string",
            "description": "ID of a variation on the flag",
            "example": "ce12d345-a1b2-4fb5-a123-ab123d4d5f5d"
          },
          "value": {
            "type": "integer",
            "description": "The time, in Unix milliseconds, when LaunchDarkly should remove the user from individual targeting for this flag. Required if \u003ccode\u003ekind\u003c/code\u003e is \u003ccode\u003eaddExpireUserTargetDate\u003c/code\u003e or \u003ccode\u003eupdateExpireUserTargetDate\u003c/code\u003e.",
            "example": 1653469200000
          },
          "version": {
            "type": "integer",
            "description": "The version of the expiring user target to update. Optional and only used if \u003ccode\u003ekind\u003c/code\u003e is \u003ccode\u003eupdateExpireUserTargetDate\u003c/code\u003e. If included, update will fail if version doesn't match current version of the expiring user target.",
            "example": 1
          }
        }
      },
      "ipList": {
        "type": "object",
        "required": [
          "addresses",
          "outboundAddresses"
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "description": "A list of the IP addresses LaunchDarkly's service uses",
            "items": {
              "type": "string"
            },
            "example": [
              "104.156.80.0/20",
              "151.101.0.0/16"
            ]
          },
          "outboundAddresses": {
            "type": "array",
            "description": "A list of the IP addresses outgoing webhook notifications use",
            "items": {
              "type": "string"
            },
            "example": [
              "52.21.152.96/32"
            ]
          }
        }
      },
      "membersPatchInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "Optional comment about the update"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like \u003ccode\u003e{\"kind\": \"update_action\"}\u003c/code\u003e. Some instructions also require additional parameters as part of this object.",
            "example": "[ { \"kind\": \"replaceMemberRoles\", \"value\": \"reader\" } ]",
            "$ref": "#/components/schemas/Instructions"
          }
        }
      },
      "oauthClientPost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of your new LaunchDarkly OAuth 2.0 client."
          },
          "redirectUri": {
            "type": "string",
            "description": "The redirect URI for your new OAuth 2.0 application. This should be an absolute URL conforming with the standard HTTPS protocol."
          },
          "description": {
            "type": "string",
            "description": "Description of your OAuth 2.0 client."
          }
        }
      },
      "patchFlagsRequest": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the change",
            "example": "optional comment"
          },
          "instructions": {
            "type": "array",
            "description": "The instructions to perform when updating",
            "items": {
              "$ref": "#/components/schemas/Instruction"
            },
            "example": [
              {
                "kind": "addExpireUserTargetDate",
                "userKey": "sandy",
                "value": 1686412800000,
                "variationId": "ce12d345-a1b2-4fb5-a123-ab123d4d5f5d"
              }
            ]
          }
        }
      },
      "patchSegmentExpiringTargetInputRep": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional description of changes",
            "example": "optional comment"
          },
          "instructions": {
            "type": "array",
            "description": "Semantic patch instructions for the desired changes to the resource",
            "items": {
              "$ref": "#/components/schemas/patchSegmentExpiringTargetInstruction"
            },
            "example": [
              {
                "contextKey": "user@email.com",
                "contextKind": "user",
                "kind": "updateExpiringTarget",
                "targetType": "included",
                "value": 1587582000000,
                "version": 0
              }
            ]
          }
        }
      },
      "patchSegmentExpiringTargetInstruction": {
        "type": "object",
        "required": [
          "kind",
          "contextKey",
          "contextKind",
          "targetType"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of change to make to the context's removal date from this segment",
            "example": "addExpiringTarget",
            "enum": [
              "addExpiringTarget",
              "updateExpiringTarget",
              "removeExpiringTarget"
            ]
          },
          "contextKey": {
            "type": "string",
            "description": "A unique key used to represent the context"
          },
          "contextKind": {
            "type": "string",
            "description": "The kind of context",
            "example": "user"
          },
          "targetType": {
            "type": "string",
            "description": "The segment's target type",
            "enum": [
              "included",
              "excluded"
            ]
          },
          "value": {
            "type": "integer",
            "format": "int64",
            "description": "The time, in Unix milliseconds, when the context should be removed from this segment. Required if \u003ccode\u003ekind\u003c/code\u003e is \u003ccode\u003eaddExpiringTarget\u003c/code\u003e or \u003ccode\u003eupdateExpiringTarget\u003c/code\u003e.",
            "example": 1653469200000
          },
          "version": {
            "type": "integer",
            "description": "The version of the expiring target to update. Optional and only used if \u003ccode\u003ekind\u003c/code\u003e is \u003ccode\u003eupdateExpiringTarget\u003c/code\u003e. If included, update will fail if version doesn't match current version of the expiring target.",
            "example": 1
          }
        }
      },
      "patchSegmentInstruction": {
        "type": "object",
        "required": [
          "kind",
          "userKey",
          "targetType"
        ],
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of change to make to the user's removal date from this segment",
            "example": "addExpireUserTargetDate",
            "enum": [
              "addExpireUserTargetDate",
              "updateExpireUserTargetDate",
              "removeExpireUserTargetDate"
            ]
          },
          "userKey": {
            "type": "string",
            "description": "A unique key used to represent the user"
          },
          "targetType": {
            "type": "string",
            "description": "The segment's target type",
            "enum": [
              "included",
              "excluded"
            ]
          },
          "value": {
            "type": "integer",
            "description": "The time, in Unix milliseconds, when the user should be removed from this segment. Required if \u003ccode\u003ekind\u003c/code\u003e is \u003ccode\u003eaddExpireUserTargetDate\u003c/code\u003e or \u003ccode\u003eupdateExpireUserTargetDate\u003c/code\u003e.",
            "example": 1653469200000
          },
          "version": {
            "type": "integer",
            "description": "The version of the segment to update. Required if \u003ccode\u003ekind\u003c/code\u003e is \u003ccode\u003eupdateExpireUserTargetDate\u003c/code\u003e.",
            "example": 1
          }
        }
      },
      "patchSegmentRequest": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional description of changes",
            "example": "optional comment"
          },
          "instructions": {
            "type": "array",
            "description": "Semantic patch instructions for the desired changes to the resource",
            "items": {
              "$ref": "#/components/schemas/patchSegmentInstruction"
            },
            "example": [
              {
                "contextKey": "contextKey",
                "contextKind": "user",
                "kind": "updateExpiringTarget",
                "targetType": "included",
                "value": 1587582000000,
                "version": 0
              }
            ]
          }
        }
      },
      "patchUsersRequest": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the change",
            "example": "optional comment"
          },
          "instructions": {
            "type": "array",
            "description": "The instructions to perform when updating",
            "items": {
              "$ref": "#/components/schemas/instructionUserRequest"
            }
          }
        }
      },
      "permissionGrantInput": {
        "type": "object",
        "properties": {
          "actionSet": {
            "type": "string",
            "description": "A group of related actions to allow. Specify either \u003ccode\u003eactionSet\u003c/code\u003e or \u003ccode\u003eactions\u003c/code\u003e. Use \u003ccode\u003emaintainTeam\u003c/code\u003e to add team maintainers.",
            "example": "maintainTeam",
            "enum": [
              "maintainTeam"
            ]
          },
          "actions": {
            "type": "array",
            "description": "A list of actions to allow. Specify either \u003ccode\u003eactionSet\u003c/code\u003e or \u003ccode\u003eactions\u003c/code\u003e. To learn more, read [Role actions](https://launchdarkly.com/docs/ld-docs/home/account/role-actions).",
            "items": {
              "type": "string"
            },
            "example": [
              "updateTeamMembers"
            ]
          },
          "memberIDs": {
            "type": "array",
            "description": "A list of member IDs who receive the permission grant.",
            "items": {
              "type": "string"
            },
            "example": [
              "12ab3c45de678910fgh12345"
            ]
          }
        }
      },
      "postApprovalRequestApplyRequest": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment about the approval request",
            "example": "Looks good, thanks for updating"
          }
        }
      },
      "postApprovalRequestReviewRequest": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "description": "The type of review for this approval request",
            "example": "approve",
            "enum": [
              "approve",
              "comment",
              "decline"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Optional comment about the approval request",
            "example": "Looks good, thanks for updating"
          }
        }
      },
      "putBranch": {
        "type": "object",
        "required": [
          "name",
          "head",
          "syncTime"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The branch name",
            "example": "main"
          },
          "head": {
            "type": "string",
            "description": "An ID representing the branch HEAD. For example, a commit SHA.",
            "example": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"
          },
          "updateSequenceId": {
            "type": "integer",
            "format": "int64",
            "description": "An optional ID used to prevent older data from overwriting newer data. If no sequence ID is included, the newly submitted data will always be saved.",
            "example": 25
          },
          "syncTime": {
            "description": "A timestamp indicating when the branch was last synced",
            "example": "1636558831870",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "references": {
            "type": "array",
            "description": "An array of flag references found on the branch",
            "items": {
              "$ref": "#/components/schemas/ReferenceRep"
            }
          },
          "commitTime": {
            "description": "A timestamp of the current commit",
            "example": "1636558831870",
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "repositoryPost": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The repository name",
            "example": "LaunchDarkly-Docs"
          },
          "sourceLink": {
            "type": "string",
            "description": "A URL to access the repository",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs"
          },
          "commitUrlTemplate": {
            "type": "string",
            "description": "A template for constructing a valid URL to view the commit",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}"
          },
          "hunkUrlTemplate": {
            "type": "string",
            "description": "A template for constructing a valid URL to view the hunk",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}"
          },
          "type": {
            "type": "string",
            "description": "The type of repository. If not specified, the default value is \u003ccode\u003ecustom\u003c/code\u003e.",
            "example": "github",
            "enum": [
              "bitbucket",
              "custom",
              "github",
              "gitlab"
            ]
          },
          "defaultBranch": {
            "type": "string",
            "description": "The repository's default branch. If not specified, the default value is \u003ccode\u003emain\u003c/code\u003e.",
            "example": "main"
          }
        }
      },
      "sourceFlag": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The environment key for the source environment",
            "example": "environment-key-123abc"
          },
          "version": {
            "type": "integer",
            "description": "The version of the source flag from which to copy",
            "example": 1
          }
        }
      },
      "subscriptionPost": {
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-friendly name for your audit log subscription.",
            "example": "Example audit log subscription."
          },
          "statements": {
            "description": "The set of resources you wish to subscribe to audit log notifications for.",
            "$ref": "#/components/schemas/StatementPostList"
          },
          "on": {
            "type": "boolean",
            "description": "Whether or not you want your subscription to actively send events.",
            "example": false
          },
          "tags": {
            "type": "array",
            "description": "An array of tags for this subscription.",
            "items": {
              "type": "string"
            },
            "example": [
              "testing-tag"
            ]
          },
          "config": {
            "type": "object",
            "additionalProperties": {},
            "description": "The unique set of fields required to configure an audit log subscription integration of this type. Refer to the \u003ccode\u003eformVariables\u003c/code\u003e field in the corresponding \u003ccode\u003emanifest.json\u003c/code\u003e at https://github.com/launchdarkly/integration-framework/tree/main/integrations for a full list of fields for the integration you wish to configure.",
            "example": {
              "optional": "an optional property",
              "required": "the required property",
              "url": "https://example.com"
            }
          },
          "url": {
            "type": "string",
            "description": "Slack webhook receiver URL. Only necessary for legacy Slack webhook integrations."
          },
          "apiKey": {
            "type": "string",
            "description": "Datadog API key. Only necessary for legacy Datadog webhook integrations."
          }
        }
      },
      "teamPatchInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "Optional comment about the update"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like \u003ccode\u003e{\"kind\": \"update_action\"}\u003c/code\u003e. Some instructions also require additional parameters as part of this object.",
            "example": "[ { \"kind\": \"updateDescription\", \"value\": \"New description for the team\" } ]",
            "$ref": "#/components/schemas/Instructions"
          }
        }
      },
      "teamPostInput": {
        "type": "object",
        "required": [
          "key",
          "name"
        ],
        "properties": {
          "customRoleKeys": {
            "type": "array",
            "description": "List of custom role keys the team will access",
            "items": {
              "type": "string"
            },
            "example": [
              "example-role1",
              "example-role2"
            ]
          },
          "description": {
            "type": "string",
            "description": "A description of the team",
            "example": "An example team"
          },
          "key": {
            "type": "string",
            "description": "The team key",
            "example": "team-key-123abc"
          },
          "memberIDs": {
            "type": "array",
            "description": "A list of member IDs who belong to the team",
            "items": {
              "type": "string"
            },
            "example": [
              "12ab3c45de678910fgh12345"
            ]
          },
          "name": {
            "type": "string",
            "description": "A human-friendly name for the team",
            "example": "Example team"
          },
          "permissionGrants": {
            "type": "array",
            "description": "A list of permission grants. Permission grants allow access to a specific action, without having to create or update a custom role.",
            "items": {
              "$ref": "#/components/schemas/permissionGrantInput"
            }
          },
          "roleAttributes": {
            "description": "A map of role attributes for the team",
            "example": "{\"developerProjectKey\": [\"default\"]}",
            "$ref": "#/components/schemas/RoleAttributeMap"
          }
        }
      },
      "teamsPatchInput": {
        "type": "object",
        "required": [
          "instructions"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the update",
            "example": "Optional comment about the update"
          },
          "instructions": {
            "description": "The instructions to perform when updating. This should be an array with objects that look like \u003ccode\u003e{\"kind\": \"update_action\"}\u003c/code\u003e. Some instructions also require additional parameters as part of this object.",
            "example": "[ { \"kind\": \"updateDescription\", \"value\": \"New description for the team\" } ]",
            "$ref": "#/components/schemas/Instructions"
          }
        }
      },
      "triggerPost": {
        "type": "object",
        "required": [
          "integrationKey"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Optional comment describing the trigger",
            "example": "example comment"
          },
          "instructions": {
            "type": "array",
            "description": "The action to perform when triggering. This should be an array with a single object that looks like \u003ccode\u003e{\"kind\": \"flag_action\"}\u003c/code\u003e. Supported flag actions are \u003ccode\u003eturnFlagOn\u003c/code\u003e and \u003ccode\u003eturnFlagOff\u003c/code\u003e.",
            "items": {
              "$ref": "#/components/schemas/Instruction"
            },
            "example": [
              {
                "kind": "turnFlagOn"
              }
            ]
          },
          "integrationKey": {
            "type": "string",
            "description": "The unique identifier of the integration for your trigger. Use \u003ccode\u003egeneric-trigger\u003c/code\u003e for integrations not explicitly supported.",
            "example": "generic-trigger"
          }
        }
      },
      "upsertPayloadRep": {
        "type": "object",
        "required": [
          "tags",
          "temporary",
          "booleanDefaults",
          "defaultClientSideAvailability"
        ],
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "tags": {
            "type": "array",
            "description": "A list of default tags for each flag",
            "items": {
              "type": "string"
            },
            "example": [
              "tag-1",
              "tag-2"
            ]
          },
          "temporary": {
            "type": "boolean",
            "description": "Whether the flag should be temporary by default",
            "example": true
          },
          "booleanDefaults": {
            "$ref": "#/components/schemas/BooleanFlagDefaults"
          },
          "defaultClientSideAvailability": {
            "description": "Which client-side SDK types can use this flag by default.",
            "$ref": "#/components/schemas/DefaultClientSideAvailability"
          }
        }
      },
      "webhookPost": {
        "type": "object",
        "required": [
          "url",
          "sign",
          "on"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "A human-readable name for your webhook",
            "example": "Example hook"
          },
          "url": {
            "type": "string",
            "description": "The URL of the remote webhook",
            "example": "http://www.example.com"
          },
          "secret": {
            "type": "string",
            "description": "If sign is true, and the secret attribute is omitted, LaunchDarkly automatically generates a secret for you.",
            "example": "frobozz"
          },
          "statements": {
            "description": "Represents a Custom role policy, defining a resource kinds filter the webhook should respond to.",
            "$ref": "#/components/schemas/StatementPostList"
          },
          "sign": {
            "type": "boolean",
            "description": "If sign is false, the webhook does not include a signature header, and the secret can be omitted.",
            "example": true
          },
          "on": {
            "type": "boolean",
            "description": "Whether or not this webhook is enabled.",
            "example": true
          },
          "tags": {
            "type": "array",
            "description": "List of tags for this webhook",
            "items": {
              "type": "string"
            },
            "example": []
          }
        }
      },
      "TagsCollection": {
        "example": {
          "_links": {
            "key": {
              "href": "href",
              "type": "type"
            }
          },
          "totalCount": 103,
          "items": [
            "ops",
            "pro"
          ]
        },
        "properties": {
          "items": {
            "description": "List of tags",
            "example": [
              "ops",
              "pro"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TagsLink"
            },
            "type": "object"
          },
          "totalCount": {
            "description": "The total number of tags",
            "example": 103,
            "type": "integer"
          }
        },
        "required": [
          "_links",
          "items"
        ],
        "type": "object"
      },
      "CoreLink": {
        "example": {
          "href": "href",
          "type": "type"
        },
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "href",
          "type"
        ],
        "type": "object"
      },
      "Error": {
        "example": {
          "code": "code",
          "message": "message"
        },
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "TagsLink": {
        "example": {
          "href": "href",
          "type": "type"
        },
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AIConfigs": {
        "example": {
          "_links": {
            "next": {
              "href": "href",
              "type": "type"
            },
            "last": {
              "href": "href",
              "type": "type"
            },
            "prev": {
              "href": "href",
              "type": "type"
            },
            "self": {
              "href": "href",
              "type": "type"
            },
            "first": {
              "href": "href",
              "type": "type"
            }
          },
          "totalCount": 9,
          "items": [
            {
              "createdAt": 2,
              "_maintainer": {
                "kind": "kind"
              },
              "_access": {
                "allowed": [
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  },
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  }
                ],
                "denied": [
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  },
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  }
                ]
              },
              "_links": {
                "parent": {
                  "href": "href",
                  "type": "type"
                },
                "self": {
                  "href": "href",
                  "type": "type"
                }
              },
              "variations": [
                {
                  "color": "color",
                  "_links": {
                    "parent": {
                      "href": "href",
                      "type": "type"
                    }
                  },
                  "modelConfigKey": "modelConfigKey",
                  "version": 1,
                  "createdAt": 6,
                  "_publishedAt": 5,
                  "_archivedAt": 5,
                  "name": "name",
                  "messages": [
                    {
                      "role": "role",
                      "content": "content"
                    },
                    {
                      "role": "role",
                      "content": "content"
                    }
                  ],
                  "comment": "comment",
                  "model": "{}",
                  "state": "state",
                  "key": "key"
                },
                {
                  "color": "color",
                  "_links": {
                    "parent": {
                      "href": "href",
                      "type": "type"
                    }
                  },
                  "modelConfigKey": "modelConfigKey",
                  "version": 1,
                  "createdAt": 6,
                  "_publishedAt": 5,
                  "_archivedAt": 5,
                  "name": "name",
                  "messages": [
                    {
                      "role": "role",
                      "content": "content"
                    },
                    {
                      "role": "role",
                      "content": "content"
                    }
                  ],
                  "comment": "comment",
                  "model": "{}",
                  "state": "state",
                  "key": "key"
                }
              ],
              "name": "name",
              "description": "description",
              "version": 0,
              "key": "key",
              "tags": [
                "tags",
                "tags"
              ],
              "updatedAt": 7
            },
            {
              "createdAt": 2,
              "_maintainer": {
                "kind": "kind"
              },
              "_access": {
                "allowed": [
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  },
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  }
                ],
                "denied": [
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  },
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  }
                ]
              },
              "_links": {
                "parent": {
                  "href": "href",
                  "type": "type"
                },
                "self": {
                  "href": "href",
                  "type": "type"
                }
              },
              "variations": [
                {
                  "color": "color",
                  "_links": {
                    "parent": {
                      "href": "href",
                      "type": "type"
                    }
                  },
                  "modelConfigKey": "modelConfigKey",
                  "version": 1,
                  "createdAt": 6,
                  "_publishedAt": 5,
                  "_archivedAt": 5,
                  "name": "name",
                  "messages": [
                    {
                      "role": "role",
                      "content": "content"
                    },
                    {
                      "role": "role",
                      "content": "content"
                    }
                  ],
                  "comment": "comment",
                  "model": "{}",
                  "state": "state",
                  "key": "key"
                },
                {
                  "color": "color",
                  "_links": {
                    "parent": {
                      "href": "href",
                      "type": "type"
                    }
                  },
                  "modelConfigKey": "modelConfigKey",
                  "version": 1,
                  "createdAt": 6,
                  "_publishedAt": 5,
                  "_archivedAt": 5,
                  "name": "name",
                  "messages": [
                    {
                      "role": "role",
                      "content": "content"
                    },
                    {
                      "role": "role",
                      "content": "content"
                    }
                  ],
                  "comment": "comment",
                  "model": "{}",
                  "state": "state",
                  "key": "key"
                }
              ],
              "name": "name",
              "description": "description",
              "version": 0,
              "key": "key",
              "tags": [
                "tags",
                "tags"
              ],
              "updatedAt": 7
            }
          ]
        },
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/PaginatedLinks"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AIConfig"
            },
            "type": "array"
          },
          "totalCount": {
            "type": "integer"
          }
        },
        "required": [
          "items",
          "totalCount"
        ],
        "type": "object"
      },
      "AIConfig": {
        "example": {
          "createdAt": 2,
          "_maintainer": {
            "kind": "kind"
          },
          "_access": {
            "allowed": [
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              },
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              }
            ],
            "denied": [
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              },
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              }
            ]
          },
          "_links": {
            "parent": {
              "href": "href",
              "type": "type"
            },
            "self": {
              "href": "href",
              "type": "type"
            }
          },
          "variations": [
            {
              "color": "color",
              "_links": {
                "parent": {
                  "href": "href",
                  "type": "type"
                }
              },
              "modelConfigKey": "modelConfigKey",
              "version": 1,
              "createdAt": 6,
              "_publishedAt": 5,
              "_archivedAt": 5,
              "name": "name",
              "messages": [
                {
                  "role": "role",
                  "content": "content"
                },
                {
                  "role": "role",
                  "content": "content"
                }
              ],
              "comment": "comment",
              "model": "{}",
              "state": "state",
              "key": "key"
            },
            {
              "color": "color",
              "_links": {
                "parent": {
                  "href": "href",
                  "type": "type"
                }
              },
              "modelConfigKey": "modelConfigKey",
              "version": 1,
              "createdAt": 6,
              "_publishedAt": 5,
              "_archivedAt": 5,
              "name": "name",
              "messages": [
                {
                  "role": "role",
                  "content": "content"
                },
                {
                  "role": "role",
                  "content": "content"
                }
              ],
              "comment": "comment",
              "model": "{}",
              "state": "state",
              "key": "key"
            }
          ],
          "name": "name",
          "description": "description",
          "version": 0,
          "key": "key",
          "tags": [
            "tags",
            "tags"
          ],
          "updatedAt": 7
        },
        "properties": {
          "_access": {
            "$ref": "#/components/schemas/AiConfigsAccess"
          },
          "_links": {
            "$ref": "#/components/schemas/ParentAndSelfLinks"
          },
          "description": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "_maintainer": {
            "$ref": "#/components/schemas/AIConfig__maintainer"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "type": "integer"
          },
          "variations": {
            "items": {
              "$ref": "#/components/schemas/AIConfigVariation"
            },
            "type": "array"
          },
          "createdAt": {
            "format": "int64",
            "type": "integer"
          },
          "updatedAt": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "createdAt",
          "description",
          "key",
          "name",
          "tags",
          "updatedAt",
          "variations",
          "version"
        ],
        "type": "object"
      },
      "AIConfigPost": {
        "example": {
          "maintainerId": "maintainerId",
          "maintainerTeamKey": "maintainerTeamKey",
          "name": "name",
          "description": "",
          "key": "key",
          "tags": [
            "tags",
            "tags"
          ]
        },
        "properties": {
          "description": {
            "default": "",
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "maintainerId": {
            "type": "string"
          },
          "maintainerTeamKey": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "key",
          "name"
        ],
        "type": "object"
      },
      "AIConfigPatch": {
        "example": {
          "maintainerId": "maintainerId",
          "maintainerTeamKey": "maintainerTeamKey",
          "name": "name",
          "description": "description",
          "tags": [
            "tags",
            "tags"
          ]
        },
        "properties": {
          "description": {
            "type": "string"
          },
          "maintainerId": {
            "type": "string"
          },
          "maintainerTeamKey": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AIConfigVariation": {
        "example": {
          "color": "color",
          "_links": {
            "parent": {
              "href": "href",
              "type": "type"
            }
          },
          "modelConfigKey": "modelConfigKey",
          "version": 1,
          "createdAt": 6,
          "_publishedAt": 5,
          "_archivedAt": 5,
          "name": "name",
          "messages": [
            {
              "role": "role",
              "content": "content"
            },
            {
              "role": "role",
              "content": "content"
            }
          ],
          "comment": "comment",
          "model": "{}",
          "state": "state",
          "key": "key"
        },
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/ParentLink"
          },
          "color": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array"
          },
          "model": {
            "type": "object"
          },
          "modelConfigKey": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "format": "int64",
            "type": "integer"
          },
          "version": {
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "_archivedAt": {
            "format": "int64",
            "type": "integer"
          },
          "_publishedAt": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "createdAt",
          "key",
          "messages",
          "model",
          "name",
          "version"
        ],
        "type": "object"
      },
      "AIConfigVariationsResponse": {
        "example": {
          "totalCount": 0,
          "items": [
            {
              "color": "color",
              "_links": {
                "parent": {
                  "href": "href",
                  "type": "type"
                }
              },
              "modelConfigKey": "modelConfigKey",
              "version": 1,
              "createdAt": 6,
              "_publishedAt": 5,
              "_archivedAt": 5,
              "name": "name",
              "messages": [
                {
                  "role": "role",
                  "content": "content"
                },
                {
                  "role": "role",
                  "content": "content"
                }
              ],
              "comment": "comment",
              "model": "{}",
              "state": "state",
              "key": "key"
            },
            {
              "color": "color",
              "_links": {
                "parent": {
                  "href": "href",
                  "type": "type"
                }
              },
              "modelConfigKey": "modelConfigKey",
              "version": 1,
              "createdAt": 6,
              "_publishedAt": 5,
              "_archivedAt": 5,
              "name": "name",
              "messages": [
                {
                  "role": "role",
                  "content": "content"
                },
                {
                  "role": "role",
                  "content": "content"
                }
              ],
              "comment": "comment",
              "model": "{}",
              "state": "state",
              "key": "key"
            }
          ]
        },
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AIConfigVariation"
            },
            "type": "array"
          },
          "totalCount": {
            "type": "integer"
          }
        },
        "required": [
          "items",
          "totalCount"
        ],
        "type": "object"
      },
      "AIConfigVariationPost": {
        "example": {
          "name": "name",
          "messages": [
            {
              "role": "role",
              "content": "content"
            },
            {
              "role": "role",
              "content": "content"
            }
          ],
          "model": "{}",
          "comment": "comment",
          "modelConfigKey": "modelConfigKey",
          "key": "key"
        },
        "properties": {
          "key": {
            "type": "string"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array"
          },
          "model": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "modelConfigKey": {
            "type": "string"
          },
          "comment": {
            "description": "Human-readable description of this variation",
            "type": "string"
          }
        },
        "required": [
          "key",
          "messages",
          "model",
          "name"
        ],
        "type": "object"
      },
      "AIConfigVariationPatch": {
        "example": {
          "name": "name",
          "messages": [
            {
              "role": "role",
              "content": "content"
            },
            {
              "role": "role",
              "content": "content"
            }
          ],
          "model": "{}",
          "comment": "comment",
          "published": true,
          "state": "state",
          "modelConfigKey": "modelConfigKey"
        },
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array"
          },
          "model": {
            "type": "object"
          },
          "modelConfigKey": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "published": {
            "type": "boolean"
          },
          "state": {
            "description": "One of 'archived', 'published'",
            "type": "string"
          },
          "comment": {
            "description": "Human-readable description of what this patch changes",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Message": {
        "example": {
          "role": "role",
          "content": "content"
        },
        "properties": {
          "content": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "content",
          "role"
        ],
        "type": "object"
      },
      "ModelConfig": {
        "example": {
          "costPerOutputToken": 1.4658129805029452,
          "costPerInputToken": 6.027456183070403,
          "customParams": "{}",
          "icon": "icon",
          "global": true,
          "params": "{}",
          "version": 0,
          "tags": [
            "tags",
            "tags"
          ],
          "_access": {
            "allowed": [
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              },
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              }
            ],
            "denied": [
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              },
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              }
            ]
          },
          "provider": "provider",
          "name": "name",
          "id": "id",
          "isRestricted": true,
          "key": "key"
        },
        "properties": {
          "_access": {
            "$ref": "#/components/schemas/AiConfigsAccess"
          },
          "name": {
            "description": "Human readable name of the model",
            "type": "string"
          },
          "key": {
            "description": "Unique key for the model",
            "type": "string"
          },
          "id": {
            "description": "Identifier for the model, for use with third party providers",
            "type": "string"
          },
          "icon": {
            "description": "Icon for the model",
            "type": "string"
          },
          "provider": {
            "description": "Provider for the model",
            "type": "string"
          },
          "global": {
            "description": "Whether the model is global",
            "type": "boolean"
          },
          "params": {
            "type": "object"
          },
          "customParams": {
            "type": "object"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "type": "integer"
          },
          "costPerInputToken": {
            "description": "Cost per input token in USD",
            "format": "double",
            "type": "number"
          },
          "costPerOutputToken": {
            "description": "Cost per output token in USD",
            "format": "double",
            "type": "number"
          },
          "isRestricted": {
            "description": "Whether the model is restricted",
            "type": "boolean"
          }
        },
        "required": [
          "global",
          "id",
          "isRestricted",
          "key",
          "name",
          "tags",
          "version"
        ],
        "type": "object"
      },
      "ModelConfigPost": {
        "example": {
          "costPerOutputToken": 6.027456183070403,
          "costPerInputToken": 0.8008281904610115,
          "provider": "provider",
          "customParams": "{}",
          "name": "name",
          "icon": "icon",
          "id": "id",
          "params": "{}",
          "key": "key",
          "tags": [
            "tags",
            "tags"
          ]
        },
        "properties": {
          "name": {
            "description": "Human readable name of the model",
            "type": "string"
          },
          "key": {
            "description": "Unique key for the model",
            "type": "string"
          },
          "id": {
            "description": "Identifier for the model, for use with third party providers",
            "type": "string"
          },
          "icon": {
            "description": "Icon for the model",
            "type": "string"
          },
          "provider": {
            "description": "Provider for the model",
            "type": "string"
          },
          "params": {
            "type": "object"
          },
          "customParams": {
            "type": "object"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "costPerInputToken": {
            "description": "Cost per input token in USD",
            "format": "double",
            "type": "number"
          },
          "costPerOutputToken": {
            "description": "Cost per output token in USD",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "global",
          "id",
          "key",
          "name"
        ],
        "type": "object"
      },
      "RestrictedModelsRequest": {
        "example": {
          "keys": [
            "keys",
            "keys"
          ]
        },
        "properties": {
          "keys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "keys"
        ],
        "type": "object"
      },
      "RestrictedModelsResponse": {
        "example": {
          "successes": [
            "successes",
            "successes"
          ],
          "errors": [
            {
              "code": 0,
              "message": "message",
              "key": "key"
            },
            {
              "code": 0,
              "message": "message",
              "key": "key"
            }
          ]
        },
        "properties": {
          "successes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/RestrictedModelError"
            },
            "type": "array"
          }
        },
        "required": [
          "errors",
          "successes"
        ],
        "type": "object"
      },
      "RestrictedModelError": {
        "example": {
          "code": 0,
          "message": "message",
          "key": "key"
        },
        "properties": {
          "key": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer"
          }
        },
        "required": [
          "code",
          "key",
          "message"
        ],
        "type": "object"
      },
      "MaintainerMember": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "_id",
          "email",
          "role"
        ],
        "type": "object"
      },
      "AiConfigsMaintainerTeam": {
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "name"
        ],
        "type": "object"
      },
      "Metrics": {
        "example": {
          "inputCost": 7.386281948385884,
          "outputCost": 1.2315135367772556,
          "generationSuccessCount": 5,
          "inputTokens": 0,
          "generationErrorCount": 2,
          "thumbsDown": 9,
          "totalTokens": 1,
          "generationCount": 5,
          "timeToFirstTokenMs": 2,
          "outputTokens": 6,
          "thumbsUp": 7,
          "durationMs": 3,
          "satisfactionRating": 0.4145608
        },
        "properties": {
          "inputTokens": {
            "type": "integer"
          },
          "outputTokens": {
            "type": "integer"
          },
          "totalTokens": {
            "type": "integer"
          },
          "generationCount": {
            "deprecated": true,
            "description": "Number of attempted generations",
            "type": "integer"
          },
          "generationSuccessCount": {
            "description": "Number of successful generations",
            "type": "integer"
          },
          "generationErrorCount": {
            "description": "Number of generations with errors",
            "type": "integer"
          },
          "thumbsUp": {
            "type": "integer"
          },
          "thumbsDown": {
            "type": "integer"
          },
          "durationMs": {
            "type": "integer"
          },
          "timeToFirstTokenMs": {
            "type": "integer"
          },
          "satisfactionRating": {
            "description": "A value between 0 and 1 representing satisfaction rating",
            "format": "float",
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "inputCost": {
            "description": "Cost of input tokens in USD",
            "format": "double",
            "type": "number"
          },
          "outputCost": {
            "description": "Cost of output tokens in USD",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "MetricByVariation": {
        "example": {
          "metrics": {
            "inputCost": 7.386281948385884,
            "outputCost": 1.2315135367772556,
            "generationSuccessCount": 5,
            "inputTokens": 0,
            "generationErrorCount": 2,
            "thumbsDown": 9,
            "totalTokens": 1,
            "generationCount": 5,
            "timeToFirstTokenMs": 2,
            "outputTokens": 6,
            "thumbsUp": 7,
            "durationMs": 3,
            "satisfactionRating": 0.4145608
          },
          "variationKey": "variationKey"
        },
        "properties": {
          "variationKey": {
            "type": "string"
          },
          "metrics": {
            "$ref": "#/components/schemas/Metrics"
          }
        },
        "type": "object"
      },
      "MetricsByVariation": {
        "items": {
          "$ref": "#/components/schemas/MetricByVariation"
        },
        "type": "array"
      },
      "ParentAndSelfLinks": {
        "description": "The location and content type of related resources",
        "example": {
          "parent": {
            "href": "href",
            "type": "type"
          },
          "self": {
            "href": "href",
            "type": "type"
          }
        },
        "properties": {
          "self": {
            "$ref": "#/components/schemas/CoreLink"
          },
          "parent": {
            "$ref": "#/components/schemas/CoreLink"
          }
        },
        "required": [
          "parent",
          "self"
        ],
        "type": "object"
      },
      "ParentLink": {
        "example": {
          "parent": {
            "href": "href",
            "type": "type"
          }
        },
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/CoreLink"
          }
        },
        "required": [
          "parent"
        ],
        "type": "object"
      },
      "PaginatedLinks": {
        "example": {
          "next": {
            "href": "href",
            "type": "type"
          },
          "last": {
            "href": "href",
            "type": "type"
          },
          "prev": {
            "href": "href",
            "type": "type"
          },
          "self": {
            "href": "href",
            "type": "type"
          },
          "first": {
            "href": "href",
            "type": "type"
          }
        },
        "properties": {
          "first": {
            "$ref": "#/components/schemas/AiConfigsLink"
          },
          "last": {
            "$ref": "#/components/schemas/AiConfigsLink"
          },
          "next": {
            "$ref": "#/components/schemas/AiConfigsLink"
          },
          "prev": {
            "$ref": "#/components/schemas/AiConfigsLink"
          },
          "self": {
            "$ref": "#/components/schemas/AiConfigsLink"
          }
        },
        "required": [
          "self"
        ],
        "type": "object"
      },
      "AccessRep": {
        "$ref": "#/components/schemas/AiConfigsAccess"
      },
      "AiConfigsAccess": {
        "example": {
          "allowed": [
            {
              "reason": {
                "role_name": "role_name",
                "notActions": [
                  null,
                  null
                ],
                "notResources": [
                  "notResources",
                  "notResources"
                ],
                "effect": "allow",
                "resources": [
                  "proj/*:env/*;qa_*:/flag/*"
                ],
                "actions": [
                  "*"
                ]
              },
              "action": "action"
            },
            {
              "reason": {
                "role_name": "role_name",
                "notActions": [
                  null,
                  null
                ],
                "notResources": [
                  "notResources",
                  "notResources"
                ],
                "effect": "allow",
                "resources": [
                  "proj/*:env/*;qa_*:/flag/*"
                ],
                "actions": [
                  "*"
                ]
              },
              "action": "action"
            }
          ],
          "denied": [
            {
              "reason": {
                "role_name": "role_name",
                "notActions": [
                  null,
                  null
                ],
                "notResources": [
                  "notResources",
                  "notResources"
                ],
                "effect": "allow",
                "resources": [
                  "proj/*:env/*;qa_*:/flag/*"
                ],
                "actions": [
                  "*"
                ]
              },
              "action": "action"
            },
            {
              "reason": {
                "role_name": "role_name",
                "notActions": [
                  null,
                  null
                ],
                "notResources": [
                  "notResources",
                  "notResources"
                ],
                "effect": "allow",
                "resources": [
                  "proj/*:env/*;qa_*:/flag/*"
                ],
                "actions": [
                  "*"
                ]
              },
              "action": "action"
            }
          ]
        },
        "properties": {
          "denied": {
            "items": {
              "$ref": "#/components/schemas/AiConfigsAccessDenied"
            },
            "type": "array"
          },
          "allowed": {
            "items": {
              "$ref": "#/components/schemas/AiConfigsAccessAllowedRep"
            },
            "type": "array"
          }
        },
        "required": [
          "allowed",
          "denied"
        ],
        "type": "object"
      },
      "AiConfigsAccessDenied": {
        "example": {
          "reason": {
            "role_name": "role_name",
            "notActions": [
              null,
              null
            ],
            "notResources": [
              "notResources",
              "notResources"
            ],
            "effect": "allow",
            "resources": [
              "proj/*:env/*;qa_*:/flag/*"
            ],
            "actions": [
              "*"
            ]
          },
          "action": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/AiConfigsAccessDeniedReason"
          }
        },
        "required": [
          "action",
          "reason"
        ],
        "type": "object"
      },
      "AiConfigsAccessDeniedReason": {
        "example": {
          "role_name": "role_name",
          "notActions": [
            null,
            null
          ],
          "notResources": [
            "notResources",
            "notResources"
          ],
          "effect": "allow",
          "resources": [
            "proj/*:env/*;qa_*:/flag/*"
          ],
          "actions": [
            "*"
          ]
        },
        "properties": {
          "resources": {
            "description": "Resource specifier strings",
            "example": [
              "proj/*:env/*;qa_*:/flag/*"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notResources": {
            "description": "Targeted resources are the resources NOT in this list. The \u003ccode\u003eresources\u003c/code\u003e and \u003ccode\u003enotActions\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "actions": {
            "description": "Actions to perform on a resource",
            "example": [
              "*"
            ],
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "type": "array"
          },
          "notActions": {
            "description": "Targeted actions are the actions NOT in this list. The \u003ccode\u003eactions\u003c/code\u003e and \u003ccode\u003enotResources\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "type": "array"
          },
          "effect": {
            "description": "Whether this statement should allow or deny actions on the resources.",
            "enum": [
              "allow",
              "deny"
            ],
            "example": "allow",
            "type": "string"
          },
          "role_name": {
            "type": "string"
          }
        },
        "required": [
          "effect"
        ],
        "type": "object"
      },
      "AiConfigsAccessAllowedRep": {
        "example": {
          "reason": {
            "role_name": "role_name",
            "notActions": [
              null,
              null
            ],
            "notResources": [
              "notResources",
              "notResources"
            ],
            "effect": "allow",
            "resources": [
              "proj/*:env/*;qa_*:/flag/*"
            ],
            "actions": [
              "*"
            ]
          },
          "action": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/AiConfigsAccessAllowedReason"
          }
        },
        "required": [
          "action",
          "reason"
        ],
        "type": "object"
      },
      "AiConfigsAccessAllowedReason": {
        "example": {
          "role_name": "role_name",
          "notActions": [
            null,
            null
          ],
          "notResources": [
            "notResources",
            "notResources"
          ],
          "effect": "allow",
          "resources": [
            "proj/*:env/*;qa_*:/flag/*"
          ],
          "actions": [
            "*"
          ]
        },
        "properties": {
          "resources": {
            "description": "Resource specifier strings",
            "example": [
              "proj/*:env/*;qa_*:/flag/*"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notResources": {
            "description": "Targeted resources are the resources NOT in this list. The \u003ccode\u003eresources\u003c/code\u003e and \u003ccode\u003enotActions\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "actions": {
            "description": "Actions to perform on a resource",
            "example": [
              "*"
            ],
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "type": "array"
          },
          "notActions": {
            "description": "Targeted actions are the actions NOT in this list. The \u003ccode\u003eactions\u003c/code\u003e and \u003ccode\u003enotResources\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "type": "array"
          },
          "effect": {
            "description": "Whether this statement should allow or deny actions on the resources.",
            "enum": [
              "allow",
              "deny"
            ],
            "example": "allow",
            "type": "string"
          },
          "role_name": {
            "type": "string"
          }
        },
        "required": [
          "effect"
        ],
        "type": "object"
      },
      "AiConfigsLink": {
        "example": {
          "href": "href",
          "type": "type"
        },
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AIConfig__maintainer": {
        "example": {
          "kind": "kind"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/MaintainerMember"
          },
          {
            "$ref": "#/components/schemas/AiConfigsMaintainerTeam"
          }
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "kind"
        ]
      },
      "AnnouncementResponse": {
        "description": "Announcement response",
        "example": {
          "severity": "info",
          "_access": {
            "allowed": [
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              },
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              }
            ],
            "denied": [
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              },
              {
                "reason": {
                  "role_name": "role_name",
                  "notActions": [
                    null,
                    null
                  ],
                  "notResources": [
                    "notResources",
                    "notResources"
                  ],
                  "effect": "allow",
                  "resources": [
                    "proj/*:env/*;qa_*:/flag/*"
                  ],
                  "actions": [
                    "*"
                  ]
                },
                "action": "action"
              }
            ]
          },
          "_links": {
            "parent": {
              "href": "href",
              "type": "type"
            }
          },
          "startTime": 1731439812,
          "_id": "1234567890",
          "isDismissible": true,
          "endTime": 1731439880,
          "title": "System Maintenance Notice",
          "message": "**Important Update:**\n\nPlease be aware of the upcoming maintenance scheduled for *October 31st, 2024*. The system will be unavailable from **12:00 AM** to **4:00 AM**.",
          "_status": "active"
        },
        "properties": {
          "_id": {
            "description": "The ID of the announcement",
            "example": "1234567890",
            "type": "string"
          },
          "isDismissible": {
            "description": "true if the announcement is dismissible",
            "example": true,
            "type": "boolean"
          },
          "title": {
            "description": "The title of the announcement",
            "example": "System Maintenance Notice",
            "type": "string"
          },
          "message": {
            "description": "The message of the announcement",
            "example": "**Important Update:**\n\nPlease be aware of the upcoming maintenance scheduled for *October 31st, 2024*. The system will be unavailable from **12:00 AM** to **4:00 AM**.",
            "type": "string"
          },
          "startTime": {
            "description": "The start time of the announcement. This is a Unix timestamp in milliseconds.",
            "example": 1731439812,
            "format": "int64",
            "type": "integer"
          },
          "endTime": {
            "description": "The end time of the announcement. This is a Unix timestamp in milliseconds.",
            "example": 1731439880,
            "format": "int64",
            "type": "integer"
          },
          "severity": {
            "description": "The severity of the announcement",
            "enum": [
              "info",
              "warning",
              "critical"
            ],
            "type": "string",
            "x-enumNames": [
              "Informational",
              "Warning",
              "Critical"
            ]
          },
          "_status": {
            "description": "The status of the announcement",
            "enum": [
              "active",
              "inactive",
              "scheduled"
            ],
            "type": "string",
            "x-enumNames": [
              "Active",
              "Inactive",
              "Scheduled"
            ]
          },
          "_access": {
            "$ref": "#/components/schemas/AnnouncementAccessRep"
          },
          "_links": {
            "$ref": "#/components/schemas/AnnouncementResponse__links"
          }
        },
        "required": [
          "_id",
          "_links",
          "_status",
          "isDismissible",
          "message",
          "severity",
          "startTime",
          "title"
        ],
        "type": "object"
      },
      "CreateAnnouncementBody": {
        "description": "Create announcement request body",
        "example": {
          "severity": "warning",
          "startTime": 1731439812,
          "isDismissible": true,
          "endTime": 1731439880,
          "title": "System Maintenance Notice",
          "message": "**Important Update:**\n\nPlease be aware of the upcoming maintenance scheduled for *October 31st, 2024*. The system will be unavailable from **12:00 AM** to **4:00 AM**."
        },
        "properties": {
          "isDismissible": {
            "description": "true if the announcement is dismissible",
            "example": true,
            "type": "boolean"
          },
          "title": {
            "description": "The title of the announcement",
            "example": "System Maintenance Notice",
            "type": "string"
          },
          "message": {
            "description": "The message of the announcement",
            "example": "**Important Update:**\n\nPlease be aware of the upcoming maintenance scheduled for *October 31st, 2024*. The system will be unavailable from **12:00 AM** to **4:00 AM**.",
            "type": "string"
          },
          "startTime": {
            "description": "The start time of the announcement. This is a Unix timestamp in milliseconds.",
            "example": 1731439812,
            "format": "int64",
            "type": "integer"
          },
          "endTime": {
            "description": "The end time of the announcement. This is a Unix timestamp in milliseconds.",
            "example": 1731439880,
            "format": "int64",
            "type": "integer"
          },
          "severity": {
            "description": "The severity of the announcement",
            "enum": [
              "info",
              "warning",
              "critical"
            ],
            "example": "warning",
            "type": "string",
            "x-enumNames": [
              "Informational",
              "Warning",
              "Critical"
            ]
          }
        },
        "required": [
          "isDismissible",
          "message",
          "severity",
          "startTime",
          "title"
        ],
        "type": "object"
      },
      "AnnouncementLink": {
        "example": {
          "href": "href",
          "type": "type"
        },
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AnnouncementPaginatedLinks": {
        "example": {
          "next": {
            "href": "href",
            "type": "type"
          },
          "last": {
            "href": "href",
            "type": "type"
          },
          "prev": {
            "href": "href",
            "type": "type"
          },
          "self": {
            "href": "href",
            "type": "type"
          },
          "first": {
            "href": "href",
            "type": "type"
          }
        },
        "properties": {
          "first": {
            "$ref": "#/components/schemas/AnnouncementLink"
          },
          "last": {
            "$ref": "#/components/schemas/AnnouncementLink"
          },
          "next": {
            "$ref": "#/components/schemas/AnnouncementLink"
          },
          "prev": {
            "$ref": "#/components/schemas/AnnouncementLink"
          },
          "self": {
            "$ref": "#/components/schemas/AnnouncementLink"
          }
        },
        "required": [
          "self"
        ],
        "type": "object"
      },
      "AnnouncementJSONPatch": {
        "items": {
          "$ref": "#/components/schemas/AnnouncementPatchOperation"
        },
        "type": "array"
      },
      "AnnouncementPatchOperation": {
        "example": {
          "op": "replace",
          "path": "/exampleField",
          "value": "new example value"
        },
        "properties": {
          "op": {
            "description": "The type of operation to perform",
            "example": "replace",
            "type": "string"
          },
          "path": {
            "description": "A JSON Pointer string specifying the part of the document to operate on",
            "example": "/exampleField",
            "type": "string"
          },
          "value": {
            "description": "A JSON value used in \"add\", \"replace\", and \"test\" operations",
            "example": "new example value"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "AnnouncementAccessRep": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnnouncementAccess"
          }
        ],
        "example": {
          "allowed": [
            {
              "reason": {
                "role_name": "role_name",
                "notActions": [
                  null,
                  null
                ],
                "notResources": [
                  "notResources",
                  "notResources"
                ],
                "effect": "allow",
                "resources": [
                  "proj/*:env/*;qa_*:/flag/*"
                ],
                "actions": [
                  "*"
                ]
              },
              "action": "action"
            },
            {
              "reason": {
                "role_name": "role_name",
                "notActions": [
                  null,
                  null
                ],
                "notResources": [
                  "notResources",
                  "notResources"
                ],
                "effect": "allow",
                "resources": [
                  "proj/*:env/*;qa_*:/flag/*"
                ],
                "actions": [
                  "*"
                ]
              },
              "action": "action"
            }
          ],
          "denied": [
            {
              "reason": {
                "role_name": "role_name",
                "notActions": [
                  null,
                  null
                ],
                "notResources": [
                  "notResources",
                  "notResources"
                ],
                "effect": "allow",
                "resources": [
                  "proj/*:env/*;qa_*:/flag/*"
                ],
                "actions": [
                  "*"
                ]
              },
              "action": "action"
            },
            {
              "reason": {
                "role_name": "role_name",
                "notActions": [
                  null,
                  null
                ],
                "notResources": [
                  "notResources",
                  "notResources"
                ],
                "effect": "allow",
                "resources": [
                  "proj/*:env/*;qa_*:/flag/*"
                ],
                "actions": [
                  "*"
                ]
              },
              "action": "action"
            }
          ]
        },
        "x-go-type": "reps.AccessRep"
      },
      "AnnouncementAccess": {
        "properties": {
          "denied": {
            "items": {
              "$ref": "#/components/schemas/AnnouncementAccessDenied"
            },
            "type": "array"
          },
          "allowed": {
            "items": {
              "$ref": "#/components/schemas/AnnouncementAccessAllowedRep"
            },
            "type": "array"
          }
        },
        "required": [
          "allowed",
          "denied"
        ],
        "type": "object"
      },
      "AnnouncementAccessDenied": {
        "example": {
          "reason": {
            "role_name": "role_name",
            "notActions": [
              null,
              null
            ],
            "notResources": [
              "notResources",
              "notResources"
            ],
            "effect": "allow",
            "resources": [
              "proj/*:env/*;qa_*:/flag/*"
            ],
            "actions": [
              "*"
            ]
          },
          "action": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/AnnouncementAccessDeniedReason"
          }
        },
        "required": [
          "action",
          "reason"
        ],
        "type": "object"
      },
      "AnnouncementAccessDeniedReason": {
        "example": {
          "role_name": "role_name",
          "notActions": [
            null,
            null
          ],
          "notResources": [
            "notResources",
            "notResources"
          ],
          "effect": "allow",
          "resources": [
            "proj/*:env/*;qa_*:/flag/*"
          ],
          "actions": [
            "*"
          ]
        },
        "properties": {
          "resources": {
            "description": "Resource specifier strings",
            "example": [
              "proj/*:env/*;qa_*:/flag/*"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notResources": {
            "description": "Targeted resources are the resources NOT in this list. The \u003ccode\u003eresources\u003c/code\u003e and \u003ccode\u003enotActions\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "actions": {
            "description": "Actions to perform on a resource",
            "example": [
              "*"
            ],
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "type": "array"
          },
          "notActions": {
            "description": "Targeted actions are the actions NOT in this list. The \u003ccode\u003eactions\u003c/code\u003e and \u003ccode\u003enotResources\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "type": "array"
          },
          "effect": {
            "description": "Whether this statement should allow or deny actions on the resources.",
            "enum": [
              "allow",
              "deny"
            ],
            "example": "allow",
            "type": "string"
          },
          "role_name": {
            "type": "string"
          }
        },
        "required": [
          "effect"
        ],
        "type": "object"
      },
      "AnnouncementAccessAllowedRep": {
        "example": {
          "reason": {
            "role_name": "role_name",
            "notActions": [
              null,
              null
            ],
            "notResources": [
              "notResources",
              "notResources"
            ],
            "effect": "allow",
            "resources": [
              "proj/*:env/*;qa_*:/flag/*"
            ],
            "actions": [
              "*"
            ]
          },
          "action": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/AnnouncementAccessAllowedReason"
          }
        },
        "required": [
          "action",
          "reason"
        ],
        "type": "object"
      },
      "AnnouncementAccessAllowedReason": {
        "example": {
          "role_name": "role_name",
          "notActions": [
            null,
            null
          ],
          "notResources": [
            "notResources",
            "notResources"
          ],
          "effect": "allow",
          "resources": [
            "proj/*:env/*;qa_*:/flag/*"
          ],
          "actions": [
            "*"
          ]
        },
        "properties": {
          "resources": {
            "description": "Resource specifier strings",
            "example": [
              "proj/*:env/*;qa_*:/flag/*"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notResources": {
            "description": "Targeted resources are the resources NOT in this list. The \u003ccode\u003eresources\u003c/code\u003e and \u003ccode\u003enotActions\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "actions": {
            "description": "Actions to perform on a resource",
            "example": [
              "*"
            ],
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "type": "array"
          },
          "notActions": {
            "description": "Targeted actions are the actions NOT in this list. The \u003ccode\u003eactions\u003c/code\u003e and \u003ccode\u003enotResources\u003c/code\u003e fields must be empty to use this field.",
            "items": {
              "$ref": "#/components/schemas/ActionSpecifier"
            },
            "type": "array"
          },
          "effect": {
            "description": "Whether this statement should allow or deny actions on the resources.",
            "enum": [
              "allow",
              "deny"
            ],
            "example": "allow",
            "type": "string"
          },
          "role_name": {
            "type": "string"
          }
        },
        "required": [
          "effect"
        ],
        "type": "object"
      },
      "getAnnouncementsPublic_200_response": {
        "example": {
          "_links": {
            "next": {
              "href": "href",
              "type": "type"
            },
            "last": {
              "href": "href",
              "type": "type"
            },
            "prev": {
              "href": "href",
              "type": "type"
            },
            "self": {
              "href": "href",
              "type": "type"
            },
            "first": {
              "href": "href",
              "type": "type"
            }
          },
          "items": [
            {
              "severity": "info",
              "_access": {
                "allowed": [
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  },
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  }
                ],
                "denied": [
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  },
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  }
                ]
              },
              "_links": {
                "parent": {
                  "href": "href",
                  "type": "type"
                }
              },
              "startTime": 1731439812,
              "_id": "1234567890",
              "isDismissible": true,
              "endTime": 1731439880,
              "title": "System Maintenance Notice",
              "message": "**Important Update:**\n\nPlease be aware of the upcoming maintenance scheduled for *October 31st, 2024*. The system will be unavailable from **12:00 AM** to **4:00 AM**.",
              "_status": "active"
            },
            {
              "severity": "info",
              "_access": {
                "allowed": [
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  },
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  }
                ],
                "denied": [
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  },
                  {
                    "reason": {
                      "role_name": "role_name",
                      "notActions": [
                        null,
                        null
                      ],
                      "notResources": [
                        "notResources",
                        "notResources"
                      ],
                      "effect": "allow",
                      "resources": [
                        "proj/*:env/*;qa_*:/flag/*"
                      ],
                      "actions": [
                        "*"
                      ]
                    },
                    "action": "action"
                  }
                ]
              },
              "_links": {
                "parent": {
                  "href": "href",
                  "type": "type"
                }
              },
              "startTime": 1731439812,
              "_id": "1234567890",
              "isDismissible": true,
              "endTime": 1731439880,
              "title": "System Maintenance Notice",
              "message": "**Important Update:**\n\nPlease be aware of the upcoming maintenance scheduled for *October 31st, 2024*. The system will be unavailable from **12:00 AM** to **4:00 AM**.",
              "_status": "active"
            }
          ]
        },
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AnnouncementResponse"
            },
            "type": "array"
          },
          "_links": {
            "$ref": "#/components/schemas/AnnouncementPaginatedLinks"
          }
        },
        "required": [
          "_links",
          "items"
        ],
        "type": "object"
      },
      "AnnouncementResponse__links": {
        "example": {
          "parent": {
            "href": "href",
            "type": "type"
          }
        },
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/AnnouncementLink"
          }
        },
        "required": [
          "parent"
        ],
        "type": "object"
      },
      "DeploymentCollectionRep": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of deployments",
            "example": 25
          },
          "items": {
            "type": "array",
            "description": "A list of deployments",
            "items": {
              "$ref": "#/components/schemas/DeploymentRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/api/v2/engineering-insights/deployments?after=a4290006-1fd1-4ca5-acf7-9f31fac61cf5",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/engineering-insights/deployments",
                "type": "application/json"
              }
            }
          }
        }
      },
      "DeploymentKind": {
        "type": "string"
      },
      "DeploymentRep": {
        "type": "object",
        "required": [
          "id",
          "applicationKey",
          "applicationVersion",
          "startedAt",
          "status",
          "kind",
          "active",
          "archived",
          "environmentKey",
          "numberOfContributors",
          "numberOfPullRequests",
          "linesAdded",
          "linesDeleted",
          "leadTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The deployment ID",
            "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
          },
          "applicationKey": {
            "type": "string",
            "description": "The application key",
            "example": "billing-service"
          },
          "applicationVersion": {
            "type": "string",
            "description": "The application version",
            "example": "a90a8a2"
          },
          "startedAt": {
            "description": "The time the deployment started",
            "example": "1706701522000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "endedAt": {
            "description": "The time the deployment ended",
            "example": "1706712518000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "durationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The duration of the deployment in milliseconds",
            "example": 10996000
          },
          "status": {
            "description": "The status of the deployment",
            "example": "finished",
            "$ref": "#/components/schemas/DeploymentStatus"
          },
          "kind": {
            "description": "The kind of deployment",
            "example": "redeployment",
            "$ref": "#/components/schemas/DeploymentKind"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the deployment is active",
            "example": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {},
            "description": "The metadata associated with the deployment",
            "example": {
              "buildNumber": "1234"
            }
          },
          "archived": {
            "type": "boolean",
            "description": "Whether the deployment is archived",
            "example": false
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key",
            "example": "production"
          },
          "numberOfContributors": {
            "type": "integer",
            "description": "The number of contributors",
            "example": 1
          },
          "numberOfPullRequests": {
            "type": "integer",
            "description": "The number of pull requests",
            "example": 2
          },
          "linesAdded": {
            "type": "integer",
            "format": "int64",
            "description": "The number of lines added",
            "example": 100
          },
          "linesDeleted": {
            "type": "integer",
            "format": "int64",
            "description": "The number of lines deleted",
            "example": 50
          },
          "leadTime": {
            "type": "integer",
            "format": "int64",
            "description": "The total lead time from first commit to deployment end in milliseconds",
            "example": 20237000
          },
          "pullRequests": {
            "description": "The pull requests contained in the deployment",
            "$ref": "#/components/schemas/PullRequestCollectionRep"
          },
          "flagReferences": {
            "description": "The flag references contained in the deployment",
            "$ref": "#/components/schemas/FlagReferenceCollectionRep"
          },
          "leadTimeStages": {
            "description": "The lead time stages for the deployment",
            "$ref": "#/components/schemas/LeadTimeStagesRep"
          }
        }
      },
      "DeploymentStatus": {
        "type": "string"
      },
      "EvaluationsSummary": {
        "type": "object",
        "properties": {
          "variations": {
            "type": "array",
            "description": "A list of variation evaluations",
            "items": {
              "$ref": "#/components/schemas/VariationEvalSummary"
            }
          }
        }
      },
      "EventType": {
        "type": "string"
      },
      "FailureReasonRep": {
        "type": "object",
        "required": [
          "attribute",
          "reason"
        ],
        "properties": {
          "attribute": {
            "type": "string",
            "description": "The attribute that failed validation",
            "example": "projectKey"
          },
          "reason": {
            "type": "string",
            "description": "The reason the attribute failed validation",
            "example": "must be present"
          }
        }
      },
      "FlagEventCollectionRep": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of flag events",
            "example": 1200
          },
          "items": {
            "type": "array",
            "description": "A list of flag events",
            "items": {
              "$ref": "#/components/schemas/FlagEventRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/api/v2/engineering-insights/flag-events?after=a4290006-1fd1-4ca5-acf7-9f31fac61cf5",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/engineering-insights/flag-events",
                "type": "application/json"
              }
            }
          }
        }
      },
      "FlagEventExperiment": {
        "type": "object",
        "required": [
          "key",
          "name",
          "iteration"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The experiment key",
            "example": "experiment-1"
          },
          "name": {
            "type": "string",
            "description": "The experiment name",
            "example": "Experiment 1"
          },
          "iteration": {
            "description": "The experiment iteration",
            "$ref": "#/components/schemas/FlagEventExperimentIteration"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "FlagEventExperimentCollection": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of experiments",
            "example": 1
          },
          "items": {
            "type": "array",
            "description": "A list of experiments",
            "items": {
              "$ref": "#/components/schemas/FlagEventExperiment"
            }
          }
        }
      },
      "FlagEventExperimentIteration": {
        "type": "object",
        "required": [
          "id",
          "status",
          "startedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The experiment iteration ID",
            "example": "65baa44ecc4b5bce113bb4f7"
          },
          "status": {
            "description": "The experiment iteration status",
            "example": "running",
            "enum": [
              "running",
              "stopped"
            ],
            "$ref": "#/components/schemas/IterationStatus"
          },
          "startedAt": {
            "description": "Timestamp of when the iteration started",
            "example": "1655314200000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "endedAt": {
            "description": "Timestamp of when the iteration ended",
            "example": "1656610200000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "FlagEventImpactRep": {
        "type": "object",
        "properties": {
          "size": {
            "type": "string",
            "description": "The size of the flag event impact. Sizes are defined as: none (0%), small (0-20%), medium (20-80%), large (\u003e80%)",
            "example": "medium",
            "enum": [
              "none",
              "small",
              "medium",
              "large"
            ]
          },
          "percentage": {
            "type": "number",
            "description": "The percentage of the flag event impact",
            "example": 50
          },
          "reason": {
            "description": "The reason for the flag event impact",
            "example": "evaluations",
            "enum": [
              "evaluations",
              "global",
              "waiting"
            ],
            "$ref": "#/components/schemas/ImpactReason"
          },
          "evaluationsSummary": {
            "description": "A summary of the change in variation evaluations after the flag event",
            "$ref": "#/components/schemas/EvaluationsSummary"
          }
        }
      },
      "FlagEventMemberRep": {
        "type": "object",
        "required": [
          "id",
          "email",
          "firstName",
          "lastName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The member ID",
            "example": "65baa44ecc4b5bce113bb4f7"
          },
          "email": {
            "type": "string",
            "description": "The member email",
            "example": "test@launchdarkly.com"
          },
          "firstName": {
            "type": "string",
            "description": "The member first name"
          },
          "lastName": {
            "type": "string",
            "description": "The member last name"
          }
        }
      },
      "FlagEventRep": {
        "type": "object",
        "required": [
          "id",
          "projectId",
          "projectKey",
          "flagKey",
          "eventType",
          "eventTime",
          "description",
          "impact"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The flag event ID",
            "example": "e3b2b0e0-9e9b-4c9a-8e9a-0e0e0e0e0e0e"
          },
          "projectId": {
            "type": "string",
            "description": "The project ID",
            "example": "65baa44ecc4b5bce113bb4f7"
          },
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          },
          "environmentId": {
            "type": "string",
            "description": "The environment ID",
            "example": "65baa44ecc4b5bce113bb4f7"
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key",
            "example": "production"
          },
          "flagKey": {
            "type": "string",
            "description": "The flag key",
            "example": "enable-new-payment-method"
          },
          "eventType": {
            "description": "The event type",
            "example": "enabled_targeting",
            "$ref": "#/components/schemas/EventType"
          },
          "eventTime": {
            "description": "A Unix timestamp in milliseconds",
            "example": "1616425200000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "description": {
            "type": "string",
            "description": "The event description",
            "example": "Targeting rule enabled"
          },
          "auditLogEntryId": {
            "type": "string",
            "description": "The audit log entry ID",
            "example": "e3b2b0e0-9e9b-4c9a-8e9a-0e0e0e0e0e0e"
          },
          "member": {
            "description": "The member data",
            "$ref": "#/components/schemas/FlagEventMemberRep"
          },
          "actions": {
            "type": "array",
            "description": "The resource actions",
            "items": {
              "type": "string"
            }
          },
          "impact": {
            "description": "The flag event evaluation impact",
            "$ref": "#/components/schemas/FlagEventImpactRep"
          },
          "experiments": {
            "description": "A list of experiment iterations related to the flag event",
            "$ref": "#/components/schemas/FlagEventExperimentCollection"
          }
        }
      },
      "FlagReferenceCollectionRep": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of flag references",
            "example": 25
          },
          "items": {
            "type": "array",
            "description": "A list of flag references",
            "items": {
              "$ref": "#/components/schemas/FlagReferenceRep"
            }
          }
        }
      },
      "FlagReferenceRep": {
        "type": "object",
        "required": [
          "projectKey",
          "flagKey",
          "referencesAdded",
          "referencesRemoved"
        ],
        "properties": {
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          },
          "flagKey": {
            "type": "string",
            "description": "The flag key",
            "example": "enable-new-payment-structure"
          },
          "referencesAdded": {
            "type": "integer",
            "description": "The number of references added",
            "example": 2
          },
          "referencesRemoved": {
            "type": "integer",
            "description": "The number of references removed",
            "example": 5
          }
        }
      },
      "ImpactReason": {
        "type": "string"
      },
      "InsightGroup": {
        "type": "object",
        "required": [
          "key",
          "name",
          "projectKey",
          "environmentKey",
          "createdAt"
        ],
        "properties": {
          "environment": {
            "description": "Expanded details about the environment",
            "$ref": "#/components/schemas/Environment"
          },
          "scores": {
            "description": "The scores for the insight group",
            "$ref": "#/components/schemas/InsightGroupScores"
          },
          "scoreMetadata": {
            "description": "Metadata about the insight scores, when expanded",
            "$ref": "#/components/schemas/InsightGroupCollectionScoreMetadata"
          },
          "key": {
            "type": "string",
            "description": "The insight group key",
            "example": "default-production-all-apps"
          },
          "name": {
            "type": "string",
            "description": "The insight group name",
            "example": "Production - All Apps"
          },
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key",
            "example": "production"
          },
          "applicationKeys": {
            "type": "array",
            "description": "The application keys",
            "items": {
              "type": "string"
            },
            "example": [
              "billing-service",
              "inventory-service"
            ]
          },
          "createdAt": {
            "description": "The time the insight group was created",
            "example": "1706701522000",
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "InsightGroupCollection": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of insight groups",
            "example": 15
          },
          "items": {
            "type": "array",
            "description": "A list of insight groups",
            "items": {
              "$ref": "#/components/schemas/InsightGroup"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          },
          "metadata": {
            "description": "Metadata about the insight groups",
            "$ref": "#/components/schemas/InsightGroupCollectionMetadata"
          },
          "scoreMetadata": {
            "description": "Metadata about the insight scores, when expanded",
            "$ref": "#/components/schemas/InsightGroupCollectionScoreMetadata"
          }
        }
      },
      "InsightGroupCollectionMetadata": {
        "type": "object",
        "required": [
          "countByIndicator"
        ],
        "properties": {
          "countByIndicator": {
            "$ref": "#/components/schemas/InsightGroupsCountByIndicator"
          }
        }
      },
      "InsightGroupCollectionScoreMetadata": {
        "type": "object",
        "required": [
          "period",
          "lastPeriod"
        ],
        "properties": {
          "period": {
            "description": "The time period for the score calculations",
            "$ref": "#/components/schemas/InsightPeriod"
          },
          "lastPeriod": {
            "description": "The time period for the score calculations in the last period",
            "$ref": "#/components/schemas/InsightPeriod"
          }
        }
      },
      "InsightGroupScores": {
        "type": "object",
        "required": [
          "overall",
          "deploymentFrequency",
          "deploymentFailureRate",
          "leadTime",
          "impactSize",
          "experimentationCoverage",
          "flagHealth",
          "velocity",
          "risk",
          "efficiency"
        ],
        "properties": {
          "overall": {
            "description": "The overall score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          },
          "deploymentFrequency": {
            "description": "The deployment frequency score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          },
          "deploymentFailureRate": {
            "description": "The deployment failure rate score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          },
          "leadTime": {
            "description": "The lead time score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          },
          "impactSize": {
            "description": "The impact size score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          },
          "experimentationCoverage": {
            "description": "The Experimentation coverage score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          },
          "flagHealth": {
            "description": "The flag health score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          },
          "velocity": {
            "description": "The velocity score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          },
          "risk": {
            "description": "The risk score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          },
          "efficiency": {
            "description": "The efficiency score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          },
          "creationRatio": {
            "description": "The creation ratio score for the insight group",
            "$ref": "#/components/schemas/InsightsMetricScore"
          }
        }
      },
      "InsightGroupsCountByIndicator": {
        "type": "object",
        "required": [
          "excellent",
          "good",
          "fair",
          "needsAttention",
          "notCalculated",
          "unknown",
          "total"
        ],
        "properties": {
          "excellent": {
            "type": "integer",
            "description": "The number of insight groups with an excellent indicator",
            "example": 1
          },
          "good": {
            "type": "integer",
            "description": "The number of insight groups with a good indicator",
            "example": 1
          },
          "fair": {
            "type": "integer",
            "description": "The number of insight groups with a fair indicator",
            "example": 1
          },
          "needsAttention": {
            "type": "integer",
            "description": "The number of insight groups with a needs attention indicator",
            "example": 1
          },
          "notCalculated": {
            "type": "integer",
            "description": "The number of insight groups with a not calculated indicator",
            "example": 1
          },
          "unknown": {
            "type": "integer",
            "description": "The number of insight groups with an unknown indicator",
            "example": 1
          },
          "total": {
            "type": "integer",
            "description": "The total number of insight groups",
            "example": 6
          }
        }
      },
      "InsightPeriod": {
        "type": "object",
        "required": [
          "startTime",
          "endTime"
        ],
        "properties": {
          "startTime": {
            "description": "The start time of the period",
            "example": "1706701522000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "endTime": {
            "description": "The end time of the period",
            "example": "1706701522000",
            "$ref": "#/components/schemas/UnixMillis"
          }
        }
      },
      "InsightScores": {
        "type": "object",
        "required": [
          "period",
          "lastPeriod",
          "scores"
        ],
        "properties": {
          "period": {
            "description": "The time period for the scores",
            "$ref": "#/components/schemas/InsightPeriod"
          },
          "lastPeriod": {
            "description": "The time period for the scores in the last period",
            "$ref": "#/components/schemas/InsightPeriod"
          },
          "scores": {
            "description": "The scores for the insight groups",
            "$ref": "#/components/schemas/InsightGroupScores"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "InsightsChart": {
        "type": "object",
        "required": [
          "metadata",
          "series"
        ],
        "properties": {
          "metadata": {
            "description": "Metadata for the chart",
            "$ref": "#/components/schemas/InsightsChartMetadata"
          },
          "series": {
            "type": "array",
            "description": "Series data for the chart",
            "items": {
              "$ref": "#/components/schemas/InsightsChartSeries"
            }
          }
        }
      },
      "InsightsChartBounds": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the bound",
            "example": "equal"
          },
          "value": {
            "type": "integer",
            "format": "int64",
            "description": "Value of the bound",
            "example": 100
          }
        }
      },
      "InsightsChartMetadata": {
        "type": "object",
        "required": [
          "summary",
          "xAxis",
          "yAxis"
        ],
        "properties": {
          "summary": {
            "description": "Metadata values",
            "$ref": "#/components/schemas/InsightsChartMetadataCustomValues"
          },
          "name": {
            "type": "string",
            "description": "Name of the chart",
            "example": "deploymentFrequency"
          },
          "metrics": {
            "description": "Metrics for the given chart data, included when expanded",
            "$ref": "#/components/schemas/InsightsChartMetrics"
          },
          "xAxis": {
            "description": "X-axis metadata",
            "example": "timestamp",
            "$ref": "#/components/schemas/InsightsChartSeriesMetadataAxis"
          },
          "yAxis": {
            "description": "Y-axis metadata",
            "example": "count",
            "$ref": "#/components/schemas/InsightsChartSeriesMetadataAxis"
          }
        }
      },
      "InsightsChartMetadataCustomValues": {
        "type": "object",
        "additionalProperties": {}
      },
      "InsightsChartMetric": {
        "type": "object",
        "required": [
          "indicator",
          "value",
          "unit",
          "modifier",
          "tiers"
        ],
        "properties": {
          "indicator": {
            "type": "string",
            "description": "Metric indicator tier",
            "example": "excellent"
          },
          "value": {
            "type": "number",
            "description": "Metric value",
            "example": 5
          },
          "unit": {
            "type": "string",
            "description": "Metric unit",
            "example": "count"
          },
          "modifier": {
            "type": "string",
            "description": "Metric modifier",
            "example": "per day"
          },
          "tiers": {
            "type": "array",
            "description": "Metric indicator tiers",
            "items": {
              "$ref": "#/components/schemas/InsightsMetricTierDefinition"
            }
          }
        }
      },
      "InsightsChartMetrics": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/InsightsChartMetric"
        }
      },
      "InsightsChartSeries": {
        "type": "object",
        "required": [
          "metadata",
          "data"
        ],
        "properties": {
          "metadata": {
            "description": "Metadata for the series",
            "$ref": "#/components/schemas/InsightsChartSeriesMetadata"
          },
          "data": {
            "type": "array",
            "description": "Data points for the series",
            "items": {
              "$ref": "#/components/schemas/InsightsChartSeriesDataPoint"
            }
          }
        }
      },
      "InsightsChartSeriesDataPoint": {
        "type": "object",
        "required": [
          "x",
          "y"
        ],
        "properties": {
          "x": {
            "type": "integer",
            "format": "int64",
            "description": "X-axis value",
            "example": 1617225600000
          },
          "y": {
            "type": "integer",
            "format": "int64",
            "description": "Y-axis value",
            "example": 100
          },
          "values": {
            "type": "object",
            "additionalProperties": {},
            "description": "Additional values for the data point"
          }
        }
      },
      "InsightsChartSeriesMetadata": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the series"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Aggregate count of the series values"
          },
          "bounds": {
            "type": "array",
            "description": "Bounds for the series data",
            "items": {
              "$ref": "#/components/schemas/InsightsChartBounds"
            }
          }
        }
      },
      "InsightsChartSeriesMetadataAxis": {
        "type": "object",
        "required": [
          "unit"
        ],
        "properties": {
          "unit": {
            "type": "string",
            "description": "Unit of the axis",
            "example": "count"
          }
        }
      },
      "InsightsMetricIndicatorRange": {
        "type": "object",
        "required": [
          "min",
          "max"
        ],
        "properties": {
          "min": {
            "type": "integer",
            "description": "The minimum value for the indicator range",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "The maximum value for the indicator range",
            "example": 100
          }
        }
      },
      "InsightsMetricScore": {
        "type": "object",
        "required": [
          "score",
          "indicator",
          "indicatorRange"
        ],
        "properties": {
          "score": {
            "type": "integer",
            "description": "The score for the metric",
            "example": 100
          },
          "aggregateOf": {
            "type": "array",
            "description": "The keys of the metrics that were aggregated to calculate this score",
            "items": {
              "type": "string"
            },
            "example": [
              "deploymentFrequency",
              "leadTime"
            ]
          },
          "diffVsLastPeriod": {
            "type": "integer"
          },
          "indicator": {
            "description": "The indicator for the score",
            "example": "excellent",
            "enum": [
              "excellent",
              "good",
              "fair",
              "needsAttention",
              "notCalculated",
              "unknown"
            ],
            "$ref": "#/components/schemas/InsightsMetricScoreIndicator"
          },
          "indicatorRange": {
            "description": "The indicator range for the score",
            "$ref": "#/components/schemas/InsightsMetricIndicatorRange"
          },
          "lastPeriod": {
            "description": "The score for the metric in the last period",
            "$ref": "#/components/schemas/InsightsMetricScore"
          }
        }
      },
      "InsightsMetricScoreIndicator": {
        "type": "string"
      },
      "InsightsMetricTierDefinition": {
        "type": "object",
        "required": [
          "indicator",
          "description"
        ],
        "properties": {
          "indicator": {
            "type": "string",
            "description": "Metric indicator tier",
            "example": "excellent"
          },
          "description": {
            "type": "string",
            "description": "Metric indicator description",
            "example": "at least 1 per day"
          }
        }
      },
      "InsightsRepository": {
        "type": "object",
        "required": [
          "_id",
          "version",
          "key",
          "type",
          "url",
          "mainBranch"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "description": "The repository ID",
            "example": "5f9a9b1a-5b9a-4b9a-9a9a-9a9a9a9a9a9a"
          },
          "version": {
            "type": "integer",
            "description": "The repository version",
            "example": 1
          },
          "key": {
            "type": "string",
            "description": "The repository key",
            "example": "launchdarkly/LaunchDarkly-Docs"
          },
          "type": {
            "type": "string",
            "description": "The repository type",
            "example": "github"
          },
          "url": {
            "type": "string",
            "description": "The repository URL",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs"
          },
          "mainBranch": {
            "type": "string",
            "description": "The repository main branch",
            "example": "main"
          },
          "projects": {
            "$ref": "#/components/schemas/ProjectSummaryCollection"
          }
        }
      },
      "InsightsRepositoryCollection": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "Total number of repositories",
            "example": 1
          },
          "items": {
            "type": "array",
            "description": "List of repositories",
            "items": {
              "$ref": "#/components/schemas/InsightsRepository"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "InsightsRepositoryProject": {
        "type": "object",
        "required": [
          "repositoryKey",
          "projectKey"
        ],
        "properties": {
          "repositoryKey": {
            "type": "string",
            "description": "The repository key",
            "example": "launchdarkly/LaunchDarkly-Docs"
          },
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          }
        }
      },
      "InsightsRepositoryProjectCollection": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "Total number of repository project associations",
            "example": 1
          },
          "items": {
            "type": "array",
            "description": "List of repository project associations",
            "items": {
              "$ref": "#/components/schemas/InsightsRepositoryProject"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources"
          }
        }
      },
      "InsightsRepositoryProjectMappings": {
        "type": "object",
        "required": [
          "mappings"
        ],
        "properties": {
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsightsRepositoryProject"
            }
          }
        }
      },
      "IterationStatus": {
        "type": "string"
      },
      "LeadTimeStagesRep": {
        "type": "object",
        "required": [
          "codingDurationMs"
        ],
        "properties": {
          "codingDurationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The coding duration in milliseconds",
            "example": 1000000
          },
          "reviewDurationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The review duration in milliseconds",
            "example": 500000
          },
          "waitDurationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The wait duration between merge time and deploy start time in milliseconds",
            "example": 100000
          },
          "deployDurationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The deploy duration in milliseconds",
            "example": 100000
          },
          "totalLeadTimeMs": {
            "type": "integer",
            "format": "int64",
            "description": "The total lead time in milliseconds",
            "example": 1600000
          }
        }
      },
      "PostDeploymentEventInput": {
        "type": "object",
        "required": [
          "projectKey",
          "environmentKey",
          "applicationKey",
          "version",
          "eventType"
        ],
        "properties": {
          "projectKey": {
            "type": "string",
            "description": "The project key",
            "example": "default"
          },
          "environmentKey": {
            "type": "string",
            "description": "The environment key",
            "example": "production"
          },
          "applicationKey": {
            "type": "string",
            "description": "The application key. This defines the granularity at which you want to view your insights metrics. Typically it is the name of one of the GitHub repositories that you use in this project.\u003cbr/\u003e\u003cbr/\u003eLaunchDarkly automatically creates a new application each time you send a unique application key.",
            "example": "billing-service"
          },
          "applicationName": {
            "type": "string",
            "description": "The application name. This defines how the application is displayed",
            "example": "Billing Service"
          },
          "applicationKind": {
            "type": "string",
            "description": "The kind of application. Default: \u003ccode\u003eserver\u003c/code\u003e",
            "example": "server",
            "enum": [
              "server",
              "browser",
              "mobile"
            ]
          },
          "version": {
            "type": "string",
            "description": "The application version. You can set the application version to any string that includes only letters, numbers, periods (\u003ccode\u003e.\u003c/code\u003e), hyphens (\u003ccode\u003e-\u003c/code\u003e), or underscores (\u003ccode\u003e_\u003c/code\u003e).\u003cbr/\u003e\u003cbr/\u003eWe recommend setting the application version to at least the first seven characters of the SHA or to the tag of the GitHub commit for this deployment.",
            "example": "a90a8a2"
          },
          "versionName": {
            "type": "string",
            "description": "The version name. This defines how the version is displayed",
            "example": "v1.0.0"
          },
          "eventType": {
            "type": "string",
            "description": "The event type",
            "example": "started",
            "enum": [
              "started",
              "failed",
              "finished",
              "custom"
            ]
          },
          "eventTime": {
            "description": "The time, in Unix milliseconds, when the event occurred. If not included, the time will default to when the event is processed and stored in LaunchDarkly.",
            "example": "1706701522000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "eventMetadata": {
            "type": "object",
            "additionalProperties": {},
            "description": "A JSON object containing metadata about the event",
            "example": {
              "buildSystemVersion": "v1.2.3"
            }
          },
          "deploymentMetadata": {
            "type": "object",
            "additionalProperties": {},
            "description": "A JSON object containing metadata about the deployment",
            "example": {
              "buildNumber": "1234"
            }
          }
        }
      },
      "PostInsightGroupParams": {
        "type": "object",
        "required": [
          "name",
          "key",
          "projectKey",
          "environmentKey"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the insight group",
            "example": "Production - All Apps"
          },
          "key": {
            "type": "string",
            "description": "The key of the insight group",
            "example": "default-production-all-apps"
          },
          "projectKey": {
            "type": "string",
            "description": "The projectKey to be associated with the insight group",
            "example": "default"
          },
          "environmentKey": {
            "type": "string",
            "description": "The environmentKey to be associated with the insight group",
            "example": "production"
          },
          "applicationKeys": {
            "type": "array",
            "description": "The application keys to associate with the insight group. If not provided, the insight group will include data from all applications.",
            "items": {
              "type": "string"
            },
            "example": [
              "billing-service",
              "inventory-service"
            ]
          }
        }
      },
      "ProjectSummaryCollection": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "totalCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectSummary"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "PullRequestCollectionRep": {
        "type": "object",
        "required": [
          "totalCount",
          "items"
        ],
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of pull requests",
            "example": 25
          },
          "items": {
            "type": "array",
            "description": "A list of pull requests",
            "items": {
              "$ref": "#/components/schemas/PullRequestRep"
            }
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "The location and content type of related resources",
            "example": {
              "next": {
                "href": "/api/v2/engineering-insights/pull-requests?after=a4290006-1fd1-4ca5-acf7-9f31fac61cf5",
                "type": "application/json"
              },
              "self": {
                "href": "/api/v2/engineering-insights/pull-requests",
                "type": "application/json"
              }
            }
          }
        }
      },
      "PullRequestLeadTimeRep": {
        "type": "object",
        "required": [
          "codingDurationMs"
        ],
        "properties": {
          "codingDurationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The coding duration in milliseconds",
            "example": 1000000
          },
          "reviewDurationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The review duration in milliseconds",
            "example": 500000
          },
          "maxWaitDurationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The max wait duration between merge time and deploy start time in milliseconds",
            "example": 100000
          },
          "avgWaitDurationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The average wait duration between merge time and deploy start time in milliseconds",
            "example": 100000
          },
          "maxDeployDurationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The max deploy duration in milliseconds",
            "example": 100000
          },
          "avgDeployDurationMs": {
            "type": "integer",
            "format": "int64",
            "description": "The average deploy duration in milliseconds",
            "example": 100000
          },
          "maxTotalLeadTimeMs": {
            "type": "integer",
            "format": "int64",
            "description": "The max total lead time in milliseconds",
            "example": 1600000
          },
          "avgTotalLeadTimeMs": {
            "type": "integer",
            "format": "int64",
            "description": "The average total lead time in milliseconds",
            "example": 1600000
          }
        }
      },
      "PullRequestRep": {
        "type": "object",
        "required": [
          "id",
          "externalId",
          "title",
          "status",
          "author",
          "createTime",
          "baseCommitKey",
          "headCommitKey",
          "filesChanged",
          "linesAdded",
          "linesDeleted",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The pull request internal ID",
            "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
          },
          "externalId": {
            "type": "string",
            "description": "The pull request number",
            "example": "1234"
          },
          "title": {
            "type": "string",
            "description": "The pull request title",
            "example": "Enable new payment structure"
          },
          "status": {
            "type": "string",
            "description": "The pull request status",
            "example": "merged"
          },
          "author": {
            "type": "string",
            "description": "The pull request author",
            "example": "jane.doe"
          },
          "createTime": {
            "description": "The pull request create time",
            "example": "1706701522000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "mergeTime": {
            "description": "The pull request merge time",
            "example": "1706712518000",
            "$ref": "#/components/schemas/UnixMillis"
          },
          "mergeCommitKey": {
            "type": "string",
            "description": "The pull request merge commit key",
            "example": "a90a8a2"
          },
          "baseCommitKey": {
            "type": "string",
            "description": "The pull request base commit key",
            "example": "a90a8a2"
          },
          "headCommitKey": {
            "type": "string",
            "description": "The pull request head commit key",
            "example": "a90a8a2"
          },
          "filesChanged": {
            "type": "integer",
            "description": "The number of files changed",
            "example": 2
          },
          "linesAdded": {
            "type": "integer",
            "description": "The number of lines added",
            "example": 100
          },
          "linesDeleted": {
            "type": "integer",
            "description": "The number of lines deleted",
            "example": 50
          },
          "url": {
            "type": "string",
            "description": "The pull request URL",
            "example": "https://github.com/launchdarkly/LaunchDarkly-Docs/pull/406"
          },
          "deployments": {
            "description": "A list of deployments associated with the pull request",
            "$ref": "#/components/schemas/DeploymentCollectionRep"
          },
          "flagReferences": {
            "description": "A list of flag references associated with the pull request",
            "$ref": "#/components/schemas/FlagReferenceCollectionRep"
          },
          "leadTime": {
            "description": "The lead time for the pull request in a given environment",
            "$ref": "#/components/schemas/PullRequestLeadTimeRep"
          }
        }
      },
      "ValidationFailedErrorRep": {
        "type": "object",
        "required": [
          "code",
          "message",
          "errors"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific error code encountered",
            "example": "invalid_request"
          },
          "message": {
            "type": "string",
            "description": "Description of the error",
            "example": "validation failed"
          },
          "errors": {
            "type": "array",
            "description": "List of validation errors",
            "items": {
              "$ref": "#/components/schemas/FailureReasonRep"
            }
          }
        }
      },
      "VariationEvalSummary": {
        "type": "object",
        "properties": {
          "value": {
            "description": "The variation value",
            "example": "true"
          },
          "before": {
            "type": "integer",
            "format": "int64",
            "description": "The number of evaluations in the ten minutes before the flag event",
            "example": 1000
          },
          "after": {
            "type": "integer",
            "format": "int64",
            "description": "The number of evaluations in the ten minutes after the flag event",
            "example": 500
          }
        }
      }
    },
    "requestBodies": {
      "CreateAnnouncementBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateAnnouncementBody"
            }
          }
        },
        "description": "Announcement request body",
        "required": true
      },
      "UpdateAnnouncementBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AnnouncementJSONPatch"
            }
          }
        },
        "description": "Update announcement request body",
        "required": true
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}