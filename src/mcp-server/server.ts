/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { LaunchDarklyCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$aiConfigsCreate } from "./tools/aiConfigsCreate.js";
import { tool$aiConfigsCreateVariation } from "./tools/aiConfigsCreateVariation.js";
import { tool$aiConfigsDelete } from "./tools/aiConfigsDelete.js";
import { tool$aiConfigsDeleteVariation } from "./tools/aiConfigsDeleteVariation.js";
import { tool$aiConfigsGet } from "./tools/aiConfigsGet.js";
import { tool$aiConfigsGetVariation } from "./tools/aiConfigsGetVariation.js";
import { tool$aiConfigsList } from "./tools/aiConfigsList.js";
import { tool$aiConfigsUpdate } from "./tools/aiConfigsUpdate.js";
import { tool$aiConfigsUpdateVariation } from "./tools/aiConfigsUpdateVariation.js";
import { tool$devServerDeleteOverride } from "./tools/devServerDeleteOverride.js";
import { tool$devServerDeleteOverrides } from "./tools/devServerDeleteOverrides.js";
import { tool$devServerUpdateOverride } from "./tools/devServerUpdateOverride.js";
import { tool$featureFlagsCreate } from "./tools/featureFlagsCreate.js";
import { tool$featureFlagsDelete } from "./tools/featureFlagsDelete.js";
import { tool$featureFlagsGet } from "./tools/featureFlagsGet.js";
import { tool$featureFlagsList } from "./tools/featureFlagsList.js";
import { tool$featureFlagsPatch } from "./tools/featureFlagsPatch.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  apiKey?: SDKOptions["apiKey"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "LaunchDarkly",
    version: "0.4.4",
  });

  const client = new LaunchDarklyCore({
    apiKey: deps.apiKey,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$devServerDeleteOverrides);
  tool(tool$devServerUpdateOverride);
  tool(tool$devServerDeleteOverride);
  tool(tool$featureFlagsList);
  tool(tool$featureFlagsCreate);
  tool(tool$featureFlagsGet);
  tool(tool$featureFlagsDelete);
  tool(tool$featureFlagsPatch);
  tool(tool$aiConfigsList);
  tool(tool$aiConfigsCreate);
  tool(tool$aiConfigsGet);
  tool(tool$aiConfigsDelete);
  tool(tool$aiConfigsUpdate);
  tool(tool$aiConfigsCreateVariation);
  tool(tool$aiConfigsGetVariation);
  tool(tool$aiConfigsDeleteVariation);
  tool(tool$aiConfigsUpdateVariation);

  return server;
}
