/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountMembersPatchMember } from "../../funcs/accountMembersPatchMember.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PatchMemberRequest$inboundSchema,
};

export const tool$accountMembersPatchMember: ToolDefinition<typeof args> = {
  name: "account-members-patch-member",
  description: `Modify an account member


Update a single account member. Updating a member uses a [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates).

To update fields in the account member object that are arrays, set the \`path\` to the name of the field and then append \`/<array index>\`. Use \`/0\` to add to the beginning of the array. Use \`/-\` to add to the end of the array. For example, to add a new custom role to a member, use the following request body:

\`\`\`
  [
    {
      "op": "add",
      "path": "/customRoles/0",
      "value": "some-role-id"
    }
  ]
\`\`\`

You can update only an account member's role or custom role using a JSON patch. Members can update their own names and email addresses though the LaunchDarkly UI.

When SAML SSO or SCIM is enabled for the account, account members are managed in the Identity Provider (IdP). Requests to update account members will succeed, but the IdP will override the update shortly afterwards.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await accountMembersPatchMember(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
