/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { environmentsGetEnvironment } from "../../funcs/environmentsGetEnvironment.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetEnvironmentRequest$inboundSchema,
};

export const tool$environmentsGetEnvironment: ToolDefinition<typeof args> = {
  name: "environments-get-environment",
  description: `Get environment

> ### Approval settings
>
> The \`approvalSettings\` key is only returned when [approvals](https://launchdarkly.com/docs/home/releases/approvals) for flags or segments are enabled.

Get an environment given a project and key.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await environmentsGetEnvironment(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
