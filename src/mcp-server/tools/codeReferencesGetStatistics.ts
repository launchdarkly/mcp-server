/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { codeReferencesGetStatistics } from "../../funcs/codeReferencesGetStatistics.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetStatisticsRequest$inboundSchema,
};

export const tool$codeReferencesGetStatistics: ToolDefinition<typeof args> = {
  name: "code-references-get-statistics",
  description: `Get code references statistics for flags

Get statistics about all the code references across repositories for all flags in your project that have code references in the default branch, for example, \`main\`. Optionally, you can include the \`flagKey\` query parameter to limit your request to statistics about code references for a single flag. This endpoint returns the number of references to your flag keys in your repositories, as well as a link to each repository.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await codeReferencesGetStatistics(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
