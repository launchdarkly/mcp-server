/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersGetSearchUsers } from "../../funcs/usersGetSearchUsers.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetSearchUsersRequest$inboundSchema,
};

export const tool$usersGetSearchUsers: ToolDefinition<typeof args> = {
  name: "users-get-search-users",
  description: `Find users

> ### Use contexts instead
>
> After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Search for context instances](https://launchdarkly.com/docs/ld-docs/api/contexts/search-context-instances) instead of this endpoint.

Search users in LaunchDarkly based on their last active date, a user attribute filter set, or a search query.

An example user attribute filter set is \`filter=firstName:Anna,activeTrial:false\`. This matches users that have the user attribute \`firstName\` set to \`Anna\`, that also have the attribute \`activeTrial\` set to \`false\`.

To paginate through results, follow the \`next\` link in the \`_links\` object. To learn more, read [Representations](https://launchdarkly.com/docs/ld-docs/api#representations).
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await usersGetSearchUsers(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
