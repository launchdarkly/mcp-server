/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { projectsGetProject } from "../../funcs/projectsGetProject.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetProjectRequest$inboundSchema,
};

export const tool$projectsGetProject: ToolDefinition<typeof args> = {
  name: "projects-get-project",
  description: `Get project

Get a single project by key.

### Expanding the project response

LaunchDarkly supports one field for expanding the "Get project" response. By default, these fields are **not** included in the response.

To expand the response, append the \`expand\` query parameter and add a comma-separated list with any of the following fields:
* \`environments\` includes a paginated list of the project environments.

For example, \`expand=environments\` includes the \`environments\` field for the project in the response.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await projectsGetProject(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
