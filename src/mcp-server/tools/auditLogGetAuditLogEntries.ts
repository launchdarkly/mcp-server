/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { auditLogGetAuditLogEntries } from "../../funcs/auditLogGetAuditLogEntries.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetAuditLogEntriesRequest$inboundSchema,
};

export const tool$auditLogGetAuditLogEntries: ToolDefinition<typeof args> = {
  name: "audit-log-get-audit-log-entries",
  description: `List audit log entries

Get a list of all audit log entries. The query parameters let you restrict the results that return by date ranges, resource specifiers, or a full-text search query.

LaunchDarkly uses a resource specifier syntax to name resources or collections of resources. To learn more, read [About the resource specifier syntax](https://launchdarkly.com/docs/home/account/role-resources#about-the-resource-specifier-syntax).
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await auditLogGetAuditLogEntries(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
