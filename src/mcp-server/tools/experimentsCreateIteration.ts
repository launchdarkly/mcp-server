/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { experimentsCreateIteration } from "../../funcs/experimentsCreateIteration.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.CreateIterationRequest$inboundSchema,
};

export const tool$experimentsCreateIteration: ToolDefinition<typeof args> = {
  name: "experiments-create-iteration",
  description: `Create iteration

Create an experiment iteration.

Experiment iterations let you record experiments in individual blocks of time. Initially, iterations are created with a status of \`not_started\` and appear in the \`draftIteration\` field of an experiment. To start or stop an iteration, [update the experiment](https://launchdarkly.com/docs/ld-docs/api/experiments/patch-experiment) with the \`startIteration\` or \`stopIteration\` instruction. 

To learn more, read [Start experiment iterations](https://launchdarkly.com/docs/home/experimentation/feature#start-experiment-iterations).
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await experimentsCreateIteration(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
