/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { insightsChartsBetaGetDeploymentFrequencyChart } from "../../funcs/insightsChartsBetaGetDeploymentFrequencyChart.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetDeploymentFrequencyChartRequest$inboundSchema,
};

export const tool$insightsChartsBetaGetDeploymentFrequencyChart: ToolDefinition<
  typeof args
> = {
  name: "insights-charts-(beta)-get-deployment-frequency-chart",
  description: `Get deployment frequency chart data

Get deployment frequency chart data. Engineering insights displays deployment frequency data in the [deployment frequency metric view](https://launchdarkly.com/docs/home/observability/deployments).

### Expanding the chart response

LaunchDarkly supports expanding the chart response to include additional fields.

To expand the response, append the \`expand\` query parameter and include the following:

* \`metrics\` includes details on the metrics related to deployment frequency

For example, use \`?expand=metrics\` to include the \`metrics\` field in the response. By default, this field is **not** included in the response.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await insightsChartsBetaGetDeploymentFrequencyChart(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
