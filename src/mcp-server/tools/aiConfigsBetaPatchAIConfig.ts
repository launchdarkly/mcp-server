/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { aiConfigsBetaPatchAIConfig } from "../../funcs/aiConfigsBetaPatchAIConfig.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PatchAIConfigRequest$inboundSchema,
};

export const tool$aiConfigsBetaPatchAIConfig: ToolDefinition<typeof args> = {
  name: "AI-configs-(beta)-patch-AI-config",
  description: `Update AI Config

Edit an existing AI Config.

The request body must be a JSON object of the fields to update. The values you include replace the existing values for the fields.

Here's an example:
  \`\`\`
    {
      "description": "Example updated description",
      "tags": ["new-tag"]
    }
  \`\`\`
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await aiConfigsBetaPatchAIConfig(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
