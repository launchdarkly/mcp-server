/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersGetUser } from "../../funcs/usersGetUser.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetUserRequest$inboundSchema,
};

export const tool$usersGetUser: ToolDefinition<typeof args> = {
  name: "users-get-user",
  description: `Get user

> ### Use contexts instead
>
> After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Get context instances](https://launchdarkly.com/docs/ld-docs/api/contexts/get-context-instances) instead of this endpoint.

Get a user by key. The \`user\` object contains all attributes sent in \`variation\` calls for that key.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await usersGetUser(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
