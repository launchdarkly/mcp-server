/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { environmentsPostEnvironment } from "../../funcs/environmentsPostEnvironment.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PostEnvironmentRequest$inboundSchema,
};

export const tool$environmentsPostEnvironment: ToolDefinition<typeof args> = {
  name: "environments-post-environment",
  description: `Create environment

> ### Approval settings
>
> The \`approvalSettings\` key is only returned when the [approvals](https://launchdarkly.com/docs/home/releases/approvals/) feature is enabled.
>
> You cannot update approval settings when creating new environments. Update approval settings with the [https://launchdarkly.com/docs/api/environments/patch-environment).

Create a new environment in a specified project with a given name, key, swatch color, and default TTL.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await environmentsPostEnvironment(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
