/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customRolesPatchCustomRole } from "../../funcs/customRolesPatchCustomRole.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PatchCustomRoleRequest$inboundSchema,
};

export const tool$customRolesPatchCustomRole: ToolDefinition<typeof args> = {
  name: "custom-roles-patch-custom-role",
  description: `Update custom role

Update a single custom role. Updating a custom role uses a [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) or [JSON merge patch](https://datatracker.ietf.org/doc/html/rfc7386) representation of the desired changes. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates).<br/><br/>To add an element to the \`policy\` array, set the \`path\` to \`/policy\` and then append \`/<array index>\`. Use \`/0\` to add to the beginning of the array. Use \`/-\` to add to the end of the array.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await customRolesPatchCustomRole(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
