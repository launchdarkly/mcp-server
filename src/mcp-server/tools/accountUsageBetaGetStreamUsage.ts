/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountUsageBetaGetStreamUsage } from "../../funcs/accountUsageBetaGetStreamUsage.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetStreamUsageRequest$inboundSchema,
};

export const tool$accountUsageBetaGetStreamUsage: ToolDefinition<typeof args> =
  {
    name: "account-usage-(beta)-get-stream-usage",
    description: `Get stream usage

Get a time-series array of the number of streaming connections to LaunchDarkly in each time period. The granularity of the data depends on the age of the data requested. If the requested range is within the past two hours, minutely data is returned. If it is within the last two days, hourly data is returned. Otherwise, daily data is returned.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await accountUsageBetaGetStreamUsage(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
