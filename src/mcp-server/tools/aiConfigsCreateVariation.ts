/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { aiConfigsCreateVariation } from "../../funcs/aiConfigsCreateVariation.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PostAIConfigVariationRequest$inboundSchema,
};

export const tool$aiConfigsCreateVariation: ToolDefinition<typeof args> = {
  name: "ai-configs-create-variation",
  description: `Create AI Config variation

Create a new variation for a given AI Config.

The <code>model</code> in the request body requires a <code>modelName</code> and <code>parameters</code>, for example:

\`\`\`
  "model": {
    "modelName": "claude-3-opus-20240229",
    "parameters": {
      "max_tokens": 1024
    }
  }
\`\`\`
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await aiConfigsCreateVariation(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
