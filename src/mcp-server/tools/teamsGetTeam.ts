/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { teamsGetTeam } from "../../funcs/teamsGetTeam.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetTeamRequest$inboundSchema,
};

export const tool$teamsGetTeam: ToolDefinition<typeof args> = {
  name: "teams-get-team",
  description: `Get team

Fetch a team by key.

### Expanding the teams response
LaunchDarkly supports several fields for expanding the "Get team" response. By default, these fields are **not** included in the response.

To expand the response, append the \`expand\` query parameter and add a comma-separated list with any of the following fields:

* \`members\` includes the total count of members that belong to the team.
* \`roles\` includes a paginated list of the custom roles that you have assigned to the team.
* \`roleAttributes\` includes a list of the role attributes that you have assigned to the team.
* \`projects\` includes a paginated list of the projects that the team has any write access to.
* \`maintainers\` includes a paginated list of the maintainers that you have assigned to the team.

For example, \`expand=members,roles\` includes the \`members\` and \`roles\` fields in the response.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await teamsGetTeam(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
