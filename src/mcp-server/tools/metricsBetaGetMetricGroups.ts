/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { metricsBetaGetMetricGroups } from "../../funcs/metricsBetaGetMetricGroups.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetMetricGroupsRequest$inboundSchema,
};

export const tool$metricsBetaGetMetricGroups: ToolDefinition<typeof args> = {
  name: "metrics-(beta)-get-metric-groups",
  description: `List metric groups

Get a list of all metric groups for the specified project.

### Expanding the metric groups response
LaunchDarkly supports one field for expanding the "Get metric groups" response. By default, these fields are **not** included in the response.

To expand the response, append the \`expand\` query parameter and add a comma-separated list with the following field:

- \`experiments\` includes all experiments from the specific project that use the metric group

For example, \`expand=experiments\` includes the \`experiments\` field in the response.

### Filtering metric groups

The \`filter\` parameter supports the following operators: \`contains\`, \`equals\`, \`anyOf\`.

#### Supported fields and operators

You can only filter certain fields in metrics when using the \`filter\` parameter. Additionally, you can only filter some fields with certain operators.

When you search for metrics, the \`filter\` parameter supports the following fields and operators:

|<div style="width:120px">Field</div> |Description |Supported operators |
|---|---|---|
| \`experimentStatus\` | The experiment's status. One of \`not_started\`, \`running\`, \`stopped\`, \`started\`. | \`equals\` |
| \`hasConnections\` | Whether the metric group has connections to experiments or guarded rollouts. One of \`true\`, \`false\`. | \`equals\` |
| \`kind\` | The metric group kind. One of \`funnel\`, \`standard\`. | \`equals\` |
| \`maintainerIds\` | The metric maintainer IDs. | \`anyOf\` |
| \`maintainerTeamKey\` | The metric maintainer team key. | \`equals\` |
| \`query\` | A "fuzzy" search across metric group key and name. Supply a string or list of strings to the operator. | \`equals\` |

### Sorting metric groups

LaunchDarkly supports the following fields for sorting:

- \`name\` sorts by metric group name.
- \`createdAt\` sorts by the creation date of the metric group.
- \`connectionCount\` sorts by the number of connections to experiments the metric group has.

By default, the sort is in ascending order. Use \`-\` to sort in descending order. For example, \`?sort=name\` sorts the response by metric group name in ascending order, and \`?sort=-name\` sorts in descending order.

#### Sample query

\`filter=experimentStatus equals 'not_started' and query equals 'metric name'\`
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await metricsBetaGetMetricGroups(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
