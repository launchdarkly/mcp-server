/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { flagImportConfigurationsBetaPatchFlagImportConfiguration } from "../../funcs/flagImportConfigurationsBetaPatchFlagImportConfiguration.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PatchFlagImportConfigurationRequest$inboundSchema,
};

export const tool$flagImportConfigurationsBetaPatchFlagImportConfiguration:
  ToolDefinition<typeof args> = {
    name: "flag-import-configurations-(beta)-patch-flag-import-configuration",
    description: `Update a flag import configuration

Updating a flag import configuration uses a [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates).<br/><br/>To add an element to the import configuration fields that are arrays, set the \`path\` to the name of the field and then append \`/<array index>\`. Use \`/0\` to add to the beginning of the array. Use \`/-\` to add to the end of the array.<br/><br/>You can update the \`config\`, \`tags\`, and \`name\` of the flag import configuration.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await flagImportConfigurationsBetaPatchFlagImportConfiguration(
          client,
          args.request,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
