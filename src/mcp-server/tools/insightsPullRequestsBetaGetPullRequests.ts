/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { insightsPullRequestsBetaGetPullRequests } from "../../funcs/insightsPullRequestsBetaGetPullRequests.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetPullRequestsRequest$inboundSchema,
};

export const tool$insightsPullRequestsBetaGetPullRequests: ToolDefinition<
  typeof args
> = {
  name: "insights-pull-requests-(beta)-get-pull-requests",
  description: `List pull requests

Get a list of pull requests

### Expanding the pull request collection response

LaunchDarkly supports expanding the pull request collection response to include additional fields.

To expand the response, append the \`expand\` query parameter and include the following:

* \`deployments\` includes details on all of the deployments associated with each pull request
* \`flagReferences\` includes details on all of the references to flags in each pull request
* \`leadTime\` includes details about the lead time of the pull request for each stage

For example, use \`?expand=deployments\` to include the \`deployments\` field in the response. By default, this field is **not** included in the response.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await insightsPullRequestsBetaGetPullRequests(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
