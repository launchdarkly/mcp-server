/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { featureFlagsBetaGetDependentFlagsByEnv } from "../../funcs/featureFlagsBetaGetDependentFlagsByEnv.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetDependentFlagsByEnvRequest$inboundSchema,
};

export const tool$featureFlagsBetaGetDependentFlagsByEnv: ToolDefinition<
  typeof args
> = {
  name: "feature-flags-(beta)-get-dependent-flags-by-env",
  description: `List dependent feature flags by environment

> ### Flag prerequisites is an Enterprise feature
>
> Flag prerequisites is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).

List dependent flags across all environments for the flag specified in the path parameters. A dependent flag is a flag that uses another flag as a prerequisite. To learn more, read [Flag prerequisites](https://launchdarkly.com/docs/home/flags/prereqs).
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await featureFlagsBetaGetDependentFlagsByEnv(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
