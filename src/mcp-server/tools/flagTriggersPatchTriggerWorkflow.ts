/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { flagTriggersPatchTriggerWorkflow } from "../../funcs/flagTriggersPatchTriggerWorkflow.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PatchTriggerWorkflowRequest$inboundSchema,
};

export const tool$flagTriggersPatchTriggerWorkflow: ToolDefinition<
  typeof args
> = {
  name: "flag-triggers-patch-trigger-workflow",
  description: `Update flag trigger

Update a flag trigger. Updating a flag trigger uses the semantic patch format.

To make a semantic patch request, you must append \`domain-model=launchdarkly.semanticpatch\` to your \`Content-Type\` header. To learn more, read [Updates using semantic patch](https://launchdarkly.com/docs/api#updates-using-semantic-patch).

### Instructions

Semantic patch requests support the following \`kind\` instructions for updating flag triggers.

<details>
<summary>Click to expand instructions for <strong>updating flag triggers</strong></summary>

#### replaceTriggerActionInstructions

Removes the existing trigger action and replaces it with the new instructions.

##### Parameters

- \`value\`: An array of the new \`kind\`s of actions to perform when triggering. Supported flag actions are \`turnFlagOn\` and \`turnFlagOff\`.

Here's an example that replaces the existing action with new instructions to turn flag targeting off:

\`\`\`json
{
  "instructions": [
    {
      "kind": "replaceTriggerActionInstructions",
      "value": [ {"kind": "turnFlagOff"} ]
    }
  ]
}
\`\`\`

#### cycleTriggerUrl

Generates a new URL for this trigger. You must update any clients using the trigger to use this new URL.

Here's an example:

\`\`\`json
{
  "instructions": [{ "kind": "cycleTriggerUrl" }]
}
\`\`\`

#### disableTrigger

Disables the trigger. This saves the trigger configuration, but the trigger stops running. To re-enable, use \`enableTrigger\`.

Here's an example:

\`\`\`json
{
  "instructions": [{ "kind": "disableTrigger" }]
}
\`\`\`

#### enableTrigger

Enables the trigger. If you previously disabled the trigger, it begins running again.

Here's an example:

\`\`\`json
{
  "instructions": [{ "kind": "enableTrigger" }]
}
\`\`\`

</details>
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await flagTriggersPatchTriggerWorkflow(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
