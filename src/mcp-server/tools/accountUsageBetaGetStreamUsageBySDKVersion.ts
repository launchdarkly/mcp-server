/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountUsageBetaGetStreamUsageBySDKVersion } from "../../funcs/accountUsageBetaGetStreamUsageBySDKVersion.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetStreamUsageBySDKVersionRequest$inboundSchema,
};

export const tool$accountUsageBetaGetStreamUsageBySDKVersion: ToolDefinition<
  typeof args
> = {
  name: "account-usage-(beta)-get-stream-usage-by-SDK-version",
  description: `Get stream usage by SDK version

Get multiple series of the number of streaming connections to LaunchDarkly in each time period, separated by SDK type and version. Information about each series is in the metadata array. The granularity of the data depends on the age of the data requested. If the requested range is within the past 2 hours, minutely data is returned. If it is within the last two days, hourly data is returned. Otherwise, daily data is returned.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await accountUsageBetaGetStreamUsageBySDKVersion(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
