/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { releasesBetaPatchReleaseByFlagKey } from "../../funcs/releasesBetaPatchReleaseByFlagKey.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PatchReleaseByFlagKeyRequest$inboundSchema,
};

export const tool$releasesBetaPatchReleaseByFlagKey: ToolDefinition<
  typeof args
> = {
  name: "releases-(beta)-patch-release-by-flag-key",
  description: `Patch release for flag

This endpoint is only available for releases that are part of a legacy release pipeline. Releases for new release pipelines should use the [Update phase status for release](https://launchdarkly.com/docs/api/releases-beta/update-phase-status) endpoint. To learn more about migrating from legacy release pipelines to fully automated release pipelines, read the [Release pipeline migration guide](https://launchdarkly.com/docs/guides/flags/release-pipeline-migration).

Update currently active release for a flag. Updating releases requires the [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) format. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates).

You can only use this endpoint to mark a release phase complete or incomplete. To indicate which phase to update, use the array index in the \`path\`. For example, to mark the first phase of a release as complete, use the following request body:

\`\`\`
  [
    {
      "op": "replace",
      "path": "/phase/0/complete",
      "value": true
    }
  ]
\`\`\`
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await releasesBetaPatchReleaseByFlagKey(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
