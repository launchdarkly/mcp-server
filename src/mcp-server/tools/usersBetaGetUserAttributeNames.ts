/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersBetaGetUserAttributeNames } from "../../funcs/usersBetaGetUserAttributeNames.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetUserAttributeNamesRequest$inboundSchema,
};

export const tool$usersBetaGetUserAttributeNames: ToolDefinition<typeof args> =
  {
    name: "users-(beta)-get-user-attribute-names",
    description: `Get user attribute names

> ### Use contexts instead
>
> After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Get context attribute names
](https://launchdarkly.com/docs/ld-docs/api/contexts/get-context-attribute-names) instead of this endpoint.

Get all in-use user attributes in the specified environment. The set of in-use attributes typically consists of all attributes seen within the past 30 days.
`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await usersBetaGetUserAttributeNames(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
