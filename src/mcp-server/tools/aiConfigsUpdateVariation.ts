/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { aiConfigsUpdateVariation } from "../../funcs/aiConfigsUpdateVariation.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PatchAIConfigVariationRequest$inboundSchema,
};

export const tool$aiConfigsUpdateVariation: ToolDefinition<typeof args> = {
  name: "ai-configs-update-variation",
  description: `Update AI Config variation

Edit an existing variation of an AI Config. This creates a new version of the variation.

The request body must be a JSON object of the fields to update. The values you include replace the existing values for the fields.

Here's an example:
\`\`\`
  {
    "messages": [
      {
        "role": "system",
        "content": "The new message"
      }
    ]
  }
\`\`\`
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await aiConfigsUpdateVariation(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
