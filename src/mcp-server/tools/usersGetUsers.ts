/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersGetUsers } from "../../funcs/usersGetUsers.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetUsersRequest$inboundSchema,
};

export const tool$usersGetUsers: ToolDefinition<typeof args> = {
  name: "users-get-users",
  description: `List users

> ### Use contexts instead
>
> After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Search for contexts](https://launchdarkly.com/docs/ld-docs/api/contexts/search-contexts) instead of this endpoint.

List all users in the environment. Includes the total count of users. This is useful for exporting all users in the system for further analysis.

Each page displays users up to a set \`limit\`. The default is 20. To page through, follow the \`next\` link in the \`_links\` object. To learn more, read [Representations](https://launchdarkly.com/docs/ld-docs/api#representations).
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await usersGetUsers(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
