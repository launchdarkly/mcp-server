/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { insightsRepositoriesBetaGetInsightsRepositories } from "../../funcs/insightsRepositoriesBetaGetInsightsRepositories.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetInsightsRepositoriesRequest$inboundSchema,
};

export const tool$insightsRepositoriesBetaGetInsightsRepositories:
  ToolDefinition<typeof args> = {
    name: "insights-repositories-(beta)-get-insights-repositories",
    description: `List repositories

Get a list of repositories

### Expanding the repository collection response

LaunchDarkly supports expanding the repository collection response to include additional fields.

To expand the response, append the \`expand\` query parameter and include the following:

* \`projects\` includes details on all of the LaunchDarkly projects associated with each repository

For example, use \`?expand=projects\` to include the \`projects\` field in the response. By default, this field is **not** included in the response.
`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await insightsRepositoriesBetaGetInsightsRepositories(
          client,
          args.request,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
