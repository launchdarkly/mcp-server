/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  AnnouncementLink,
  AnnouncementLink$inboundSchema,
  AnnouncementLink$Outbound,
  AnnouncementLink$outboundSchema,
} from "./announcementlink.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type AnnouncementPaginatedLinks = {
  first?: AnnouncementLink | undefined;
  last?: AnnouncementLink | undefined;
  next?: AnnouncementLink | undefined;
  prev?: AnnouncementLink | undefined;
  self: AnnouncementLink;
};

/** @internal */
export const AnnouncementPaginatedLinks$inboundSchema: z.ZodType<
  AnnouncementPaginatedLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  first: AnnouncementLink$inboundSchema.optional(),
  last: AnnouncementLink$inboundSchema.optional(),
  next: AnnouncementLink$inboundSchema.optional(),
  prev: AnnouncementLink$inboundSchema.optional(),
  self: AnnouncementLink$inboundSchema,
});

/** @internal */
export type AnnouncementPaginatedLinks$Outbound = {
  first?: AnnouncementLink$Outbound | undefined;
  last?: AnnouncementLink$Outbound | undefined;
  next?: AnnouncementLink$Outbound | undefined;
  prev?: AnnouncementLink$Outbound | undefined;
  self: AnnouncementLink$Outbound;
};

/** @internal */
export const AnnouncementPaginatedLinks$outboundSchema: z.ZodType<
  AnnouncementPaginatedLinks$Outbound,
  z.ZodTypeDef,
  AnnouncementPaginatedLinks
> = z.object({
  first: AnnouncementLink$outboundSchema.optional(),
  last: AnnouncementLink$outboundSchema.optional(),
  next: AnnouncementLink$outboundSchema.optional(),
  prev: AnnouncementLink$outboundSchema.optional(),
  self: AnnouncementLink$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AnnouncementPaginatedLinks$ {
  /** @deprecated use `AnnouncementPaginatedLinks$inboundSchema` instead. */
  export const inboundSchema = AnnouncementPaginatedLinks$inboundSchema;
  /** @deprecated use `AnnouncementPaginatedLinks$outboundSchema` instead. */
  export const outboundSchema = AnnouncementPaginatedLinks$outboundSchema;
  /** @deprecated use `AnnouncementPaginatedLinks$Outbound` instead. */
  export type Outbound = AnnouncementPaginatedLinks$Outbound;
}

export function announcementPaginatedLinksToJSON(
  announcementPaginatedLinks: AnnouncementPaginatedLinks,
): string {
  return JSON.stringify(
    AnnouncementPaginatedLinks$outboundSchema.parse(announcementPaginatedLinks),
  );
}

export function announcementPaginatedLinksFromJSON(
  jsonString: string,
): SafeParseResult<AnnouncementPaginatedLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AnnouncementPaginatedLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AnnouncementPaginatedLinks' from JSON`,
  );
}
