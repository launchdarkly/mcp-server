/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";

export type FlagImportIntegrationCollectionLinks = {
  self: Link;
  parent?: Link | undefined;
};

/** @internal */
export const FlagImportIntegrationCollectionLinks$inboundSchema: z.ZodType<
  FlagImportIntegrationCollectionLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: Link$inboundSchema,
  parent: Link$inboundSchema.optional(),
});

/** @internal */
export type FlagImportIntegrationCollectionLinks$Outbound = {
  self: Link$Outbound;
  parent?: Link$Outbound | undefined;
};

/** @internal */
export const FlagImportIntegrationCollectionLinks$outboundSchema: z.ZodType<
  FlagImportIntegrationCollectionLinks$Outbound,
  z.ZodTypeDef,
  FlagImportIntegrationCollectionLinks
> = z.object({
  self: Link$outboundSchema,
  parent: Link$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlagImportIntegrationCollectionLinks$ {
  /** @deprecated use `FlagImportIntegrationCollectionLinks$inboundSchema` instead. */
  export const inboundSchema =
    FlagImportIntegrationCollectionLinks$inboundSchema;
  /** @deprecated use `FlagImportIntegrationCollectionLinks$outboundSchema` instead. */
  export const outboundSchema =
    FlagImportIntegrationCollectionLinks$outboundSchema;
  /** @deprecated use `FlagImportIntegrationCollectionLinks$Outbound` instead. */
  export type Outbound = FlagImportIntegrationCollectionLinks$Outbound;
}

export function flagImportIntegrationCollectionLinksToJSON(
  flagImportIntegrationCollectionLinks: FlagImportIntegrationCollectionLinks,
): string {
  return JSON.stringify(
    FlagImportIntegrationCollectionLinks$outboundSchema.parse(
      flagImportIntegrationCollectionLinks,
    ),
  );
}

export function flagImportIntegrationCollectionLinksFromJSON(
  jsonString: string,
): SafeParseResult<FlagImportIntegrationCollectionLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FlagImportIntegrationCollectionLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FlagImportIntegrationCollectionLinks' from JSON`,
  );
}
