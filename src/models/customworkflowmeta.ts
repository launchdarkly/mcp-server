/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  CustomWorkflowStageMeta,
  CustomWorkflowStageMeta$inboundSchema,
  CustomWorkflowStageMeta$Outbound,
  CustomWorkflowStageMeta$outboundSchema,
} from "./customworkflowstagemeta.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CustomWorkflowMeta = {
  /**
   * The name of the workflow stage that required this approval request
   */
  name?: string | undefined;
  stage?: CustomWorkflowStageMeta | undefined;
};

/** @internal */
export const CustomWorkflowMeta$inboundSchema: z.ZodType<
  CustomWorkflowMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  stage: CustomWorkflowStageMeta$inboundSchema.optional(),
});

/** @internal */
export type CustomWorkflowMeta$Outbound = {
  name?: string | undefined;
  stage?: CustomWorkflowStageMeta$Outbound | undefined;
};

/** @internal */
export const CustomWorkflowMeta$outboundSchema: z.ZodType<
  CustomWorkflowMeta$Outbound,
  z.ZodTypeDef,
  CustomWorkflowMeta
> = z.object({
  name: z.string().optional(),
  stage: CustomWorkflowStageMeta$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomWorkflowMeta$ {
  /** @deprecated use `CustomWorkflowMeta$inboundSchema` instead. */
  export const inboundSchema = CustomWorkflowMeta$inboundSchema;
  /** @deprecated use `CustomWorkflowMeta$outboundSchema` instead. */
  export const outboundSchema = CustomWorkflowMeta$outboundSchema;
  /** @deprecated use `CustomWorkflowMeta$Outbound` instead. */
  export type Outbound = CustomWorkflowMeta$Outbound;
}

export function customWorkflowMetaToJSON(
  customWorkflowMeta: CustomWorkflowMeta,
): string {
  return JSON.stringify(
    CustomWorkflowMeta$outboundSchema.parse(customWorkflowMeta),
  );
}

export function customWorkflowMetaFromJSON(
  jsonString: string,
): SafeParseResult<CustomWorkflowMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomWorkflowMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomWorkflowMeta' from JSON`,
  );
}
