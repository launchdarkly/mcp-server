/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Statement,
  Statement$inboundSchema,
  Statement$Outbound,
  Statement$outboundSchema,
} from "./statement.js";

export type AuditLogEventsHookCapabilityConfigRep = {
  /**
   * The set of resources you wish to subscribe to audit log notifications for.
   */
  statements?: Array<Statement> | undefined;
};

/** @internal */
export const AuditLogEventsHookCapabilityConfigRep$inboundSchema: z.ZodType<
  AuditLogEventsHookCapabilityConfigRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  statements: z.array(Statement$inboundSchema).optional(),
});

/** @internal */
export type AuditLogEventsHookCapabilityConfigRep$Outbound = {
  statements?: Array<Statement$Outbound> | undefined;
};

/** @internal */
export const AuditLogEventsHookCapabilityConfigRep$outboundSchema: z.ZodType<
  AuditLogEventsHookCapabilityConfigRep$Outbound,
  z.ZodTypeDef,
  AuditLogEventsHookCapabilityConfigRep
> = z.object({
  statements: z.array(Statement$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuditLogEventsHookCapabilityConfigRep$ {
  /** @deprecated use `AuditLogEventsHookCapabilityConfigRep$inboundSchema` instead. */
  export const inboundSchema =
    AuditLogEventsHookCapabilityConfigRep$inboundSchema;
  /** @deprecated use `AuditLogEventsHookCapabilityConfigRep$outboundSchema` instead. */
  export const outboundSchema =
    AuditLogEventsHookCapabilityConfigRep$outboundSchema;
  /** @deprecated use `AuditLogEventsHookCapabilityConfigRep$Outbound` instead. */
  export type Outbound = AuditLogEventsHookCapabilityConfigRep$Outbound;
}

export function auditLogEventsHookCapabilityConfigRepToJSON(
  auditLogEventsHookCapabilityConfigRep: AuditLogEventsHookCapabilityConfigRep,
): string {
  return JSON.stringify(
    AuditLogEventsHookCapabilityConfigRep$outboundSchema.parse(
      auditLogEventsHookCapabilityConfigRep,
    ),
  );
}

export function auditLogEventsHookCapabilityConfigRepFromJSON(
  jsonString: string,
): SafeParseResult<AuditLogEventsHookCapabilityConfigRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AuditLogEventsHookCapabilityConfigRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AuditLogEventsHookCapabilityConfigRep' from JSON`,
  );
}
