/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type FlagCopyConfigEnvironment = {
  /**
   * The environment key
   */
  key: string;
  /**
   * Optional flag version. If you include this, the operation only succeeds if the current flag version in the environment matches this version.
   */
  currentVersion?: number | undefined;
};

/** @internal */
export const FlagCopyConfigEnvironment$inboundSchema: z.ZodType<
  FlagCopyConfigEnvironment,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  currentVersion: z.number().int().optional(),
});

/** @internal */
export type FlagCopyConfigEnvironment$Outbound = {
  key: string;
  currentVersion?: number | undefined;
};

/** @internal */
export const FlagCopyConfigEnvironment$outboundSchema: z.ZodType<
  FlagCopyConfigEnvironment$Outbound,
  z.ZodTypeDef,
  FlagCopyConfigEnvironment
> = z.object({
  key: z.string(),
  currentVersion: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlagCopyConfigEnvironment$ {
  /** @deprecated use `FlagCopyConfigEnvironment$inboundSchema` instead. */
  export const inboundSchema = FlagCopyConfigEnvironment$inboundSchema;
  /** @deprecated use `FlagCopyConfigEnvironment$outboundSchema` instead. */
  export const outboundSchema = FlagCopyConfigEnvironment$outboundSchema;
  /** @deprecated use `FlagCopyConfigEnvironment$Outbound` instead. */
  export type Outbound = FlagCopyConfigEnvironment$Outbound;
}

export function flagCopyConfigEnvironmentToJSON(
  flagCopyConfigEnvironment: FlagCopyConfigEnvironment,
): string {
  return JSON.stringify(
    FlagCopyConfigEnvironment$outboundSchema.parse(flagCopyConfigEnvironment),
  );
}

export function flagCopyConfigEnvironmentFromJSON(
  jsonString: string,
): SafeParseResult<FlagCopyConfigEnvironment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FlagCopyConfigEnvironment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FlagCopyConfigEnvironment' from JSON`,
  );
}
