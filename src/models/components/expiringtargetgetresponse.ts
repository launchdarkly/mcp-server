/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ExpiringTarget,
  ExpiringTarget$inboundSchema,
  ExpiringTarget$Outbound,
  ExpiringTarget$outboundSchema,
} from "./expiringtarget.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";

export type ExpiringTargetGetResponse = {
  /**
   * A list of expiring targets
   */
  items: Array<ExpiringTarget>;
  /**
   * The location and content type of related resources
   */
  links?: { [k: string]: Link } | undefined;
};

/** @internal */
export const ExpiringTargetGetResponse$inboundSchema: z.ZodType<
  ExpiringTargetGetResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(ExpiringTarget$inboundSchema),
  _links: z.record(Link$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type ExpiringTargetGetResponse$Outbound = {
  items: Array<ExpiringTarget$Outbound>;
  _links?: { [k: string]: Link$Outbound } | undefined;
};

/** @internal */
export const ExpiringTargetGetResponse$outboundSchema: z.ZodType<
  ExpiringTargetGetResponse$Outbound,
  z.ZodTypeDef,
  ExpiringTargetGetResponse
> = z.object({
  items: z.array(ExpiringTarget$outboundSchema),
  links: z.record(Link$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExpiringTargetGetResponse$ {
  /** @deprecated use `ExpiringTargetGetResponse$inboundSchema` instead. */
  export const inboundSchema = ExpiringTargetGetResponse$inboundSchema;
  /** @deprecated use `ExpiringTargetGetResponse$outboundSchema` instead. */
  export const outboundSchema = ExpiringTargetGetResponse$outboundSchema;
  /** @deprecated use `ExpiringTargetGetResponse$Outbound` instead. */
  export type Outbound = ExpiringTargetGetResponse$Outbound;
}

export function expiringTargetGetResponseToJSON(
  expiringTargetGetResponse: ExpiringTargetGetResponse,
): string {
  return JSON.stringify(
    ExpiringTargetGetResponse$outboundSchema.parse(expiringTargetGetResponse),
  );
}

export function expiringTargetGetResponseFromJSON(
  jsonString: string,
): SafeParseResult<ExpiringTargetGetResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExpiringTargetGetResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExpiringTargetGetResponse' from JSON`,
  );
}
