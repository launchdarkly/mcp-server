/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type InsightPeriod = {
  startTime: number;
  endTime: number;
};

/** @internal */
export const InsightPeriod$inboundSchema: z.ZodType<
  InsightPeriod,
  z.ZodTypeDef,
  unknown
> = z.object({
  startTime: z.number().int(),
  endTime: z.number().int(),
});

/** @internal */
export type InsightPeriod$Outbound = {
  startTime: number;
  endTime: number;
};

/** @internal */
export const InsightPeriod$outboundSchema: z.ZodType<
  InsightPeriod$Outbound,
  z.ZodTypeDef,
  InsightPeriod
> = z.object({
  startTime: z.number().int(),
  endTime: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InsightPeriod$ {
  /** @deprecated use `InsightPeriod$inboundSchema` instead. */
  export const inboundSchema = InsightPeriod$inboundSchema;
  /** @deprecated use `InsightPeriod$outboundSchema` instead. */
  export const outboundSchema = InsightPeriod$outboundSchema;
  /** @deprecated use `InsightPeriod$Outbound` instead. */
  export type Outbound = InsightPeriod$Outbound;
}

export function insightPeriodToJSON(insightPeriod: InsightPeriod): string {
  return JSON.stringify(InsightPeriod$outboundSchema.parse(insightPeriod));
}

export function insightPeriodFromJSON(
  jsonString: string,
): SafeParseResult<InsightPeriod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InsightPeriod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InsightPeriod' from JSON`,
  );
}
