/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  RelayAutoConfigRep,
  RelayAutoConfigRep$inboundSchema,
  RelayAutoConfigRep$Outbound,
  RelayAutoConfigRep$outboundSchema,
} from "./relayautoconfigrep.js";

export type RelayAutoConfigCollectionRep = {
  /**
   * An array of Relay Proxy configurations
   */
  items: Array<RelayAutoConfigRep>;
};

/** @internal */
export const RelayAutoConfigCollectionRep$inboundSchema: z.ZodType<
  RelayAutoConfigCollectionRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(RelayAutoConfigRep$inboundSchema),
});

/** @internal */
export type RelayAutoConfigCollectionRep$Outbound = {
  items: Array<RelayAutoConfigRep$Outbound>;
};

/** @internal */
export const RelayAutoConfigCollectionRep$outboundSchema: z.ZodType<
  RelayAutoConfigCollectionRep$Outbound,
  z.ZodTypeDef,
  RelayAutoConfigCollectionRep
> = z.object({
  items: z.array(RelayAutoConfigRep$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RelayAutoConfigCollectionRep$ {
  /** @deprecated use `RelayAutoConfigCollectionRep$inboundSchema` instead. */
  export const inboundSchema = RelayAutoConfigCollectionRep$inboundSchema;
  /** @deprecated use `RelayAutoConfigCollectionRep$outboundSchema` instead. */
  export const outboundSchema = RelayAutoConfigCollectionRep$outboundSchema;
  /** @deprecated use `RelayAutoConfigCollectionRep$Outbound` instead. */
  export type Outbound = RelayAutoConfigCollectionRep$Outbound;
}

export function relayAutoConfigCollectionRepToJSON(
  relayAutoConfigCollectionRep: RelayAutoConfigCollectionRep,
): string {
  return JSON.stringify(
    RelayAutoConfigCollectionRep$outboundSchema.parse(
      relayAutoConfigCollectionRep,
    ),
  );
}

export function relayAutoConfigCollectionRepFromJSON(
  jsonString: string,
): SafeParseResult<RelayAutoConfigCollectionRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RelayAutoConfigCollectionRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RelayAutoConfigCollectionRep' from JSON`,
  );
}
