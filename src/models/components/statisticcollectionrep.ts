/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";
import {
  StatisticRep,
  StatisticRep$inboundSchema,
  StatisticRep$Outbound,
  StatisticRep$outboundSchema,
} from "./statisticrep.js";

export type StatisticCollectionRep = {
  /**
   * A map of flag keys to a list of code reference statistics for each code repository in which the flag key appears
   */
  flags: { [k: string]: Array<StatisticRep> };
  /**
   * The location and content type of related resources
   */
  links: { [k: string]: Link };
};

/** @internal */
export const StatisticCollectionRep$inboundSchema: z.ZodType<
  StatisticCollectionRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  flags: z.record(z.array(StatisticRep$inboundSchema)),
  _links: z.record(Link$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type StatisticCollectionRep$Outbound = {
  flags: { [k: string]: Array<StatisticRep$Outbound> };
  _links: { [k: string]: Link$Outbound };
};

/** @internal */
export const StatisticCollectionRep$outboundSchema: z.ZodType<
  StatisticCollectionRep$Outbound,
  z.ZodTypeDef,
  StatisticCollectionRep
> = z.object({
  flags: z.record(z.array(StatisticRep$outboundSchema)),
  links: z.record(Link$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StatisticCollectionRep$ {
  /** @deprecated use `StatisticCollectionRep$inboundSchema` instead. */
  export const inboundSchema = StatisticCollectionRep$inboundSchema;
  /** @deprecated use `StatisticCollectionRep$outboundSchema` instead. */
  export const outboundSchema = StatisticCollectionRep$outboundSchema;
  /** @deprecated use `StatisticCollectionRep$Outbound` instead. */
  export type Outbound = StatisticCollectionRep$Outbound;
}

export function statisticCollectionRepToJSON(
  statisticCollectionRep: StatisticCollectionRep,
): string {
  return JSON.stringify(
    StatisticCollectionRep$outboundSchema.parse(statisticCollectionRep),
  );
}

export function statisticCollectionRepFromJSON(
  jsonString: string,
): SafeParseResult<StatisticCollectionRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StatisticCollectionRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StatisticCollectionRep' from JSON`,
  );
}
