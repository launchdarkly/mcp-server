/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Metrics = {
  inputTokens?: number | undefined;
  outputTokens?: number | undefined;
  totalTokens?: number | undefined;
  /**
   * Number of attempted generations
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  generationCount?: number | undefined;
  /**
   * Number of successful generations
   */
  generationSuccessCount?: number | undefined;
  /**
   * Number of generations with errors
   */
  generationErrorCount?: number | undefined;
  thumbsUp?: number | undefined;
  thumbsDown?: number | undefined;
  durationMs?: number | undefined;
  timeToFirstTokenMs?: number | undefined;
  /**
   * A value between 0 and 1 representing satisfaction rating
   */
  satisfactionRating?: number | undefined;
  /**
   * Cost of input tokens in USD
   */
  inputCost?: number | undefined;
  /**
   * Cost of output tokens in USD
   */
  outputCost?: number | undefined;
};

/** @internal */
export const Metrics$inboundSchema: z.ZodType<Metrics, z.ZodTypeDef, unknown> =
  z.object({
    inputTokens: z.number().int().optional(),
    outputTokens: z.number().int().optional(),
    totalTokens: z.number().int().optional(),
    generationCount: z.number().int().optional(),
    generationSuccessCount: z.number().int().optional(),
    generationErrorCount: z.number().int().optional(),
    thumbsUp: z.number().int().optional(),
    thumbsDown: z.number().int().optional(),
    durationMs: z.number().int().optional(),
    timeToFirstTokenMs: z.number().int().optional(),
    satisfactionRating: z.number().optional(),
    inputCost: z.number().optional(),
    outputCost: z.number().optional(),
  });

/** @internal */
export type Metrics$Outbound = {
  inputTokens?: number | undefined;
  outputTokens?: number | undefined;
  totalTokens?: number | undefined;
  generationCount?: number | undefined;
  generationSuccessCount?: number | undefined;
  generationErrorCount?: number | undefined;
  thumbsUp?: number | undefined;
  thumbsDown?: number | undefined;
  durationMs?: number | undefined;
  timeToFirstTokenMs?: number | undefined;
  satisfactionRating?: number | undefined;
  inputCost?: number | undefined;
  outputCost?: number | undefined;
};

/** @internal */
export const Metrics$outboundSchema: z.ZodType<
  Metrics$Outbound,
  z.ZodTypeDef,
  Metrics
> = z.object({
  inputTokens: z.number().int().optional(),
  outputTokens: z.number().int().optional(),
  totalTokens: z.number().int().optional(),
  generationCount: z.number().int().optional(),
  generationSuccessCount: z.number().int().optional(),
  generationErrorCount: z.number().int().optional(),
  thumbsUp: z.number().int().optional(),
  thumbsDown: z.number().int().optional(),
  durationMs: z.number().int().optional(),
  timeToFirstTokenMs: z.number().int().optional(),
  satisfactionRating: z.number().optional(),
  inputCost: z.number().optional(),
  outputCost: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Metrics$ {
  /** @deprecated use `Metrics$inboundSchema` instead. */
  export const inboundSchema = Metrics$inboundSchema;
  /** @deprecated use `Metrics$outboundSchema` instead. */
  export const outboundSchema = Metrics$outboundSchema;
  /** @deprecated use `Metrics$Outbound` instead. */
  export type Outbound = Metrics$Outbound;
}

export function metricsToJSON(metrics: Metrics): string {
  return JSON.stringify(Metrics$outboundSchema.parse(metrics));
}

export function metricsFromJSON(
  jsonString: string,
): SafeParseResult<Metrics, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Metrics$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Metrics' from JSON`,
  );
}
