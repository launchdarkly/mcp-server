/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DynamicOptionsParser,
  DynamicOptionsParser$inboundSchema,
  DynamicOptionsParser$Outbound,
  DynamicOptionsParser$outboundSchema,
} from "./dynamicoptionsparser.js";
import {
  Endpoint,
  Endpoint$inboundSchema,
  Endpoint$Outbound,
  Endpoint$outboundSchema,
} from "./endpoint.js";

export type DynamicOptions = {
  endpoint?: Endpoint | undefined;
  parser?: DynamicOptionsParser | undefined;
};

/** @internal */
export const DynamicOptions$inboundSchema: z.ZodType<
  DynamicOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  endpoint: Endpoint$inboundSchema.optional(),
  parser: DynamicOptionsParser$inboundSchema.optional(),
});

/** @internal */
export type DynamicOptions$Outbound = {
  endpoint?: Endpoint$Outbound | undefined;
  parser?: DynamicOptionsParser$Outbound | undefined;
};

/** @internal */
export const DynamicOptions$outboundSchema: z.ZodType<
  DynamicOptions$Outbound,
  z.ZodTypeDef,
  DynamicOptions
> = z.object({
  endpoint: Endpoint$outboundSchema.optional(),
  parser: DynamicOptionsParser$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DynamicOptions$ {
  /** @deprecated use `DynamicOptions$inboundSchema` instead. */
  export const inboundSchema = DynamicOptions$inboundSchema;
  /** @deprecated use `DynamicOptions$outboundSchema` instead. */
  export const outboundSchema = DynamicOptions$outboundSchema;
  /** @deprecated use `DynamicOptions$Outbound` instead. */
  export type Outbound = DynamicOptions$Outbound;
}

export function dynamicOptionsToJSON(dynamicOptions: DynamicOptions): string {
  return JSON.stringify(DynamicOptions$outboundSchema.parse(dynamicOptions));
}

export function dynamicOptionsFromJSON(
  jsonString: string,
): SafeParseResult<DynamicOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DynamicOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DynamicOptions' from JSON`,
  );
}
