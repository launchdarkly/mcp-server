/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type MigrationSafetyIssueRep = {
  /**
   * The ID of the rule which caused this issue
   */
  causingRuleId?: string | undefined;
  /**
   * A list of the IDs of the rules which are affected by this issue. <code>fallthrough</code> is a sentinel value for the default rule.
   */
  affectedRuleIds?: Array<string> | undefined;
  /**
   * A description of the issue that <code>causingRuleId</code> has caused for <code>affectedRuleIds</code>.
   */
  issue?: string | undefined;
  /**
   * Whether the changes caused by <code>causingRuleId</code> bring inconsistency to the old system
   */
  oldSystemAffected?: boolean | undefined;
};

/** @internal */
export const MigrationSafetyIssueRep$inboundSchema: z.ZodType<
  MigrationSafetyIssueRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  causingRuleId: z.string().optional(),
  affectedRuleIds: z.array(z.string()).optional(),
  issue: z.string().optional(),
  oldSystemAffected: z.boolean().optional(),
});

/** @internal */
export type MigrationSafetyIssueRep$Outbound = {
  causingRuleId?: string | undefined;
  affectedRuleIds?: Array<string> | undefined;
  issue?: string | undefined;
  oldSystemAffected?: boolean | undefined;
};

/** @internal */
export const MigrationSafetyIssueRep$outboundSchema: z.ZodType<
  MigrationSafetyIssueRep$Outbound,
  z.ZodTypeDef,
  MigrationSafetyIssueRep
> = z.object({
  causingRuleId: z.string().optional(),
  affectedRuleIds: z.array(z.string()).optional(),
  issue: z.string().optional(),
  oldSystemAffected: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MigrationSafetyIssueRep$ {
  /** @deprecated use `MigrationSafetyIssueRep$inboundSchema` instead. */
  export const inboundSchema = MigrationSafetyIssueRep$inboundSchema;
  /** @deprecated use `MigrationSafetyIssueRep$outboundSchema` instead. */
  export const outboundSchema = MigrationSafetyIssueRep$outboundSchema;
  /** @deprecated use `MigrationSafetyIssueRep$Outbound` instead. */
  export type Outbound = MigrationSafetyIssueRep$Outbound;
}

export function migrationSafetyIssueRepToJSON(
  migrationSafetyIssueRep: MigrationSafetyIssueRep,
): string {
  return JSON.stringify(
    MigrationSafetyIssueRep$outboundSchema.parse(migrationSafetyIssueRep),
  );
}

export function migrationSafetyIssueRepFromJSON(
  jsonString: string,
): SafeParseResult<MigrationSafetyIssueRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MigrationSafetyIssueRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MigrationSafetyIssueRep' from JSON`,
  );
}
