/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AIConfigTargetingEnvironmentFallthroughRolloutVariation = {
  untracked?: boolean | undefined;
  variation: number;
  weight: number;
};

/** @internal */
export const AIConfigTargetingEnvironmentFallthroughRolloutVariation$inboundSchema:
  z.ZodType<
    AIConfigTargetingEnvironmentFallthroughRolloutVariation,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _untracked: z.boolean().optional(),
    variation: z.number().int(),
    weight: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      "_untracked": "untracked",
    });
  });

/** @internal */
export type AIConfigTargetingEnvironmentFallthroughRolloutVariation$Outbound = {
  _untracked?: boolean | undefined;
  variation: number;
  weight: number;
};

/** @internal */
export const AIConfigTargetingEnvironmentFallthroughRolloutVariation$outboundSchema:
  z.ZodType<
    AIConfigTargetingEnvironmentFallthroughRolloutVariation$Outbound,
    z.ZodTypeDef,
    AIConfigTargetingEnvironmentFallthroughRolloutVariation
  > = z.object({
    untracked: z.boolean().optional(),
    variation: z.number().int(),
    weight: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      untracked: "_untracked",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AIConfigTargetingEnvironmentFallthroughRolloutVariation$ {
  /** @deprecated use `AIConfigTargetingEnvironmentFallthroughRolloutVariation$inboundSchema` instead. */
  export const inboundSchema =
    AIConfigTargetingEnvironmentFallthroughRolloutVariation$inboundSchema;
  /** @deprecated use `AIConfigTargetingEnvironmentFallthroughRolloutVariation$outboundSchema` instead. */
  export const outboundSchema =
    AIConfigTargetingEnvironmentFallthroughRolloutVariation$outboundSchema;
  /** @deprecated use `AIConfigTargetingEnvironmentFallthroughRolloutVariation$Outbound` instead. */
  export type Outbound =
    AIConfigTargetingEnvironmentFallthroughRolloutVariation$Outbound;
}

export function aiConfigTargetingEnvironmentFallthroughRolloutVariationToJSON(
  aiConfigTargetingEnvironmentFallthroughRolloutVariation:
    AIConfigTargetingEnvironmentFallthroughRolloutVariation,
): string {
  return JSON.stringify(
    AIConfigTargetingEnvironmentFallthroughRolloutVariation$outboundSchema
      .parse(aiConfigTargetingEnvironmentFallthroughRolloutVariation),
  );
}

export function aiConfigTargetingEnvironmentFallthroughRolloutVariationFromJSON(
  jsonString: string,
): SafeParseResult<
  AIConfigTargetingEnvironmentFallthroughRolloutVariation,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AIConfigTargetingEnvironmentFallthroughRolloutVariation$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'AIConfigTargetingEnvironmentFallthroughRolloutVariation' from JSON`,
  );
}
