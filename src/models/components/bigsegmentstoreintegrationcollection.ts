/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BigSegmentStoreIntegration,
  BigSegmentStoreIntegration$inboundSchema,
  BigSegmentStoreIntegration$Outbound,
  BigSegmentStoreIntegration$outboundSchema,
} from "./bigsegmentstoreintegration.js";
import {
  BigSegmentStoreIntegrationCollectionLinks,
  BigSegmentStoreIntegrationCollectionLinks$inboundSchema,
  BigSegmentStoreIntegrationCollectionLinks$Outbound,
  BigSegmentStoreIntegrationCollectionLinks$outboundSchema,
} from "./bigsegmentstoreintegrationcollectionlinks.js";

export type BigSegmentStoreIntegrationCollection = {
  links: BigSegmentStoreIntegrationCollectionLinks;
  /**
   * An array of persistent store integration configurations
   */
  items: Array<BigSegmentStoreIntegration>;
};

/** @internal */
export const BigSegmentStoreIntegrationCollection$inboundSchema: z.ZodType<
  BigSegmentStoreIntegrationCollection,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: BigSegmentStoreIntegrationCollectionLinks$inboundSchema,
  items: z.array(BigSegmentStoreIntegration$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type BigSegmentStoreIntegrationCollection$Outbound = {
  _links: BigSegmentStoreIntegrationCollectionLinks$Outbound;
  items: Array<BigSegmentStoreIntegration$Outbound>;
};

/** @internal */
export const BigSegmentStoreIntegrationCollection$outboundSchema: z.ZodType<
  BigSegmentStoreIntegrationCollection$Outbound,
  z.ZodTypeDef,
  BigSegmentStoreIntegrationCollection
> = z.object({
  links: BigSegmentStoreIntegrationCollectionLinks$outboundSchema,
  items: z.array(BigSegmentStoreIntegration$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BigSegmentStoreIntegrationCollection$ {
  /** @deprecated use `BigSegmentStoreIntegrationCollection$inboundSchema` instead. */
  export const inboundSchema =
    BigSegmentStoreIntegrationCollection$inboundSchema;
  /** @deprecated use `BigSegmentStoreIntegrationCollection$outboundSchema` instead. */
  export const outboundSchema =
    BigSegmentStoreIntegrationCollection$outboundSchema;
  /** @deprecated use `BigSegmentStoreIntegrationCollection$Outbound` instead. */
  export type Outbound = BigSegmentStoreIntegrationCollection$Outbound;
}

export function bigSegmentStoreIntegrationCollectionToJSON(
  bigSegmentStoreIntegrationCollection: BigSegmentStoreIntegrationCollection,
): string {
  return JSON.stringify(
    BigSegmentStoreIntegrationCollection$outboundSchema.parse(
      bigSegmentStoreIntegrationCollection,
    ),
  );
}

export function bigSegmentStoreIntegrationCollectionFromJSON(
  jsonString: string,
): SafeParseResult<BigSegmentStoreIntegrationCollection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      BigSegmentStoreIntegrationCollection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BigSegmentStoreIntegrationCollection' from JSON`,
  );
}
