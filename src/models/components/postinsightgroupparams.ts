/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostInsightGroupParams = {
  /**
   * The name of the insight group
   */
  name: string;
  /**
   * The key of the insight group
   */
  key: string;
  /**
   * The projectKey to be associated with the insight group
   */
  projectKey: string;
  /**
   * The environmentKey to be associated with the insight group
   */
  environmentKey: string;
  /**
   * The application keys to associate with the insight group. If not provided, the insight group will include data from all applications.
   */
  applicationKeys?: Array<string> | undefined;
};

/** @internal */
export const PostInsightGroupParams$inboundSchema: z.ZodType<
  PostInsightGroupParams,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  key: z.string(),
  projectKey: z.string(),
  environmentKey: z.string(),
  applicationKeys: z.array(z.string()).optional(),
});

/** @internal */
export type PostInsightGroupParams$Outbound = {
  name: string;
  key: string;
  projectKey: string;
  environmentKey: string;
  applicationKeys?: Array<string> | undefined;
};

/** @internal */
export const PostInsightGroupParams$outboundSchema: z.ZodType<
  PostInsightGroupParams$Outbound,
  z.ZodTypeDef,
  PostInsightGroupParams
> = z.object({
  name: z.string(),
  key: z.string(),
  projectKey: z.string(),
  environmentKey: z.string(),
  applicationKeys: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostInsightGroupParams$ {
  /** @deprecated use `PostInsightGroupParams$inboundSchema` instead. */
  export const inboundSchema = PostInsightGroupParams$inboundSchema;
  /** @deprecated use `PostInsightGroupParams$outboundSchema` instead. */
  export const outboundSchema = PostInsightGroupParams$outboundSchema;
  /** @deprecated use `PostInsightGroupParams$Outbound` instead. */
  export type Outbound = PostInsightGroupParams$Outbound;
}

export function postInsightGroupParamsToJSON(
  postInsightGroupParams: PostInsightGroupParams,
): string {
  return JSON.stringify(
    PostInsightGroupParams$outboundSchema.parse(postInsightGroupParams),
  );
}

export function postInsightGroupParamsFromJSON(
  jsonString: string,
): SafeParseResult<PostInsightGroupParams, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostInsightGroupParams$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostInsightGroupParams' from JSON`,
  );
}
