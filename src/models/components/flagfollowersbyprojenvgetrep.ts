/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  FollowersPerFlag,
  FollowersPerFlag$inboundSchema,
  FollowersPerFlag$Outbound,
  FollowersPerFlag$outboundSchema,
} from "./followersperflag.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";

export type FlagFollowersByProjEnvGetRep = {
  /**
   * The location and content type of related resources
   */
  links: { [k: string]: Link };
  /**
   * An array of flags and their followers
   */
  items?: Array<FollowersPerFlag> | undefined;
};

/** @internal */
export const FlagFollowersByProjEnvGetRep$inboundSchema: z.ZodType<
  FlagFollowersByProjEnvGetRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.record(Link$inboundSchema),
  items: z.array(FollowersPerFlag$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type FlagFollowersByProjEnvGetRep$Outbound = {
  _links: { [k: string]: Link$Outbound };
  items?: Array<FollowersPerFlag$Outbound> | undefined;
};

/** @internal */
export const FlagFollowersByProjEnvGetRep$outboundSchema: z.ZodType<
  FlagFollowersByProjEnvGetRep$Outbound,
  z.ZodTypeDef,
  FlagFollowersByProjEnvGetRep
> = z.object({
  links: z.record(Link$outboundSchema),
  items: z.array(FollowersPerFlag$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlagFollowersByProjEnvGetRep$ {
  /** @deprecated use `FlagFollowersByProjEnvGetRep$inboundSchema` instead. */
  export const inboundSchema = FlagFollowersByProjEnvGetRep$inboundSchema;
  /** @deprecated use `FlagFollowersByProjEnvGetRep$outboundSchema` instead. */
  export const outboundSchema = FlagFollowersByProjEnvGetRep$outboundSchema;
  /** @deprecated use `FlagFollowersByProjEnvGetRep$Outbound` instead. */
  export type Outbound = FlagFollowersByProjEnvGetRep$Outbound;
}

export function flagFollowersByProjEnvGetRepToJSON(
  flagFollowersByProjEnvGetRep: FlagFollowersByProjEnvGetRep,
): string {
  return JSON.stringify(
    FlagFollowersByProjEnvGetRep$outboundSchema.parse(
      flagFollowersByProjEnvGetRep,
    ),
  );
}

export function flagFollowersByProjEnvGetRepFromJSON(
  jsonString: string,
): SafeParseResult<FlagFollowersByProjEnvGetRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FlagFollowersByProjEnvGetRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FlagFollowersByProjEnvGetRep' from JSON`,
  );
}
