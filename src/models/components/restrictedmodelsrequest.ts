/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RestrictedModelsRequest = {
  keys: Array<string>;
};

/** @internal */
export const RestrictedModelsRequest$inboundSchema: z.ZodType<
  RestrictedModelsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  keys: z.array(z.string()),
});

/** @internal */
export type RestrictedModelsRequest$Outbound = {
  keys: Array<string>;
};

/** @internal */
export const RestrictedModelsRequest$outboundSchema: z.ZodType<
  RestrictedModelsRequest$Outbound,
  z.ZodTypeDef,
  RestrictedModelsRequest
> = z.object({
  keys: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RestrictedModelsRequest$ {
  /** @deprecated use `RestrictedModelsRequest$inboundSchema` instead. */
  export const inboundSchema = RestrictedModelsRequest$inboundSchema;
  /** @deprecated use `RestrictedModelsRequest$outboundSchema` instead. */
  export const outboundSchema = RestrictedModelsRequest$outboundSchema;
  /** @deprecated use `RestrictedModelsRequest$Outbound` instead. */
  export type Outbound = RestrictedModelsRequest$Outbound;
}

export function restrictedModelsRequestToJSON(
  restrictedModelsRequest: RestrictedModelsRequest,
): string {
  return JSON.stringify(
    RestrictedModelsRequest$outboundSchema.parse(restrictedModelsRequest),
  );
}

export function restrictedModelsRequestFromJSON(
  jsonString: string,
): SafeParseResult<RestrictedModelsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RestrictedModelsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RestrictedModelsRequest' from JSON`,
  );
}
