/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ContextAttributeValues,
  ContextAttributeValues$inboundSchema,
  ContextAttributeValues$Outbound,
  ContextAttributeValues$outboundSchema,
} from "./contextattributevalues.js";

export type ContextAttributeValuesCollection = {
  /**
   * A collection of context attribute value data grouped by kind.
   */
  items: Array<ContextAttributeValues>;
};

/** @internal */
export const ContextAttributeValuesCollection$inboundSchema: z.ZodType<
  ContextAttributeValuesCollection,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(ContextAttributeValues$inboundSchema),
});

/** @internal */
export type ContextAttributeValuesCollection$Outbound = {
  items: Array<ContextAttributeValues$Outbound>;
};

/** @internal */
export const ContextAttributeValuesCollection$outboundSchema: z.ZodType<
  ContextAttributeValuesCollection$Outbound,
  z.ZodTypeDef,
  ContextAttributeValuesCollection
> = z.object({
  items: z.array(ContextAttributeValues$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ContextAttributeValuesCollection$ {
  /** @deprecated use `ContextAttributeValuesCollection$inboundSchema` instead. */
  export const inboundSchema = ContextAttributeValuesCollection$inboundSchema;
  /** @deprecated use `ContextAttributeValuesCollection$outboundSchema` instead. */
  export const outboundSchema = ContextAttributeValuesCollection$outboundSchema;
  /** @deprecated use `ContextAttributeValuesCollection$Outbound` instead. */
  export type Outbound = ContextAttributeValuesCollection$Outbound;
}

export function contextAttributeValuesCollectionToJSON(
  contextAttributeValuesCollection: ContextAttributeValuesCollection,
): string {
  return JSON.stringify(
    ContextAttributeValuesCollection$outboundSchema.parse(
      contextAttributeValuesCollection,
    ),
  );
}

export function contextAttributeValuesCollectionFromJSON(
  jsonString: string,
): SafeParseResult<ContextAttributeValuesCollection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ContextAttributeValuesCollection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ContextAttributeValuesCollection' from JSON`,
  );
}
