/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FlagConfigMigrationSettingsRep = {
  checkRatio?: number | undefined;
};

/** @internal */
export const FlagConfigMigrationSettingsRep$inboundSchema: z.ZodType<
  FlagConfigMigrationSettingsRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  checkRatio: z.number().int().optional(),
});

/** @internal */
export type FlagConfigMigrationSettingsRep$Outbound = {
  checkRatio?: number | undefined;
};

/** @internal */
export const FlagConfigMigrationSettingsRep$outboundSchema: z.ZodType<
  FlagConfigMigrationSettingsRep$Outbound,
  z.ZodTypeDef,
  FlagConfigMigrationSettingsRep
> = z.object({
  checkRatio: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlagConfigMigrationSettingsRep$ {
  /** @deprecated use `FlagConfigMigrationSettingsRep$inboundSchema` instead. */
  export const inboundSchema = FlagConfigMigrationSettingsRep$inboundSchema;
  /** @deprecated use `FlagConfigMigrationSettingsRep$outboundSchema` instead. */
  export const outboundSchema = FlagConfigMigrationSettingsRep$outboundSchema;
  /** @deprecated use `FlagConfigMigrationSettingsRep$Outbound` instead. */
  export type Outbound = FlagConfigMigrationSettingsRep$Outbound;
}

export function flagConfigMigrationSettingsRepToJSON(
  flagConfigMigrationSettingsRep: FlagConfigMigrationSettingsRep,
): string {
  return JSON.stringify(
    FlagConfigMigrationSettingsRep$outboundSchema.parse(
      flagConfigMigrationSettingsRep,
    ),
  );
}

export function flagConfigMigrationSettingsRepFromJSON(
  jsonString: string,
): SafeParseResult<FlagConfigMigrationSettingsRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FlagConfigMigrationSettingsRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FlagConfigMigrationSettingsRep' from JSON`,
  );
}
