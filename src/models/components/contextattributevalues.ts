/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ContextAttributeValue,
  ContextAttributeValue$inboundSchema,
  ContextAttributeValue$Outbound,
  ContextAttributeValue$outboundSchema,
} from "./contextattributevalue.js";

export type ContextAttributeValues = {
  /**
   * The kind associated with this collection of context attribute values.
   */
  kind: string;
  /**
   * A collection of context attribute values.
   */
  values: Array<ContextAttributeValue>;
};

/** @internal */
export const ContextAttributeValues$inboundSchema: z.ZodType<
  ContextAttributeValues,
  z.ZodTypeDef,
  unknown
> = z.object({
  kind: z.string(),
  values: z.array(ContextAttributeValue$inboundSchema),
});

/** @internal */
export type ContextAttributeValues$Outbound = {
  kind: string;
  values: Array<ContextAttributeValue$Outbound>;
};

/** @internal */
export const ContextAttributeValues$outboundSchema: z.ZodType<
  ContextAttributeValues$Outbound,
  z.ZodTypeDef,
  ContextAttributeValues
> = z.object({
  kind: z.string(),
  values: z.array(ContextAttributeValue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ContextAttributeValues$ {
  /** @deprecated use `ContextAttributeValues$inboundSchema` instead. */
  export const inboundSchema = ContextAttributeValues$inboundSchema;
  /** @deprecated use `ContextAttributeValues$outboundSchema` instead. */
  export const outboundSchema = ContextAttributeValues$outboundSchema;
  /** @deprecated use `ContextAttributeValues$Outbound` instead. */
  export type Outbound = ContextAttributeValues$Outbound;
}

export function contextAttributeValuesToJSON(
  contextAttributeValues: ContextAttributeValues,
): string {
  return JSON.stringify(
    ContextAttributeValues$outboundSchema.parse(contextAttributeValues),
  );
}

export function contextAttributeValuesFromJSON(
  jsonString: string,
): SafeParseResult<ContextAttributeValues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ContextAttributeValues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ContextAttributeValues' from JSON`,
  );
}
