/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  FlagImportIntegration,
  FlagImportIntegration$inboundSchema,
  FlagImportIntegration$Outbound,
  FlagImportIntegration$outboundSchema,
} from "./flagimportintegration.js";
import {
  FlagImportIntegrationCollectionLinks,
  FlagImportIntegrationCollectionLinks$inboundSchema,
  FlagImportIntegrationCollectionLinks$Outbound,
  FlagImportIntegrationCollectionLinks$outboundSchema,
} from "./flagimportintegrationcollectionlinks.js";

export type FlagImportIntegrationCollection = {
  links: FlagImportIntegrationCollectionLinks;
  /**
   * An array of flag import configurations
   */
  items: Array<FlagImportIntegration>;
};

/** @internal */
export const FlagImportIntegrationCollection$inboundSchema: z.ZodType<
  FlagImportIntegrationCollection,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: FlagImportIntegrationCollectionLinks$inboundSchema,
  items: z.array(FlagImportIntegration$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type FlagImportIntegrationCollection$Outbound = {
  _links: FlagImportIntegrationCollectionLinks$Outbound;
  items: Array<FlagImportIntegration$Outbound>;
};

/** @internal */
export const FlagImportIntegrationCollection$outboundSchema: z.ZodType<
  FlagImportIntegrationCollection$Outbound,
  z.ZodTypeDef,
  FlagImportIntegrationCollection
> = z.object({
  links: FlagImportIntegrationCollectionLinks$outboundSchema,
  items: z.array(FlagImportIntegration$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlagImportIntegrationCollection$ {
  /** @deprecated use `FlagImportIntegrationCollection$inboundSchema` instead. */
  export const inboundSchema = FlagImportIntegrationCollection$inboundSchema;
  /** @deprecated use `FlagImportIntegrationCollection$outboundSchema` instead. */
  export const outboundSchema = FlagImportIntegrationCollection$outboundSchema;
  /** @deprecated use `FlagImportIntegrationCollection$Outbound` instead. */
  export type Outbound = FlagImportIntegrationCollection$Outbound;
}

export function flagImportIntegrationCollectionToJSON(
  flagImportIntegrationCollection: FlagImportIntegrationCollection,
): string {
  return JSON.stringify(
    FlagImportIntegrationCollection$outboundSchema.parse(
      flagImportIntegrationCollection,
    ),
  );
}

export function flagImportIntegrationCollectionFromJSON(
  jsonString: string,
): SafeParseResult<FlagImportIntegrationCollection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FlagImportIntegrationCollection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FlagImportIntegrationCollection' from JSON`,
  );
}
