/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Statement,
  Statement$inboundSchema,
  Statement$Outbound,
  Statement$outboundSchema,
} from "./statement.js";

export type RelayAutoConfigPost = {
  /**
   * A human-friendly name for the Relay Proxy configuration
   */
  name: string;
  /**
   * A description of what environments and projects the Relay Proxy should include or exclude. To learn more, read [Write an inline policy](https://launchdarkly.com/docs/sdk/relay-proxy/automatic-configuration#write-an-inline-policy).
   */
  policy: Array<Statement>;
};

/** @internal */
export const RelayAutoConfigPost$inboundSchema: z.ZodType<
  RelayAutoConfigPost,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  policy: z.array(Statement$inboundSchema),
});

/** @internal */
export type RelayAutoConfigPost$Outbound = {
  name: string;
  policy: Array<Statement$Outbound>;
};

/** @internal */
export const RelayAutoConfigPost$outboundSchema: z.ZodType<
  RelayAutoConfigPost$Outbound,
  z.ZodTypeDef,
  RelayAutoConfigPost
> = z.object({
  name: z.string(),
  policy: z.array(Statement$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RelayAutoConfigPost$ {
  /** @deprecated use `RelayAutoConfigPost$inboundSchema` instead. */
  export const inboundSchema = RelayAutoConfigPost$inboundSchema;
  /** @deprecated use `RelayAutoConfigPost$outboundSchema` instead. */
  export const outboundSchema = RelayAutoConfigPost$outboundSchema;
  /** @deprecated use `RelayAutoConfigPost$Outbound` instead. */
  export type Outbound = RelayAutoConfigPost$Outbound;
}

export function relayAutoConfigPostToJSON(
  relayAutoConfigPost: RelayAutoConfigPost,
): string {
  return JSON.stringify(
    RelayAutoConfigPost$outboundSchema.parse(relayAutoConfigPost),
  );
}

export function relayAutoConfigPostFromJSON(
  jsonString: string,
): SafeParseResult<RelayAutoConfigPost, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RelayAutoConfigPost$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RelayAutoConfigPost' from JSON`,
  );
}
