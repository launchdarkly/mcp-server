/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type LeadTimeStagesRep = {
  /**
   * The coding duration in milliseconds
   */
  codingDurationMs: number;
  /**
   * The review duration in milliseconds
   */
  reviewDurationMs?: number | undefined;
  /**
   * The wait duration between merge time and deploy start time in milliseconds
   */
  waitDurationMs?: number | undefined;
  /**
   * The deploy duration in milliseconds
   */
  deployDurationMs?: number | undefined;
  /**
   * The total lead time in milliseconds
   */
  totalLeadTimeMs?: number | undefined;
};

/** @internal */
export const LeadTimeStagesRep$inboundSchema: z.ZodType<
  LeadTimeStagesRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  codingDurationMs: z.number().int(),
  reviewDurationMs: z.number().int().optional(),
  waitDurationMs: z.number().int().optional(),
  deployDurationMs: z.number().int().optional(),
  totalLeadTimeMs: z.number().int().optional(),
});

/** @internal */
export type LeadTimeStagesRep$Outbound = {
  codingDurationMs: number;
  reviewDurationMs?: number | undefined;
  waitDurationMs?: number | undefined;
  deployDurationMs?: number | undefined;
  totalLeadTimeMs?: number | undefined;
};

/** @internal */
export const LeadTimeStagesRep$outboundSchema: z.ZodType<
  LeadTimeStagesRep$Outbound,
  z.ZodTypeDef,
  LeadTimeStagesRep
> = z.object({
  codingDurationMs: z.number().int(),
  reviewDurationMs: z.number().int().optional(),
  waitDurationMs: z.number().int().optional(),
  deployDurationMs: z.number().int().optional(),
  totalLeadTimeMs: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LeadTimeStagesRep$ {
  /** @deprecated use `LeadTimeStagesRep$inboundSchema` instead. */
  export const inboundSchema = LeadTimeStagesRep$inboundSchema;
  /** @deprecated use `LeadTimeStagesRep$outboundSchema` instead. */
  export const outboundSchema = LeadTimeStagesRep$outboundSchema;
  /** @deprecated use `LeadTimeStagesRep$Outbound` instead. */
  export type Outbound = LeadTimeStagesRep$Outbound;
}

export function leadTimeStagesRepToJSON(
  leadTimeStagesRep: LeadTimeStagesRep,
): string {
  return JSON.stringify(
    LeadTimeStagesRep$outboundSchema.parse(leadTimeStagesRep),
  );
}

export function leadTimeStagesRepFromJSON(
  jsonString: string,
): SafeParseResult<LeadTimeStagesRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LeadTimeStagesRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LeadTimeStagesRep' from JSON`,
  );
}
