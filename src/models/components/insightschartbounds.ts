/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type InsightsChartBounds = {
  /**
   * Name of the bound
   */
  name: string;
  /**
   * Value of the bound
   */
  value: number;
};

/** @internal */
export const InsightsChartBounds$inboundSchema: z.ZodType<
  InsightsChartBounds,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  value: z.number().int(),
});

/** @internal */
export type InsightsChartBounds$Outbound = {
  name: string;
  value: number;
};

/** @internal */
export const InsightsChartBounds$outboundSchema: z.ZodType<
  InsightsChartBounds$Outbound,
  z.ZodTypeDef,
  InsightsChartBounds
> = z.object({
  name: z.string(),
  value: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InsightsChartBounds$ {
  /** @deprecated use `InsightsChartBounds$inboundSchema` instead. */
  export const inboundSchema = InsightsChartBounds$inboundSchema;
  /** @deprecated use `InsightsChartBounds$outboundSchema` instead. */
  export const outboundSchema = InsightsChartBounds$outboundSchema;
  /** @deprecated use `InsightsChartBounds$Outbound` instead. */
  export type Outbound = InsightsChartBounds$Outbound;
}

export function insightsChartBoundsToJSON(
  insightsChartBounds: InsightsChartBounds,
): string {
  return JSON.stringify(
    InsightsChartBounds$outboundSchema.parse(insightsChartBounds),
  );
}

export function insightsChartBoundsFromJSON(
  jsonString: string,
): SafeParseResult<InsightsChartBounds, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InsightsChartBounds$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InsightsChartBounds' from JSON`,
  );
}
