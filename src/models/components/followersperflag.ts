/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  FollowFlagMember,
  FollowFlagMember$inboundSchema,
  FollowFlagMember$Outbound,
  FollowFlagMember$outboundSchema,
} from "./followflagmember.js";

export type FollowersPerFlag = {
  /**
   * The flag key
   */
  flagKey?: string | undefined;
  /**
   * A list of members who are following this flag
   */
  followers?: Array<FollowFlagMember> | undefined;
};

/** @internal */
export const FollowersPerFlag$inboundSchema: z.ZodType<
  FollowersPerFlag,
  z.ZodTypeDef,
  unknown
> = z.object({
  flagKey: z.string().optional(),
  followers: z.array(FollowFlagMember$inboundSchema).optional(),
});

/** @internal */
export type FollowersPerFlag$Outbound = {
  flagKey?: string | undefined;
  followers?: Array<FollowFlagMember$Outbound> | undefined;
};

/** @internal */
export const FollowersPerFlag$outboundSchema: z.ZodType<
  FollowersPerFlag$Outbound,
  z.ZodTypeDef,
  FollowersPerFlag
> = z.object({
  flagKey: z.string().optional(),
  followers: z.array(FollowFlagMember$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FollowersPerFlag$ {
  /** @deprecated use `FollowersPerFlag$inboundSchema` instead. */
  export const inboundSchema = FollowersPerFlag$inboundSchema;
  /** @deprecated use `FollowersPerFlag$outboundSchema` instead. */
  export const outboundSchema = FollowersPerFlag$outboundSchema;
  /** @deprecated use `FollowersPerFlag$Outbound` instead. */
  export type Outbound = FollowersPerFlag$Outbound;
}

export function followersPerFlagToJSON(
  followersPerFlag: FollowersPerFlag,
): string {
  return JSON.stringify(
    FollowersPerFlag$outboundSchema.parse(followersPerFlag),
  );
}

export function followersPerFlagFromJSON(
  jsonString: string,
): SafeParseResult<FollowersPerFlag, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FollowersPerFlag$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FollowersPerFlag' from JSON`,
  );
}
