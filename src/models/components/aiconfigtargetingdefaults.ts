/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AIConfigTargetingDefaults = {
  onVariation: number;
  offVariation: number;
};

/** @internal */
export const AIConfigTargetingDefaults$inboundSchema: z.ZodType<
  AIConfigTargetingDefaults,
  z.ZodTypeDef,
  unknown
> = z.object({
  onVariation: z.number().int(),
  offVariation: z.number().int(),
});

/** @internal */
export type AIConfigTargetingDefaults$Outbound = {
  onVariation: number;
  offVariation: number;
};

/** @internal */
export const AIConfigTargetingDefaults$outboundSchema: z.ZodType<
  AIConfigTargetingDefaults$Outbound,
  z.ZodTypeDef,
  AIConfigTargetingDefaults
> = z.object({
  onVariation: z.number().int(),
  offVariation: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AIConfigTargetingDefaults$ {
  /** @deprecated use `AIConfigTargetingDefaults$inboundSchema` instead. */
  export const inboundSchema = AIConfigTargetingDefaults$inboundSchema;
  /** @deprecated use `AIConfigTargetingDefaults$outboundSchema` instead. */
  export const outboundSchema = AIConfigTargetingDefaults$outboundSchema;
  /** @deprecated use `AIConfigTargetingDefaults$Outbound` instead. */
  export type Outbound = AIConfigTargetingDefaults$Outbound;
}

export function aiConfigTargetingDefaultsToJSON(
  aiConfigTargetingDefaults: AIConfigTargetingDefaults,
): string {
  return JSON.stringify(
    AIConfigTargetingDefaults$outboundSchema.parse(aiConfigTargetingDefaults),
  );
}

export function aiConfigTargetingDefaultsFromJSON(
  jsonString: string,
): SafeParseResult<AIConfigTargetingDefaults, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AIConfigTargetingDefaults$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AIConfigTargetingDefaults' from JSON`,
  );
}
