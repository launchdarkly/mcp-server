/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AIConfigTargetingVariationJSON,
  AIConfigTargetingVariationJSON$inboundSchema,
  AIConfigTargetingVariationJSON$Outbound,
  AIConfigTargetingVariationJSON$outboundSchema,
} from "./aiconfigtargetingvariationjson.js";

export type AIConfigTargetingVariationValue =
  | AIConfigTargetingVariationJSON
  | boolean
  | number
  | string;

/** @internal */
export const AIConfigTargetingVariationValue$inboundSchema: z.ZodType<
  AIConfigTargetingVariationValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  AIConfigTargetingVariationJSON$inboundSchema,
  z.boolean(),
  z.number(),
  z.string(),
]);

/** @internal */
export type AIConfigTargetingVariationValue$Outbound =
  | AIConfigTargetingVariationJSON$Outbound
  | boolean
  | number
  | string;

/** @internal */
export const AIConfigTargetingVariationValue$outboundSchema: z.ZodType<
  AIConfigTargetingVariationValue$Outbound,
  z.ZodTypeDef,
  AIConfigTargetingVariationValue
> = z.union([
  AIConfigTargetingVariationJSON$outboundSchema,
  z.boolean(),
  z.number(),
  z.string(),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AIConfigTargetingVariationValue$ {
  /** @deprecated use `AIConfigTargetingVariationValue$inboundSchema` instead. */
  export const inboundSchema = AIConfigTargetingVariationValue$inboundSchema;
  /** @deprecated use `AIConfigTargetingVariationValue$outboundSchema` instead. */
  export const outboundSchema = AIConfigTargetingVariationValue$outboundSchema;
  /** @deprecated use `AIConfigTargetingVariationValue$Outbound` instead. */
  export type Outbound = AIConfigTargetingVariationValue$Outbound;
}

export function aiConfigTargetingVariationValueToJSON(
  aiConfigTargetingVariationValue: AIConfigTargetingVariationValue,
): string {
  return JSON.stringify(
    AIConfigTargetingVariationValue$outboundSchema.parse(
      aiConfigTargetingVariationValue,
    ),
  );
}

export function aiConfigTargetingVariationValueFromJSON(
  jsonString: string,
): SafeParseResult<AIConfigTargetingVariationValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AIConfigTargetingVariationValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AIConfigTargetingVariationValue' from JSON`,
  );
}
