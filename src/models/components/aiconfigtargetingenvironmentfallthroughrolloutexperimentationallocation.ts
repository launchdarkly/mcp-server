/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation =
  {
    canReshuffle: boolean;
    defaultVariation: number;
    type: string;
  };

/** @internal */
export const AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$inboundSchema:
  z.ZodType<
    AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation,
    z.ZodTypeDef,
    unknown
  > = z.object({
    canReshuffle: z.boolean(),
    defaultVariation: z.number().int(),
    type: z.string(),
  });

/** @internal */
export type AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$Outbound =
  {
    canReshuffle: boolean;
    defaultVariation: number;
    type: string;
  };

/** @internal */
export const AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$outboundSchema:
  z.ZodType<
    AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$Outbound,
    z.ZodTypeDef,
    AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation
  > = z.object({
    canReshuffle: z.boolean(),
    defaultVariation: z.number().int(),
    type: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$ {
  /** @deprecated use `AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$inboundSchema` instead. */
  export const inboundSchema =
    AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$inboundSchema;
  /** @deprecated use `AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$outboundSchema` instead. */
  export const outboundSchema =
    AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$outboundSchema;
  /** @deprecated use `AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$Outbound` instead. */
  export type Outbound =
    AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$Outbound;
}

export function aiConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocationToJSON(
  aiConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation:
    AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation,
): string {
  return JSON.stringify(
    AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$outboundSchema
      .parse(
        aiConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation,
      ),
  );
}

export function aiConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocationFromJSON(
  jsonString: string,
): SafeParseResult<
  AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'AIConfigTargetingEnvironmentFallthroughRolloutExperimentationAllocation' from JSON`,
  );
}
