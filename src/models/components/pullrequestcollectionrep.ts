/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";
import {
  PullRequestRep,
  PullRequestRep$inboundSchema,
  PullRequestRep$Outbound,
  PullRequestRep$outboundSchema,
} from "./pullrequestrep.js";

export type PullRequestCollectionRep = {
  /**
   * The total number of pull requests
   */
  totalCount: number;
  /**
   * A list of pull requests
   */
  items: Array<PullRequestRep>;
  /**
   * The location and content type of related resources
   */
  links?: { [k: string]: Link } | undefined;
};

/** @internal */
export const PullRequestCollectionRep$inboundSchema: z.ZodType<
  PullRequestCollectionRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  totalCount: z.number().int(),
  items: z.array(z.lazy(() => PullRequestRep$inboundSchema)),
  _links: z.record(Link$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type PullRequestCollectionRep$Outbound = {
  totalCount: number;
  items: Array<PullRequestRep$Outbound>;
  _links?: { [k: string]: Link$Outbound } | undefined;
};

/** @internal */
export const PullRequestCollectionRep$outboundSchema: z.ZodType<
  PullRequestCollectionRep$Outbound,
  z.ZodTypeDef,
  PullRequestCollectionRep
> = z.object({
  totalCount: z.number().int(),
  items: z.array(z.lazy(() => PullRequestRep$outboundSchema)),
  links: z.record(Link$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PullRequestCollectionRep$ {
  /** @deprecated use `PullRequestCollectionRep$inboundSchema` instead. */
  export const inboundSchema = PullRequestCollectionRep$inboundSchema;
  /** @deprecated use `PullRequestCollectionRep$outboundSchema` instead. */
  export const outboundSchema = PullRequestCollectionRep$outboundSchema;
  /** @deprecated use `PullRequestCollectionRep$Outbound` instead. */
  export type Outbound = PullRequestCollectionRep$Outbound;
}

export function pullRequestCollectionRepToJSON(
  pullRequestCollectionRep: PullRequestCollectionRep,
): string {
  return JSON.stringify(
    PullRequestCollectionRep$outboundSchema.parse(pullRequestCollectionRep),
  );
}

export function pullRequestCollectionRepFromJSON(
  jsonString: string,
): SafeParseResult<PullRequestCollectionRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PullRequestCollectionRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PullRequestCollectionRep' from JSON`,
  );
}
