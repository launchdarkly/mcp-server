/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AIConfigTargetingEnvironmentRuleClause,
  AIConfigTargetingEnvironmentRuleClause$inboundSchema,
  AIConfigTargetingEnvironmentRuleClause$Outbound,
  AIConfigTargetingEnvironmentRuleClause$outboundSchema,
} from "./aiconfigtargetingenvironmentruleclause.js";

export type AIConfigTargetingEnvironmentRule = {
  clauses: Array<AIConfigTargetingEnvironmentRuleClause>;
  trackEvents: boolean;
};

/** @internal */
export const AIConfigTargetingEnvironmentRule$inboundSchema: z.ZodType<
  AIConfigTargetingEnvironmentRule,
  z.ZodTypeDef,
  unknown
> = z.object({
  clauses: z.array(AIConfigTargetingEnvironmentRuleClause$inboundSchema),
  trackEvents: z.boolean(),
});

/** @internal */
export type AIConfigTargetingEnvironmentRule$Outbound = {
  clauses: Array<AIConfigTargetingEnvironmentRuleClause$Outbound>;
  trackEvents: boolean;
};

/** @internal */
export const AIConfigTargetingEnvironmentRule$outboundSchema: z.ZodType<
  AIConfigTargetingEnvironmentRule$Outbound,
  z.ZodTypeDef,
  AIConfigTargetingEnvironmentRule
> = z.object({
  clauses: z.array(AIConfigTargetingEnvironmentRuleClause$outboundSchema),
  trackEvents: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AIConfigTargetingEnvironmentRule$ {
  /** @deprecated use `AIConfigTargetingEnvironmentRule$inboundSchema` instead. */
  export const inboundSchema = AIConfigTargetingEnvironmentRule$inboundSchema;
  /** @deprecated use `AIConfigTargetingEnvironmentRule$outboundSchema` instead. */
  export const outboundSchema = AIConfigTargetingEnvironmentRule$outboundSchema;
  /** @deprecated use `AIConfigTargetingEnvironmentRule$Outbound` instead. */
  export type Outbound = AIConfigTargetingEnvironmentRule$Outbound;
}

export function aiConfigTargetingEnvironmentRuleToJSON(
  aiConfigTargetingEnvironmentRule: AIConfigTargetingEnvironmentRule,
): string {
  return JSON.stringify(
    AIConfigTargetingEnvironmentRule$outboundSchema.parse(
      aiConfigTargetingEnvironmentRule,
    ),
  );
}

export function aiConfigTargetingEnvironmentRuleFromJSON(
  jsonString: string,
): SafeParseResult<AIConfigTargetingEnvironmentRule, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AIConfigTargetingEnvironmentRule$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AIConfigTargetingEnvironmentRule' from JSON`,
  );
}
