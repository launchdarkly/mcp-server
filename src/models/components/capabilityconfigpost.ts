/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ApprovalsCapabilityConfig,
  ApprovalsCapabilityConfig$inboundSchema,
  ApprovalsCapabilityConfig$Outbound,
  ApprovalsCapabilityConfig$outboundSchema,
} from "./approvalscapabilityconfig.js";
import {
  AuditLogEventsHookCapabilityConfigPost,
  AuditLogEventsHookCapabilityConfigPost$inboundSchema,
  AuditLogEventsHookCapabilityConfigPost$Outbound,
  AuditLogEventsHookCapabilityConfigPost$outboundSchema,
} from "./auditlogeventshookcapabilityconfigpost.js";

export type CapabilityConfigPost = {
  approvals?: ApprovalsCapabilityConfig | undefined;
  auditLogEventsHook?: AuditLogEventsHookCapabilityConfigPost | undefined;
};

/** @internal */
export const CapabilityConfigPost$inboundSchema: z.ZodType<
  CapabilityConfigPost,
  z.ZodTypeDef,
  unknown
> = z.object({
  approvals: ApprovalsCapabilityConfig$inboundSchema.optional(),
  auditLogEventsHook: AuditLogEventsHookCapabilityConfigPost$inboundSchema
    .optional(),
});

/** @internal */
export type CapabilityConfigPost$Outbound = {
  approvals?: ApprovalsCapabilityConfig$Outbound | undefined;
  auditLogEventsHook?:
    | AuditLogEventsHookCapabilityConfigPost$Outbound
    | undefined;
};

/** @internal */
export const CapabilityConfigPost$outboundSchema: z.ZodType<
  CapabilityConfigPost$Outbound,
  z.ZodTypeDef,
  CapabilityConfigPost
> = z.object({
  approvals: ApprovalsCapabilityConfig$outboundSchema.optional(),
  auditLogEventsHook: AuditLogEventsHookCapabilityConfigPost$outboundSchema
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CapabilityConfigPost$ {
  /** @deprecated use `CapabilityConfigPost$inboundSchema` instead. */
  export const inboundSchema = CapabilityConfigPost$inboundSchema;
  /** @deprecated use `CapabilityConfigPost$outboundSchema` instead. */
  export const outboundSchema = CapabilityConfigPost$outboundSchema;
  /** @deprecated use `CapabilityConfigPost$Outbound` instead. */
  export type Outbound = CapabilityConfigPost$Outbound;
}

export function capabilityConfigPostToJSON(
  capabilityConfigPost: CapabilityConfigPost,
): string {
  return JSON.stringify(
    CapabilityConfigPost$outboundSchema.parse(capabilityConfigPost),
  );
}

export function capabilityConfigPostFromJSON(
  jsonString: string,
): SafeParseResult<CapabilityConfigPost, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CapabilityConfigPost$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CapabilityConfigPost' from JSON`,
  );
}
