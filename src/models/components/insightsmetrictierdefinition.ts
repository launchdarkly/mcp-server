/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type InsightsMetricTierDefinition = {
  /**
   * Metric indicator tier
   */
  indicator: string;
  /**
   * Metric indicator description
   */
  description: string;
};

/** @internal */
export const InsightsMetricTierDefinition$inboundSchema: z.ZodType<
  InsightsMetricTierDefinition,
  z.ZodTypeDef,
  unknown
> = z.object({
  indicator: z.string(),
  description: z.string(),
});

/** @internal */
export type InsightsMetricTierDefinition$Outbound = {
  indicator: string;
  description: string;
};

/** @internal */
export const InsightsMetricTierDefinition$outboundSchema: z.ZodType<
  InsightsMetricTierDefinition$Outbound,
  z.ZodTypeDef,
  InsightsMetricTierDefinition
> = z.object({
  indicator: z.string(),
  description: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InsightsMetricTierDefinition$ {
  /** @deprecated use `InsightsMetricTierDefinition$inboundSchema` instead. */
  export const inboundSchema = InsightsMetricTierDefinition$inboundSchema;
  /** @deprecated use `InsightsMetricTierDefinition$outboundSchema` instead. */
  export const outboundSchema = InsightsMetricTierDefinition$outboundSchema;
  /** @deprecated use `InsightsMetricTierDefinition$Outbound` instead. */
  export type Outbound = InsightsMetricTierDefinition$Outbound;
}

export function insightsMetricTierDefinitionToJSON(
  insightsMetricTierDefinition: InsightsMetricTierDefinition,
): string {
  return JSON.stringify(
    InsightsMetricTierDefinition$outboundSchema.parse(
      insightsMetricTierDefinition,
    ),
  );
}

export function insightsMetricTierDefinitionFromJSON(
  jsonString: string,
): SafeParseResult<InsightsMetricTierDefinition, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InsightsMetricTierDefinition$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InsightsMetricTierDefinition' from JSON`,
  );
}
