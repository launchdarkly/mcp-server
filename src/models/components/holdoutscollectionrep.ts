/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";
import {
  SimpleHoldoutRep,
  SimpleHoldoutRep$inboundSchema,
  SimpleHoldoutRep$Outbound,
  SimpleHoldoutRep$outboundSchema,
} from "./simpleholdoutrep.js";

export type HoldoutsCollectionRep = {
  items?: Array<SimpleHoldoutRep> | undefined;
  /**
   * The location and content type of related resources
   */
  links?: { [k: string]: Link } | undefined;
  /**
   * The total number of holdouts in this project and environment.
   */
  totalCount?: number | undefined;
};

/** @internal */
export const HoldoutsCollectionRep$inboundSchema: z.ZodType<
  HoldoutsCollectionRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(SimpleHoldoutRep$inboundSchema).optional(),
  _links: z.record(Link$inboundSchema).optional(),
  total_count: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
    "total_count": "totalCount",
  });
});

/** @internal */
export type HoldoutsCollectionRep$Outbound = {
  items?: Array<SimpleHoldoutRep$Outbound> | undefined;
  _links?: { [k: string]: Link$Outbound } | undefined;
  total_count?: number | undefined;
};

/** @internal */
export const HoldoutsCollectionRep$outboundSchema: z.ZodType<
  HoldoutsCollectionRep$Outbound,
  z.ZodTypeDef,
  HoldoutsCollectionRep
> = z.object({
  items: z.array(SimpleHoldoutRep$outboundSchema).optional(),
  links: z.record(Link$outboundSchema).optional(),
  totalCount: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
    totalCount: "total_count",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HoldoutsCollectionRep$ {
  /** @deprecated use `HoldoutsCollectionRep$inboundSchema` instead. */
  export const inboundSchema = HoldoutsCollectionRep$inboundSchema;
  /** @deprecated use `HoldoutsCollectionRep$outboundSchema` instead. */
  export const outboundSchema = HoldoutsCollectionRep$outboundSchema;
  /** @deprecated use `HoldoutsCollectionRep$Outbound` instead. */
  export type Outbound = HoldoutsCollectionRep$Outbound;
}

export function holdoutsCollectionRepToJSON(
  holdoutsCollectionRep: HoldoutsCollectionRep,
): string {
  return JSON.stringify(
    HoldoutsCollectionRep$outboundSchema.parse(holdoutsCollectionRep),
  );
}

export function holdoutsCollectionRepFromJSON(
  jsonString: string,
): SafeParseResult<HoldoutsCollectionRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HoldoutsCollectionRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HoldoutsCollectionRep' from JSON`,
  );
}
