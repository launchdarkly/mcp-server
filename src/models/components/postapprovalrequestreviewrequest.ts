/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The type of review for this approval request
 */
export const PostApprovalRequestReviewRequestKind = {
  Approve: "approve",
  Comment: "comment",
  Decline: "decline",
} as const;
/**
 * The type of review for this approval request
 */
export type PostApprovalRequestReviewRequestKind = ClosedEnum<
  typeof PostApprovalRequestReviewRequestKind
>;

export type PostApprovalRequestReviewRequest = {
  /**
   * The type of review for this approval request
   */
  kind?: PostApprovalRequestReviewRequestKind | undefined;
  /**
   * Optional comment about the approval request
   */
  comment?: string | undefined;
};

/** @internal */
export const PostApprovalRequestReviewRequestKind$inboundSchema:
  z.ZodNativeEnum<typeof PostApprovalRequestReviewRequestKind> = z.nativeEnum(
    PostApprovalRequestReviewRequestKind,
  );

/** @internal */
export const PostApprovalRequestReviewRequestKind$outboundSchema:
  z.ZodNativeEnum<typeof PostApprovalRequestReviewRequestKind> =
    PostApprovalRequestReviewRequestKind$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApprovalRequestReviewRequestKind$ {
  /** @deprecated use `PostApprovalRequestReviewRequestKind$inboundSchema` instead. */
  export const inboundSchema =
    PostApprovalRequestReviewRequestKind$inboundSchema;
  /** @deprecated use `PostApprovalRequestReviewRequestKind$outboundSchema` instead. */
  export const outboundSchema =
    PostApprovalRequestReviewRequestKind$outboundSchema;
}

/** @internal */
export const PostApprovalRequestReviewRequest$inboundSchema: z.ZodType<
  PostApprovalRequestReviewRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  kind: PostApprovalRequestReviewRequestKind$inboundSchema.optional(),
  comment: z.string().optional(),
});

/** @internal */
export type PostApprovalRequestReviewRequest$Outbound = {
  kind?: string | undefined;
  comment?: string | undefined;
};

/** @internal */
export const PostApprovalRequestReviewRequest$outboundSchema: z.ZodType<
  PostApprovalRequestReviewRequest$Outbound,
  z.ZodTypeDef,
  PostApprovalRequestReviewRequest
> = z.object({
  kind: PostApprovalRequestReviewRequestKind$outboundSchema.optional(),
  comment: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApprovalRequestReviewRequest$ {
  /** @deprecated use `PostApprovalRequestReviewRequest$inboundSchema` instead. */
  export const inboundSchema = PostApprovalRequestReviewRequest$inboundSchema;
  /** @deprecated use `PostApprovalRequestReviewRequest$outboundSchema` instead. */
  export const outboundSchema = PostApprovalRequestReviewRequest$outboundSchema;
  /** @deprecated use `PostApprovalRequestReviewRequest$Outbound` instead. */
  export type Outbound = PostApprovalRequestReviewRequest$Outbound;
}

export function postApprovalRequestReviewRequestToJSON(
  postApprovalRequestReviewRequest: PostApprovalRequestReviewRequest,
): string {
  return JSON.stringify(
    PostApprovalRequestReviewRequest$outboundSchema.parse(
      postApprovalRequestReviewRequest,
    ),
  );
}

export function postApprovalRequestReviewRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostApprovalRequestReviewRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApprovalRequestReviewRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApprovalRequestReviewRequest' from JSON`,
  );
}
