/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PullRequestLeadTimeRep = {
  /**
   * The coding duration in milliseconds
   */
  codingDurationMs: number;
  /**
   * The review duration in milliseconds
   */
  reviewDurationMs?: number | undefined;
  /**
   * The max wait duration between merge time and deploy start time in milliseconds
   */
  maxWaitDurationMs?: number | undefined;
  /**
   * The average wait duration between merge time and deploy start time in milliseconds
   */
  avgWaitDurationMs?: number | undefined;
  /**
   * The max deploy duration in milliseconds
   */
  maxDeployDurationMs?: number | undefined;
  /**
   * The average deploy duration in milliseconds
   */
  avgDeployDurationMs?: number | undefined;
  /**
   * The max total lead time in milliseconds
   */
  maxTotalLeadTimeMs?: number | undefined;
  /**
   * The average total lead time in milliseconds
   */
  avgTotalLeadTimeMs?: number | undefined;
};

/** @internal */
export const PullRequestLeadTimeRep$inboundSchema: z.ZodType<
  PullRequestLeadTimeRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  codingDurationMs: z.number().int(),
  reviewDurationMs: z.number().int().optional(),
  maxWaitDurationMs: z.number().int().optional(),
  avgWaitDurationMs: z.number().int().optional(),
  maxDeployDurationMs: z.number().int().optional(),
  avgDeployDurationMs: z.number().int().optional(),
  maxTotalLeadTimeMs: z.number().int().optional(),
  avgTotalLeadTimeMs: z.number().int().optional(),
});

/** @internal */
export type PullRequestLeadTimeRep$Outbound = {
  codingDurationMs: number;
  reviewDurationMs?: number | undefined;
  maxWaitDurationMs?: number | undefined;
  avgWaitDurationMs?: number | undefined;
  maxDeployDurationMs?: number | undefined;
  avgDeployDurationMs?: number | undefined;
  maxTotalLeadTimeMs?: number | undefined;
  avgTotalLeadTimeMs?: number | undefined;
};

/** @internal */
export const PullRequestLeadTimeRep$outboundSchema: z.ZodType<
  PullRequestLeadTimeRep$Outbound,
  z.ZodTypeDef,
  PullRequestLeadTimeRep
> = z.object({
  codingDurationMs: z.number().int(),
  reviewDurationMs: z.number().int().optional(),
  maxWaitDurationMs: z.number().int().optional(),
  avgWaitDurationMs: z.number().int().optional(),
  maxDeployDurationMs: z.number().int().optional(),
  avgDeployDurationMs: z.number().int().optional(),
  maxTotalLeadTimeMs: z.number().int().optional(),
  avgTotalLeadTimeMs: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PullRequestLeadTimeRep$ {
  /** @deprecated use `PullRequestLeadTimeRep$inboundSchema` instead. */
  export const inboundSchema = PullRequestLeadTimeRep$inboundSchema;
  /** @deprecated use `PullRequestLeadTimeRep$outboundSchema` instead. */
  export const outboundSchema = PullRequestLeadTimeRep$outboundSchema;
  /** @deprecated use `PullRequestLeadTimeRep$Outbound` instead. */
  export type Outbound = PullRequestLeadTimeRep$Outbound;
}

export function pullRequestLeadTimeRepToJSON(
  pullRequestLeadTimeRep: PullRequestLeadTimeRep,
): string {
  return JSON.stringify(
    PullRequestLeadTimeRep$outboundSchema.parse(pullRequestLeadTimeRep),
  );
}

export function pullRequestLeadTimeRepFromJSON(
  jsonString: string,
): SafeParseResult<PullRequestLeadTimeRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PullRequestLeadTimeRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PullRequestLeadTimeRep' from JSON`,
  );
}
