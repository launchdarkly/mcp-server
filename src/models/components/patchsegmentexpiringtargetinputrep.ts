/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PatchSegmentExpiringTargetInstruction,
  PatchSegmentExpiringTargetInstruction$inboundSchema,
  PatchSegmentExpiringTargetInstruction$Outbound,
  PatchSegmentExpiringTargetInstruction$outboundSchema,
} from "./patchsegmentexpiringtargetinstruction.js";

export type PatchSegmentExpiringTargetInputRep = {
  /**
   * Optional description of changes
   */
  comment?: string | undefined;
  /**
   * Semantic patch instructions for the desired changes to the resource
   */
  instructions: Array<PatchSegmentExpiringTargetInstruction>;
};

/** @internal */
export const PatchSegmentExpiringTargetInputRep$inboundSchema: z.ZodType<
  PatchSegmentExpiringTargetInputRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  comment: z.string().optional(),
  instructions: z.array(PatchSegmentExpiringTargetInstruction$inboundSchema),
});

/** @internal */
export type PatchSegmentExpiringTargetInputRep$Outbound = {
  comment?: string | undefined;
  instructions: Array<PatchSegmentExpiringTargetInstruction$Outbound>;
};

/** @internal */
export const PatchSegmentExpiringTargetInputRep$outboundSchema: z.ZodType<
  PatchSegmentExpiringTargetInputRep$Outbound,
  z.ZodTypeDef,
  PatchSegmentExpiringTargetInputRep
> = z.object({
  comment: z.string().optional(),
  instructions: z.array(PatchSegmentExpiringTargetInstruction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchSegmentExpiringTargetInputRep$ {
  /** @deprecated use `PatchSegmentExpiringTargetInputRep$inboundSchema` instead. */
  export const inboundSchema = PatchSegmentExpiringTargetInputRep$inboundSchema;
  /** @deprecated use `PatchSegmentExpiringTargetInputRep$outboundSchema` instead. */
  export const outboundSchema =
    PatchSegmentExpiringTargetInputRep$outboundSchema;
  /** @deprecated use `PatchSegmentExpiringTargetInputRep$Outbound` instead. */
  export type Outbound = PatchSegmentExpiringTargetInputRep$Outbound;
}

export function patchSegmentExpiringTargetInputRepToJSON(
  patchSegmentExpiringTargetInputRep: PatchSegmentExpiringTargetInputRep,
): string {
  return JSON.stringify(
    PatchSegmentExpiringTargetInputRep$outboundSchema.parse(
      patchSegmentExpiringTargetInputRep,
    ),
  );
}

export function patchSegmentExpiringTargetInputRepFromJSON(
  jsonString: string,
): SafeParseResult<PatchSegmentExpiringTargetInputRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PatchSegmentExpiringTargetInputRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchSegmentExpiringTargetInputRep' from JSON`,
  );
}
