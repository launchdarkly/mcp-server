/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type MemberPermissionGrantSummaryRep = {
  /**
   * The name of the group of related actions to allow. A permission grant may have either an <code>actionSet</code> or a list of <code>actions</code> but not both at the same time.
   */
  actionSet?: string | undefined;
  /**
   * A list of actions to allow. A permission grant may have either an <code>actionSet</code> or a list of <code>actions</code> but not both at the same time.
   */
  actions?: Array<string> | undefined;
  /**
   * The resource for which the actions are allowed
   */
  resource: string;
};

/** @internal */
export const MemberPermissionGrantSummaryRep$inboundSchema: z.ZodType<
  MemberPermissionGrantSummaryRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  actionSet: z.string().optional(),
  actions: z.array(z.string()).optional(),
  resource: z.string(),
});

/** @internal */
export type MemberPermissionGrantSummaryRep$Outbound = {
  actionSet?: string | undefined;
  actions?: Array<string> | undefined;
  resource: string;
};

/** @internal */
export const MemberPermissionGrantSummaryRep$outboundSchema: z.ZodType<
  MemberPermissionGrantSummaryRep$Outbound,
  z.ZodTypeDef,
  MemberPermissionGrantSummaryRep
> = z.object({
  actionSet: z.string().optional(),
  actions: z.array(z.string()).optional(),
  resource: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberPermissionGrantSummaryRep$ {
  /** @deprecated use `MemberPermissionGrantSummaryRep$inboundSchema` instead. */
  export const inboundSchema = MemberPermissionGrantSummaryRep$inboundSchema;
  /** @deprecated use `MemberPermissionGrantSummaryRep$outboundSchema` instead. */
  export const outboundSchema = MemberPermissionGrantSummaryRep$outboundSchema;
  /** @deprecated use `MemberPermissionGrantSummaryRep$Outbound` instead. */
  export type Outbound = MemberPermissionGrantSummaryRep$Outbound;
}

export function memberPermissionGrantSummaryRepToJSON(
  memberPermissionGrantSummaryRep: MemberPermissionGrantSummaryRep,
): string {
  return JSON.stringify(
    MemberPermissionGrantSummaryRep$outboundSchema.parse(
      memberPermissionGrantSummaryRep,
    ),
  );
}

export function memberPermissionGrantSummaryRepFromJSON(
  jsonString: string,
): SafeParseResult<MemberPermissionGrantSummaryRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MemberPermissionGrantSummaryRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MemberPermissionGrantSummaryRep' from JSON`,
  );
}
