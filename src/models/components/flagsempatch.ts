/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FlagSempatch = {
  instructions: Array<{ [k: string]: any }>;
  comment?: string | undefined;
};

/** @internal */
export const FlagSempatch$inboundSchema: z.ZodType<
  FlagSempatch,
  z.ZodTypeDef,
  unknown
> = z.object({
  instructions: z.array(z.record(z.any())),
  comment: z.string().optional(),
});

/** @internal */
export type FlagSempatch$Outbound = {
  instructions: Array<{ [k: string]: any }>;
  comment?: string | undefined;
};

/** @internal */
export const FlagSempatch$outboundSchema: z.ZodType<
  FlagSempatch$Outbound,
  z.ZodTypeDef,
  FlagSempatch
> = z.object({
  instructions: z.array(z.record(z.any())),
  comment: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlagSempatch$ {
  /** @deprecated use `FlagSempatch$inboundSchema` instead. */
  export const inboundSchema = FlagSempatch$inboundSchema;
  /** @deprecated use `FlagSempatch$outboundSchema` instead. */
  export const outboundSchema = FlagSempatch$outboundSchema;
  /** @deprecated use `FlagSempatch$Outbound` instead. */
  export type Outbound = FlagSempatch$Outbound;
}

export function flagSempatchToJSON(flagSempatch: FlagSempatch): string {
  return JSON.stringify(FlagSempatch$outboundSchema.parse(flagSempatch));
}

export function flagSempatchFromJSON(
  jsonString: string,
): SafeParseResult<FlagSempatch, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FlagSempatch$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FlagSempatch' from JSON`,
  );
}
