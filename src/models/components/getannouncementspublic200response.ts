/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AnnouncementPaginatedLinks,
  AnnouncementPaginatedLinks$inboundSchema,
  AnnouncementPaginatedLinks$Outbound,
  AnnouncementPaginatedLinks$outboundSchema,
} from "./announcementpaginatedlinks.js";
import {
  AnnouncementResponse,
  AnnouncementResponse$inboundSchema,
  AnnouncementResponse$Outbound,
  AnnouncementResponse$outboundSchema,
} from "./announcementresponse.js";

export type GetAnnouncementsPublic200Response = {
  items: Array<AnnouncementResponse>;
  links: AnnouncementPaginatedLinks;
};

/** @internal */
export const GetAnnouncementsPublic200Response$inboundSchema: z.ZodType<
  GetAnnouncementsPublic200Response,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(AnnouncementResponse$inboundSchema),
  _links: AnnouncementPaginatedLinks$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type GetAnnouncementsPublic200Response$Outbound = {
  items: Array<AnnouncementResponse$Outbound>;
  _links: AnnouncementPaginatedLinks$Outbound;
};

/** @internal */
export const GetAnnouncementsPublic200Response$outboundSchema: z.ZodType<
  GetAnnouncementsPublic200Response$Outbound,
  z.ZodTypeDef,
  GetAnnouncementsPublic200Response
> = z.object({
  items: z.array(AnnouncementResponse$outboundSchema),
  links: AnnouncementPaginatedLinks$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAnnouncementsPublic200Response$ {
  /** @deprecated use `GetAnnouncementsPublic200Response$inboundSchema` instead. */
  export const inboundSchema = GetAnnouncementsPublic200Response$inboundSchema;
  /** @deprecated use `GetAnnouncementsPublic200Response$outboundSchema` instead. */
  export const outboundSchema =
    GetAnnouncementsPublic200Response$outboundSchema;
  /** @deprecated use `GetAnnouncementsPublic200Response$Outbound` instead. */
  export type Outbound = GetAnnouncementsPublic200Response$Outbound;
}

export function getAnnouncementsPublic200ResponseToJSON(
  getAnnouncementsPublic200Response: GetAnnouncementsPublic200Response,
): string {
  return JSON.stringify(
    GetAnnouncementsPublic200Response$outboundSchema.parse(
      getAnnouncementsPublic200Response,
    ),
  );
}

export function getAnnouncementsPublic200ResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAnnouncementsPublic200Response, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAnnouncementsPublic200Response$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAnnouncementsPublic200Response' from JSON`,
  );
}
