/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CustomWorkflowStageMeta = {
  /**
   * The zero-based index of the workflow stage
   */
  index?: number | undefined;
  /**
   * The name of the workflow stage
   */
  name?: string | undefined;
};

/** @internal */
export const CustomWorkflowStageMeta$inboundSchema: z.ZodType<
  CustomWorkflowStageMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number().int().optional(),
  name: z.string().optional(),
});

/** @internal */
export type CustomWorkflowStageMeta$Outbound = {
  index?: number | undefined;
  name?: string | undefined;
};

/** @internal */
export const CustomWorkflowStageMeta$outboundSchema: z.ZodType<
  CustomWorkflowStageMeta$Outbound,
  z.ZodTypeDef,
  CustomWorkflowStageMeta
> = z.object({
  index: z.number().int().optional(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomWorkflowStageMeta$ {
  /** @deprecated use `CustomWorkflowStageMeta$inboundSchema` instead. */
  export const inboundSchema = CustomWorkflowStageMeta$inboundSchema;
  /** @deprecated use `CustomWorkflowStageMeta$outboundSchema` instead. */
  export const outboundSchema = CustomWorkflowStageMeta$outboundSchema;
  /** @deprecated use `CustomWorkflowStageMeta$Outbound` instead. */
  export type Outbound = CustomWorkflowStageMeta$Outbound;
}

export function customWorkflowStageMetaToJSON(
  customWorkflowStageMeta: CustomWorkflowStageMeta,
): string {
  return JSON.stringify(
    CustomWorkflowStageMeta$outboundSchema.parse(customWorkflowStageMeta),
  );
}

export function customWorkflowStageMetaFromJSON(
  jsonString: string,
): SafeParseResult<CustomWorkflowStageMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomWorkflowStageMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomWorkflowStageMeta' from JSON`,
  );
}
