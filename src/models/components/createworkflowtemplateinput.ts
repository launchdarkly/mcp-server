/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  StageInput,
  StageInput$inboundSchema,
  StageInput$Outbound,
  StageInput$outboundSchema,
} from "./stageinput.js";

export type CreateWorkflowTemplateInput = {
  key: string;
  name?: string | undefined;
  description?: string | undefined;
  workflowId?: string | undefined;
  stages?: Array<StageInput> | undefined;
  projectKey?: string | undefined;
  environmentKey?: string | undefined;
  flagKey?: string | undefined;
};

/** @internal */
export const CreateWorkflowTemplateInput$inboundSchema: z.ZodType<
  CreateWorkflowTemplateInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  name: z.string().optional(),
  description: z.string().optional(),
  workflowId: z.string().optional(),
  stages: z.array(StageInput$inboundSchema).optional(),
  projectKey: z.string().optional(),
  environmentKey: z.string().optional(),
  flagKey: z.string().optional(),
});

/** @internal */
export type CreateWorkflowTemplateInput$Outbound = {
  key: string;
  name?: string | undefined;
  description?: string | undefined;
  workflowId?: string | undefined;
  stages?: Array<StageInput$Outbound> | undefined;
  projectKey?: string | undefined;
  environmentKey?: string | undefined;
  flagKey?: string | undefined;
};

/** @internal */
export const CreateWorkflowTemplateInput$outboundSchema: z.ZodType<
  CreateWorkflowTemplateInput$Outbound,
  z.ZodTypeDef,
  CreateWorkflowTemplateInput
> = z.object({
  key: z.string(),
  name: z.string().optional(),
  description: z.string().optional(),
  workflowId: z.string().optional(),
  stages: z.array(StageInput$outboundSchema).optional(),
  projectKey: z.string().optional(),
  environmentKey: z.string().optional(),
  flagKey: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWorkflowTemplateInput$ {
  /** @deprecated use `CreateWorkflowTemplateInput$inboundSchema` instead. */
  export const inboundSchema = CreateWorkflowTemplateInput$inboundSchema;
  /** @deprecated use `CreateWorkflowTemplateInput$outboundSchema` instead. */
  export const outboundSchema = CreateWorkflowTemplateInput$outboundSchema;
  /** @deprecated use `CreateWorkflowTemplateInput$Outbound` instead. */
  export type Outbound = CreateWorkflowTemplateInput$Outbound;
}

export function createWorkflowTemplateInputToJSON(
  createWorkflowTemplateInput: CreateWorkflowTemplateInput,
): string {
  return JSON.stringify(
    CreateWorkflowTemplateInput$outboundSchema.parse(
      createWorkflowTemplateInput,
    ),
  );
}

export function createWorkflowTemplateInputFromJSON(
  jsonString: string,
): SafeParseResult<CreateWorkflowTemplateInput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateWorkflowTemplateInput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateWorkflowTemplateInput' from JSON`,
  );
}
