/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  FlagEventExperiment,
  FlagEventExperiment$inboundSchema,
  FlagEventExperiment$Outbound,
  FlagEventExperiment$outboundSchema,
} from "./flageventexperiment.js";

export type FlagEventExperimentCollection = {
  /**
   * The total number of experiments
   */
  totalCount: number;
  /**
   * A list of experiments
   */
  items: Array<FlagEventExperiment>;
};

/** @internal */
export const FlagEventExperimentCollection$inboundSchema: z.ZodType<
  FlagEventExperimentCollection,
  z.ZodTypeDef,
  unknown
> = z.object({
  totalCount: z.number().int(),
  items: z.array(FlagEventExperiment$inboundSchema),
});

/** @internal */
export type FlagEventExperimentCollection$Outbound = {
  totalCount: number;
  items: Array<FlagEventExperiment$Outbound>;
};

/** @internal */
export const FlagEventExperimentCollection$outboundSchema: z.ZodType<
  FlagEventExperimentCollection$Outbound,
  z.ZodTypeDef,
  FlagEventExperimentCollection
> = z.object({
  totalCount: z.number().int(),
  items: z.array(FlagEventExperiment$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlagEventExperimentCollection$ {
  /** @deprecated use `FlagEventExperimentCollection$inboundSchema` instead. */
  export const inboundSchema = FlagEventExperimentCollection$inboundSchema;
  /** @deprecated use `FlagEventExperimentCollection$outboundSchema` instead. */
  export const outboundSchema = FlagEventExperimentCollection$outboundSchema;
  /** @deprecated use `FlagEventExperimentCollection$Outbound` instead. */
  export type Outbound = FlagEventExperimentCollection$Outbound;
}

export function flagEventExperimentCollectionToJSON(
  flagEventExperimentCollection: FlagEventExperimentCollection,
): string {
  return JSON.stringify(
    FlagEventExperimentCollection$outboundSchema.parse(
      flagEventExperimentCollection,
    ),
  );
}

export function flagEventExperimentCollectionFromJSON(
  jsonString: string,
): SafeParseResult<FlagEventExperimentCollection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FlagEventExperimentCollection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FlagEventExperimentCollection' from JSON`,
  );
}
