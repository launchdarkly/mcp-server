/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type MemberTeamsPostInput = {
  /**
   * List of team keys
   */
  teamKeys: Array<string>;
};

/** @internal */
export const MemberTeamsPostInput$inboundSchema: z.ZodType<
  MemberTeamsPostInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  teamKeys: z.array(z.string()),
});

/** @internal */
export type MemberTeamsPostInput$Outbound = {
  teamKeys: Array<string>;
};

/** @internal */
export const MemberTeamsPostInput$outboundSchema: z.ZodType<
  MemberTeamsPostInput$Outbound,
  z.ZodTypeDef,
  MemberTeamsPostInput
> = z.object({
  teamKeys: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberTeamsPostInput$ {
  /** @deprecated use `MemberTeamsPostInput$inboundSchema` instead. */
  export const inboundSchema = MemberTeamsPostInput$inboundSchema;
  /** @deprecated use `MemberTeamsPostInput$outboundSchema` instead. */
  export const outboundSchema = MemberTeamsPostInput$outboundSchema;
  /** @deprecated use `MemberTeamsPostInput$Outbound` instead. */
  export type Outbound = MemberTeamsPostInput$Outbound;
}

export function memberTeamsPostInputToJSON(
  memberTeamsPostInput: MemberTeamsPostInput,
): string {
  return JSON.stringify(
    MemberTeamsPostInput$outboundSchema.parse(memberTeamsPostInput),
  );
}

export function memberTeamsPostInputFromJSON(
  jsonString: string,
): SafeParseResult<MemberTeamsPostInput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MemberTeamsPostInput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MemberTeamsPostInput' from JSON`,
  );
}
