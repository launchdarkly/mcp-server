/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type CreateBigSegmentStoreIntegrationRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The integration key, either `redis` or `dynamodb`
   */
  integrationKey: string;
  integrationDeliveryConfigurationPost:
    models.IntegrationDeliveryConfigurationPost;
};

/** @internal */
export const CreateBigSegmentStoreIntegrationRequest$inboundSchema: z.ZodType<
  CreateBigSegmentStoreIntegrationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  integrationKey: z.string(),
  IntegrationDeliveryConfigurationPost:
    models.IntegrationDeliveryConfigurationPost$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "IntegrationDeliveryConfigurationPost":
      "integrationDeliveryConfigurationPost",
  });
});

/** @internal */
export type CreateBigSegmentStoreIntegrationRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  integrationKey: string;
  IntegrationDeliveryConfigurationPost:
    models.IntegrationDeliveryConfigurationPost$Outbound;
};

/** @internal */
export const CreateBigSegmentStoreIntegrationRequest$outboundSchema: z.ZodType<
  CreateBigSegmentStoreIntegrationRequest$Outbound,
  z.ZodTypeDef,
  CreateBigSegmentStoreIntegrationRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  integrationKey: z.string(),
  integrationDeliveryConfigurationPost:
    models.IntegrationDeliveryConfigurationPost$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    integrationDeliveryConfigurationPost:
      "IntegrationDeliveryConfigurationPost",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBigSegmentStoreIntegrationRequest$ {
  /** @deprecated use `CreateBigSegmentStoreIntegrationRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateBigSegmentStoreIntegrationRequest$inboundSchema;
  /** @deprecated use `CreateBigSegmentStoreIntegrationRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateBigSegmentStoreIntegrationRequest$outboundSchema;
  /** @deprecated use `CreateBigSegmentStoreIntegrationRequest$Outbound` instead. */
  export type Outbound = CreateBigSegmentStoreIntegrationRequest$Outbound;
}

export function createBigSegmentStoreIntegrationRequestToJSON(
  createBigSegmentStoreIntegrationRequest:
    CreateBigSegmentStoreIntegrationRequest,
): string {
  return JSON.stringify(
    CreateBigSegmentStoreIntegrationRequest$outboundSchema.parse(
      createBigSegmentStoreIntegrationRequest,
    ),
  );
}

export function createBigSegmentStoreIntegrationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateBigSegmentStoreIntegrationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateBigSegmentStoreIntegrationRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateBigSegmentStoreIntegrationRequest' from JSON`,
  );
}
