/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetFollowersByProjEnvRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
};

/** @internal */
export const GetFollowersByProjEnvRequest$inboundSchema: z.ZodType<
  GetFollowersByProjEnvRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
});

/** @internal */
export type GetFollowersByProjEnvRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
};

/** @internal */
export const GetFollowersByProjEnvRequest$outboundSchema: z.ZodType<
  GetFollowersByProjEnvRequest$Outbound,
  z.ZodTypeDef,
  GetFollowersByProjEnvRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFollowersByProjEnvRequest$ {
  /** @deprecated use `GetFollowersByProjEnvRequest$inboundSchema` instead. */
  export const inboundSchema = GetFollowersByProjEnvRequest$inboundSchema;
  /** @deprecated use `GetFollowersByProjEnvRequest$outboundSchema` instead. */
  export const outboundSchema = GetFollowersByProjEnvRequest$outboundSchema;
  /** @deprecated use `GetFollowersByProjEnvRequest$Outbound` instead. */
  export type Outbound = GetFollowersByProjEnvRequest$Outbound;
}

export function getFollowersByProjEnvRequestToJSON(
  getFollowersByProjEnvRequest: GetFollowersByProjEnvRequest,
): string {
  return JSON.stringify(
    GetFollowersByProjEnvRequest$outboundSchema.parse(
      getFollowersByProjEnvRequest,
    ),
  );
}

export function getFollowersByProjEnvRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetFollowersByProjEnvRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFollowersByProjEnvRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFollowersByProjEnvRequest' from JSON`,
  );
}
