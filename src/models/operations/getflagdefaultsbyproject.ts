/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetFlagDefaultsByProjectRequest = {
  /**
   * The project key
   */
  projectKey: string;
};

/** @internal */
export const GetFlagDefaultsByProjectRequest$inboundSchema: z.ZodType<
  GetFlagDefaultsByProjectRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
});

/** @internal */
export type GetFlagDefaultsByProjectRequest$Outbound = {
  projectKey: string;
};

/** @internal */
export const GetFlagDefaultsByProjectRequest$outboundSchema: z.ZodType<
  GetFlagDefaultsByProjectRequest$Outbound,
  z.ZodTypeDef,
  GetFlagDefaultsByProjectRequest
> = z.object({
  projectKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFlagDefaultsByProjectRequest$ {
  /** @deprecated use `GetFlagDefaultsByProjectRequest$inboundSchema` instead. */
  export const inboundSchema = GetFlagDefaultsByProjectRequest$inboundSchema;
  /** @deprecated use `GetFlagDefaultsByProjectRequest$outboundSchema` instead. */
  export const outboundSchema = GetFlagDefaultsByProjectRequest$outboundSchema;
  /** @deprecated use `GetFlagDefaultsByProjectRequest$Outbound` instead. */
  export type Outbound = GetFlagDefaultsByProjectRequest$Outbound;
}

export function getFlagDefaultsByProjectRequestToJSON(
  getFlagDefaultsByProjectRequest: GetFlagDefaultsByProjectRequest,
): string {
  return JSON.stringify(
    GetFlagDefaultsByProjectRequest$outboundSchema.parse(
      getFlagDefaultsByProjectRequest,
    ),
  );
}

export function getFlagDefaultsByProjectRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetFlagDefaultsByProjectRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFlagDefaultsByProjectRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFlagDefaultsByProjectRequest' from JSON`,
  );
}
