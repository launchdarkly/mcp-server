/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type PatchIntegrationDeliveryConfigurationRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The integration key
   */
  integrationKey: string;
  /**
   * The configuration ID
   */
  id: string;
  requestBody: Array<models.PatchOperation>;
};

/** @internal */
export const PatchIntegrationDeliveryConfigurationRequest$inboundSchema:
  z.ZodType<
    PatchIntegrationDeliveryConfigurationRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    projectKey: z.string(),
    environmentKey: z.string(),
    integrationKey: z.string(),
    id: z.string(),
    RequestBody: z.array(models.PatchOperation$inboundSchema),
  }).transform((v) => {
    return remap$(v, {
      "RequestBody": "requestBody",
    });
  });

/** @internal */
export type PatchIntegrationDeliveryConfigurationRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  integrationKey: string;
  id: string;
  RequestBody: Array<models.PatchOperation$Outbound>;
};

/** @internal */
export const PatchIntegrationDeliveryConfigurationRequest$outboundSchema:
  z.ZodType<
    PatchIntegrationDeliveryConfigurationRequest$Outbound,
    z.ZodTypeDef,
    PatchIntegrationDeliveryConfigurationRequest
  > = z.object({
    projectKey: z.string(),
    environmentKey: z.string(),
    integrationKey: z.string(),
    id: z.string(),
    requestBody: z.array(models.PatchOperation$outboundSchema),
  }).transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchIntegrationDeliveryConfigurationRequest$ {
  /** @deprecated use `PatchIntegrationDeliveryConfigurationRequest$inboundSchema` instead. */
  export const inboundSchema =
    PatchIntegrationDeliveryConfigurationRequest$inboundSchema;
  /** @deprecated use `PatchIntegrationDeliveryConfigurationRequest$outboundSchema` instead. */
  export const outboundSchema =
    PatchIntegrationDeliveryConfigurationRequest$outboundSchema;
  /** @deprecated use `PatchIntegrationDeliveryConfigurationRequest$Outbound` instead. */
  export type Outbound = PatchIntegrationDeliveryConfigurationRequest$Outbound;
}

export function patchIntegrationDeliveryConfigurationRequestToJSON(
  patchIntegrationDeliveryConfigurationRequest:
    PatchIntegrationDeliveryConfigurationRequest,
): string {
  return JSON.stringify(
    PatchIntegrationDeliveryConfigurationRequest$outboundSchema.parse(
      patchIntegrationDeliveryConfigurationRequest,
    ),
  );
}

export function patchIntegrationDeliveryConfigurationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchIntegrationDeliveryConfigurationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchIntegrationDeliveryConfigurationRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchIntegrationDeliveryConfigurationRequest' from JSON`,
  );
}
