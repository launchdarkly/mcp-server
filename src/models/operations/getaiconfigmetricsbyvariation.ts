/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Version of the endpoint.
 */
export const GetAIConfigMetricsByVariationLDAPIVersion = {
  Beta: "beta",
} as const;
/**
 * Version of the endpoint.
 */
export type GetAIConfigMetricsByVariationLDAPIVersion = ClosedEnum<
  typeof GetAIConfigMetricsByVariationLDAPIVersion
>;

export type GetAIConfigMetricsByVariationRequest = {
  /**
   * Version of the endpoint.
   */
  ldAPIVersion: GetAIConfigMetricsByVariationLDAPIVersion;
  projectKey: string;
  configKey: string;
  /**
   * The starting time, as milliseconds since epoch (inclusive).
   */
  from: number;
  /**
   * The ending time, as milliseconds since epoch (exclusive). May not be more than 100 days after `from`.
   */
  to: number;
  /**
   * An environment key. Only metrics from this environment will be included.
   */
  env: string;
};

/** @internal */
export const GetAIConfigMetricsByVariationLDAPIVersion$inboundSchema:
  z.ZodNativeEnum<typeof GetAIConfigMetricsByVariationLDAPIVersion> = z
    .nativeEnum(GetAIConfigMetricsByVariationLDAPIVersion);

/** @internal */
export const GetAIConfigMetricsByVariationLDAPIVersion$outboundSchema:
  z.ZodNativeEnum<typeof GetAIConfigMetricsByVariationLDAPIVersion> =
    GetAIConfigMetricsByVariationLDAPIVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAIConfigMetricsByVariationLDAPIVersion$ {
  /** @deprecated use `GetAIConfigMetricsByVariationLDAPIVersion$inboundSchema` instead. */
  export const inboundSchema =
    GetAIConfigMetricsByVariationLDAPIVersion$inboundSchema;
  /** @deprecated use `GetAIConfigMetricsByVariationLDAPIVersion$outboundSchema` instead. */
  export const outboundSchema =
    GetAIConfigMetricsByVariationLDAPIVersion$outboundSchema;
}

/** @internal */
export const GetAIConfigMetricsByVariationRequest$inboundSchema: z.ZodType<
  GetAIConfigMetricsByVariationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "LD-API-Version": GetAIConfigMetricsByVariationLDAPIVersion$inboundSchema,
  projectKey: z.string(),
  configKey: z.string(),
  from: z.number().int(),
  to: z.number().int(),
  env: z.string(),
}).transform((v) => {
  return remap$(v, {
    "LD-API-Version": "ldAPIVersion",
  });
});

/** @internal */
export type GetAIConfigMetricsByVariationRequest$Outbound = {
  "LD-API-Version": string;
  projectKey: string;
  configKey: string;
  from: number;
  to: number;
  env: string;
};

/** @internal */
export const GetAIConfigMetricsByVariationRequest$outboundSchema: z.ZodType<
  GetAIConfigMetricsByVariationRequest$Outbound,
  z.ZodTypeDef,
  GetAIConfigMetricsByVariationRequest
> = z.object({
  ldAPIVersion: GetAIConfigMetricsByVariationLDAPIVersion$outboundSchema,
  projectKey: z.string(),
  configKey: z.string(),
  from: z.number().int(),
  to: z.number().int(),
  env: z.string(),
}).transform((v) => {
  return remap$(v, {
    ldAPIVersion: "LD-API-Version",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAIConfigMetricsByVariationRequest$ {
  /** @deprecated use `GetAIConfigMetricsByVariationRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetAIConfigMetricsByVariationRequest$inboundSchema;
  /** @deprecated use `GetAIConfigMetricsByVariationRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetAIConfigMetricsByVariationRequest$outboundSchema;
  /** @deprecated use `GetAIConfigMetricsByVariationRequest$Outbound` instead. */
  export type Outbound = GetAIConfigMetricsByVariationRequest$Outbound;
}

export function getAIConfigMetricsByVariationRequestToJSON(
  getAIConfigMetricsByVariationRequest: GetAIConfigMetricsByVariationRequest,
): string {
  return JSON.stringify(
    GetAIConfigMetricsByVariationRequest$outboundSchema.parse(
      getAIConfigMetricsByVariationRequest,
    ),
  );
}

export function getAIConfigMetricsByVariationRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAIConfigMetricsByVariationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetAIConfigMetricsByVariationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAIConfigMetricsByVariationRequest' from JSON`,
  );
}
