/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetIntegrationDeliveryConfigurationByIdRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The integration key
   */
  integrationKey: string;
  /**
   * The configuration ID
   */
  id: string;
};

/** @internal */
export const GetIntegrationDeliveryConfigurationByIdRequest$inboundSchema:
  z.ZodType<
    GetIntegrationDeliveryConfigurationByIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    projectKey: z.string(),
    environmentKey: z.string(),
    integrationKey: z.string(),
    id: z.string(),
  });

/** @internal */
export type GetIntegrationDeliveryConfigurationByIdRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  integrationKey: string;
  id: string;
};

/** @internal */
export const GetIntegrationDeliveryConfigurationByIdRequest$outboundSchema:
  z.ZodType<
    GetIntegrationDeliveryConfigurationByIdRequest$Outbound,
    z.ZodTypeDef,
    GetIntegrationDeliveryConfigurationByIdRequest
  > = z.object({
    projectKey: z.string(),
    environmentKey: z.string(),
    integrationKey: z.string(),
    id: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetIntegrationDeliveryConfigurationByIdRequest$ {
  /** @deprecated use `GetIntegrationDeliveryConfigurationByIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetIntegrationDeliveryConfigurationByIdRequest$inboundSchema;
  /** @deprecated use `GetIntegrationDeliveryConfigurationByIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetIntegrationDeliveryConfigurationByIdRequest$outboundSchema;
  /** @deprecated use `GetIntegrationDeliveryConfigurationByIdRequest$Outbound` instead. */
  export type Outbound =
    GetIntegrationDeliveryConfigurationByIdRequest$Outbound;
}

export function getIntegrationDeliveryConfigurationByIdRequestToJSON(
  getIntegrationDeliveryConfigurationByIdRequest:
    GetIntegrationDeliveryConfigurationByIdRequest,
): string {
  return JSON.stringify(
    GetIntegrationDeliveryConfigurationByIdRequest$outboundSchema.parse(
      getIntegrationDeliveryConfigurationByIdRequest,
    ),
  );
}

export function getIntegrationDeliveryConfigurationByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetIntegrationDeliveryConfigurationByIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetIntegrationDeliveryConfigurationByIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetIntegrationDeliveryConfigurationByIdRequest' from JSON`,
  );
}
