/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const DeleteFlagOverrideServerList = [
  "https://http",
] as const;

export type DeleteFlagOverrideRequest = {
  projectKey: string;
  flagKey: string;
};

/** @internal */
export const DeleteFlagOverrideRequest$inboundSchema: z.ZodType<
  DeleteFlagOverrideRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  flagKey: z.string(),
});

/** @internal */
export type DeleteFlagOverrideRequest$Outbound = {
  projectKey: string;
  flagKey: string;
};

/** @internal */
export const DeleteFlagOverrideRequest$outboundSchema: z.ZodType<
  DeleteFlagOverrideRequest$Outbound,
  z.ZodTypeDef,
  DeleteFlagOverrideRequest
> = z.object({
  projectKey: z.string(),
  flagKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteFlagOverrideRequest$ {
  /** @deprecated use `DeleteFlagOverrideRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteFlagOverrideRequest$inboundSchema;
  /** @deprecated use `DeleteFlagOverrideRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteFlagOverrideRequest$outboundSchema;
  /** @deprecated use `DeleteFlagOverrideRequest$Outbound` instead. */
  export type Outbound = DeleteFlagOverrideRequest$Outbound;
}

export function deleteFlagOverrideRequestToJSON(
  deleteFlagOverrideRequest: DeleteFlagOverrideRequest,
): string {
  return JSON.stringify(
    DeleteFlagOverrideRequest$outboundSchema.parse(deleteFlagOverrideRequest),
  );
}

export function deleteFlagOverrideRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteFlagOverrideRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteFlagOverrideRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteFlagOverrideRequest' from JSON`,
  );
}
