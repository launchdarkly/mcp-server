/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteMetricGroupRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The metric group key
   */
  metricGroupKey: string;
};

/** @internal */
export const DeleteMetricGroupRequest$inboundSchema: z.ZodType<
  DeleteMetricGroupRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  metricGroupKey: z.string(),
});

/** @internal */
export type DeleteMetricGroupRequest$Outbound = {
  projectKey: string;
  metricGroupKey: string;
};

/** @internal */
export const DeleteMetricGroupRequest$outboundSchema: z.ZodType<
  DeleteMetricGroupRequest$Outbound,
  z.ZodTypeDef,
  DeleteMetricGroupRequest
> = z.object({
  projectKey: z.string(),
  metricGroupKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMetricGroupRequest$ {
  /** @deprecated use `DeleteMetricGroupRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteMetricGroupRequest$inboundSchema;
  /** @deprecated use `DeleteMetricGroupRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteMetricGroupRequest$outboundSchema;
  /** @deprecated use `DeleteMetricGroupRequest$Outbound` instead. */
  export type Outbound = DeleteMetricGroupRequest$Outbound;
}

export function deleteMetricGroupRequestToJSON(
  deleteMetricGroupRequest: DeleteMetricGroupRequest,
): string {
  return JSON.stringify(
    DeleteMetricGroupRequest$outboundSchema.parse(deleteMetricGroupRequest),
  );
}

export function deleteMetricGroupRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteMetricGroupRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteMetricGroupRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteMetricGroupRequest' from JSON`,
  );
}
