/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetEvaluationsUsageRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The feature flag key
   */
  featureFlagKey: string;
  /**
   * The series of data returned starts from this timestamp. Defaults to 30 days ago.
   */
  from?: string | undefined;
  /**
   * The series of data returned ends at this timestamp. Defaults to the current time.
   */
  to?: string | undefined;
  /**
   * The timezone to use for breaks between days when returning daily data.
   */
  tz?: string | undefined;
};

/** @internal */
export const GetEvaluationsUsageRequest$inboundSchema: z.ZodType<
  GetEvaluationsUsageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  featureFlagKey: z.string(),
  from: z.string().optional(),
  to: z.string().optional(),
  tz: z.string().optional(),
});

/** @internal */
export type GetEvaluationsUsageRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  featureFlagKey: string;
  from?: string | undefined;
  to?: string | undefined;
  tz?: string | undefined;
};

/** @internal */
export const GetEvaluationsUsageRequest$outboundSchema: z.ZodType<
  GetEvaluationsUsageRequest$Outbound,
  z.ZodTypeDef,
  GetEvaluationsUsageRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  featureFlagKey: z.string(),
  from: z.string().optional(),
  to: z.string().optional(),
  tz: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvaluationsUsageRequest$ {
  /** @deprecated use `GetEvaluationsUsageRequest$inboundSchema` instead. */
  export const inboundSchema = GetEvaluationsUsageRequest$inboundSchema;
  /** @deprecated use `GetEvaluationsUsageRequest$outboundSchema` instead. */
  export const outboundSchema = GetEvaluationsUsageRequest$outboundSchema;
  /** @deprecated use `GetEvaluationsUsageRequest$Outbound` instead. */
  export type Outbound = GetEvaluationsUsageRequest$Outbound;
}

export function getEvaluationsUsageRequestToJSON(
  getEvaluationsUsageRequest: GetEvaluationsUsageRequest,
): string {
  return JSON.stringify(
    GetEvaluationsUsageRequest$outboundSchema.parse(getEvaluationsUsageRequest),
  );
}

export function getEvaluationsUsageRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetEvaluationsUsageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvaluationsUsageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvaluationsUsageRequest' from JSON`,
  );
}
