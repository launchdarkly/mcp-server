/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteCustomRoleRequest = {
  /**
   * The custom role key
   */
  customRoleKey: string;
};

/** @internal */
export const DeleteCustomRoleRequest$inboundSchema: z.ZodType<
  DeleteCustomRoleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  customRoleKey: z.string(),
});

/** @internal */
export type DeleteCustomRoleRequest$Outbound = {
  customRoleKey: string;
};

/** @internal */
export const DeleteCustomRoleRequest$outboundSchema: z.ZodType<
  DeleteCustomRoleRequest$Outbound,
  z.ZodTypeDef,
  DeleteCustomRoleRequest
> = z.object({
  customRoleKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCustomRoleRequest$ {
  /** @deprecated use `DeleteCustomRoleRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteCustomRoleRequest$inboundSchema;
  /** @deprecated use `DeleteCustomRoleRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteCustomRoleRequest$outboundSchema;
  /** @deprecated use `DeleteCustomRoleRequest$Outbound` instead. */
  export type Outbound = DeleteCustomRoleRequest$Outbound;
}

export function deleteCustomRoleRequestToJSON(
  deleteCustomRoleRequest: DeleteCustomRoleRequest,
): string {
  return JSON.stringify(
    DeleteCustomRoleRequest$outboundSchema.parse(deleteCustomRoleRequest),
  );
}

export function deleteCustomRoleRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteCustomRoleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteCustomRoleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteCustomRoleRequest' from JSON`,
  );
}
