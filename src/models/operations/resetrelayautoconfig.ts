/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ResetRelayAutoConfigRequest = {
  /**
   * The Relay Proxy configuration ID
   */
  id: string;
  /**
   * An expiration time for the old Relay Proxy configuration key, expressed as a Unix epoch time in milliseconds. By default, the Relay Proxy configuration will expire immediately.
   */
  expiry?: number | undefined;
};

/** @internal */
export const ResetRelayAutoConfigRequest$inboundSchema: z.ZodType<
  ResetRelayAutoConfigRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  expiry: z.number().int().optional(),
});

/** @internal */
export type ResetRelayAutoConfigRequest$Outbound = {
  id: string;
  expiry?: number | undefined;
};

/** @internal */
export const ResetRelayAutoConfigRequest$outboundSchema: z.ZodType<
  ResetRelayAutoConfigRequest$Outbound,
  z.ZodTypeDef,
  ResetRelayAutoConfigRequest
> = z.object({
  id: z.string(),
  expiry: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResetRelayAutoConfigRequest$ {
  /** @deprecated use `ResetRelayAutoConfigRequest$inboundSchema` instead. */
  export const inboundSchema = ResetRelayAutoConfigRequest$inboundSchema;
  /** @deprecated use `ResetRelayAutoConfigRequest$outboundSchema` instead. */
  export const outboundSchema = ResetRelayAutoConfigRequest$outboundSchema;
  /** @deprecated use `ResetRelayAutoConfigRequest$Outbound` instead. */
  export type Outbound = ResetRelayAutoConfigRequest$Outbound;
}

export function resetRelayAutoConfigRequestToJSON(
  resetRelayAutoConfigRequest: ResetRelayAutoConfigRequest,
): string {
  return JSON.stringify(
    ResetRelayAutoConfigRequest$outboundSchema.parse(
      resetRelayAutoConfigRequest,
    ),
  );
}

export function resetRelayAutoConfigRequestFromJSON(
  jsonString: string,
): SafeParseResult<ResetRelayAutoConfigRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResetRelayAutoConfigRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResetRelayAutoConfigRequest' from JSON`,
  );
}
