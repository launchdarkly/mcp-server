/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type PostApprovalRequestReviewRequest = {
  /**
   * The approval request ID
   */
  id: string;
  postApprovalRequestReviewRequest: models.PostApprovalRequestReviewRequest;
};

/** @internal */
export const PostApprovalRequestReviewRequest$inboundSchema: z.ZodType<
  PostApprovalRequestReviewRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  postApprovalRequestReviewRequest:
    models.PostApprovalRequestReviewRequest$inboundSchema,
});

/** @internal */
export type PostApprovalRequestReviewRequest$Outbound = {
  id: string;
  postApprovalRequestReviewRequest:
    models.PostApprovalRequestReviewRequest$Outbound;
};

/** @internal */
export const PostApprovalRequestReviewRequest$outboundSchema: z.ZodType<
  PostApprovalRequestReviewRequest$Outbound,
  z.ZodTypeDef,
  PostApprovalRequestReviewRequest
> = z.object({
  id: z.string(),
  postApprovalRequestReviewRequest:
    models.PostApprovalRequestReviewRequest$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApprovalRequestReviewRequest$ {
  /** @deprecated use `PostApprovalRequestReviewRequest$inboundSchema` instead. */
  export const inboundSchema = PostApprovalRequestReviewRequest$inboundSchema;
  /** @deprecated use `PostApprovalRequestReviewRequest$outboundSchema` instead. */
  export const outboundSchema = PostApprovalRequestReviewRequest$outboundSchema;
  /** @deprecated use `PostApprovalRequestReviewRequest$Outbound` instead. */
  export type Outbound = PostApprovalRequestReviewRequest$Outbound;
}

export function postApprovalRequestReviewRequestToJSON(
  postApprovalRequestReviewRequest: PostApprovalRequestReviewRequest,
): string {
  return JSON.stringify(
    PostApprovalRequestReviewRequest$outboundSchema.parse(
      postApprovalRequestReviewRequest,
    ),
  );
}

export function postApprovalRequestReviewRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostApprovalRequestReviewRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApprovalRequestReviewRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApprovalRequestReviewRequest' from JSON`,
  );
}
