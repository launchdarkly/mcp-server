/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetStaleFlagsChartRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * Comma separated list of application keys
   */
  applicationKey?: string | undefined;
  /**
   * Property to group results by. Options: `maintainer`
   */
  groupBy?: string | undefined;
  /**
   * Comma-separated list of individual maintainers to filter results.
   */
  maintainerId?: string | undefined;
  /**
   * Comma-separated list of team maintainer keys to filter results.
   */
  maintainerTeamKey?: string | undefined;
  /**
   * Options: `metrics`
   */
  expand?: string | undefined;
};

/** @internal */
export const GetStaleFlagsChartRequest$inboundSchema: z.ZodType<
  GetStaleFlagsChartRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  applicationKey: z.string().optional(),
  groupBy: z.string().optional(),
  maintainerId: z.string().optional(),
  maintainerTeamKey: z.string().optional(),
  expand: z.string().optional(),
});

/** @internal */
export type GetStaleFlagsChartRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  applicationKey?: string | undefined;
  groupBy?: string | undefined;
  maintainerId?: string | undefined;
  maintainerTeamKey?: string | undefined;
  expand?: string | undefined;
};

/** @internal */
export const GetStaleFlagsChartRequest$outboundSchema: z.ZodType<
  GetStaleFlagsChartRequest$Outbound,
  z.ZodTypeDef,
  GetStaleFlagsChartRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  applicationKey: z.string().optional(),
  groupBy: z.string().optional(),
  maintainerId: z.string().optional(),
  maintainerTeamKey: z.string().optional(),
  expand: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStaleFlagsChartRequest$ {
  /** @deprecated use `GetStaleFlagsChartRequest$inboundSchema` instead. */
  export const inboundSchema = GetStaleFlagsChartRequest$inboundSchema;
  /** @deprecated use `GetStaleFlagsChartRequest$outboundSchema` instead. */
  export const outboundSchema = GetStaleFlagsChartRequest$outboundSchema;
  /** @deprecated use `GetStaleFlagsChartRequest$Outbound` instead. */
  export type Outbound = GetStaleFlagsChartRequest$Outbound;
}

export function getStaleFlagsChartRequestToJSON(
  getStaleFlagsChartRequest: GetStaleFlagsChartRequest,
): string {
  return JSON.stringify(
    GetStaleFlagsChartRequest$outboundSchema.parse(getStaleFlagsChartRequest),
  );
}

export function getStaleFlagsChartRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetStaleFlagsChartRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetStaleFlagsChartRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetStaleFlagsChartRequest' from JSON`,
  );
}
