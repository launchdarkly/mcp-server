/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateReleaseForFlagRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The flag key
   */
  flagKey: string;
  createReleaseInput: components.CreateReleaseInput;
};

/** @internal */
export const CreateReleaseForFlagRequest$inboundSchema: z.ZodType<
  CreateReleaseForFlagRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  flagKey: z.string(),
  CreateReleaseInput: components.CreateReleaseInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "CreateReleaseInput": "createReleaseInput",
  });
});

/** @internal */
export type CreateReleaseForFlagRequest$Outbound = {
  projectKey: string;
  flagKey: string;
  CreateReleaseInput: components.CreateReleaseInput$Outbound;
};

/** @internal */
export const CreateReleaseForFlagRequest$outboundSchema: z.ZodType<
  CreateReleaseForFlagRequest$Outbound,
  z.ZodTypeDef,
  CreateReleaseForFlagRequest
> = z.object({
  projectKey: z.string(),
  flagKey: z.string(),
  createReleaseInput: components.CreateReleaseInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    createReleaseInput: "CreateReleaseInput",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateReleaseForFlagRequest$ {
  /** @deprecated use `CreateReleaseForFlagRequest$inboundSchema` instead. */
  export const inboundSchema = CreateReleaseForFlagRequest$inboundSchema;
  /** @deprecated use `CreateReleaseForFlagRequest$outboundSchema` instead. */
  export const outboundSchema = CreateReleaseForFlagRequest$outboundSchema;
  /** @deprecated use `CreateReleaseForFlagRequest$Outbound` instead. */
  export type Outbound = CreateReleaseForFlagRequest$Outbound;
}

export function createReleaseForFlagRequestToJSON(
  createReleaseForFlagRequest: CreateReleaseForFlagRequest,
): string {
  return JSON.stringify(
    CreateReleaseForFlagRequest$outboundSchema.parse(
      createReleaseForFlagRequest,
    ),
  );
}

export function createReleaseForFlagRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateReleaseForFlagRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateReleaseForFlagRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateReleaseForFlagRequest' from JSON`,
  );
}
