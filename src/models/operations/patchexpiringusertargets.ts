/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type PatchExpiringUserTargetsRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The feature flag key
   */
  featureFlagKey: string;
  patchFlagsRequest: models.PatchFlagsRequest;
};

/** @internal */
export const PatchExpiringUserTargetsRequest$inboundSchema: z.ZodType<
  PatchExpiringUserTargetsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  featureFlagKey: z.string(),
  patchFlagsRequest: models.PatchFlagsRequest$inboundSchema,
});

/** @internal */
export type PatchExpiringUserTargetsRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  featureFlagKey: string;
  patchFlagsRequest: models.PatchFlagsRequest$Outbound;
};

/** @internal */
export const PatchExpiringUserTargetsRequest$outboundSchema: z.ZodType<
  PatchExpiringUserTargetsRequest$Outbound,
  z.ZodTypeDef,
  PatchExpiringUserTargetsRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  featureFlagKey: z.string(),
  patchFlagsRequest: models.PatchFlagsRequest$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchExpiringUserTargetsRequest$ {
  /** @deprecated use `PatchExpiringUserTargetsRequest$inboundSchema` instead. */
  export const inboundSchema = PatchExpiringUserTargetsRequest$inboundSchema;
  /** @deprecated use `PatchExpiringUserTargetsRequest$outboundSchema` instead. */
  export const outboundSchema = PatchExpiringUserTargetsRequest$outboundSchema;
  /** @deprecated use `PatchExpiringUserTargetsRequest$Outbound` instead. */
  export type Outbound = PatchExpiringUserTargetsRequest$Outbound;
}

export function patchExpiringUserTargetsRequestToJSON(
  patchExpiringUserTargetsRequest: PatchExpiringUserTargetsRequest,
): string {
  return JSON.stringify(
    PatchExpiringUserTargetsRequest$outboundSchema.parse(
      patchExpiringUserTargetsRequest,
    ),
  );
}

export function patchExpiringUserTargetsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PatchExpiringUserTargetsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchExpiringUserTargetsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchExpiringUserTargetsRequest' from JSON`,
  );
}
