/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PatchHoldoutRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The holdout key
   */
  holdoutKey: string;
  holdoutPatchInput: components.HoldoutPatchInput;
};

/** @internal */
export const PatchHoldoutRequest$inboundSchema: z.ZodType<
  PatchHoldoutRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  holdoutKey: z.string(),
  HoldoutPatchInput: components.HoldoutPatchInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "HoldoutPatchInput": "holdoutPatchInput",
  });
});

/** @internal */
export type PatchHoldoutRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  holdoutKey: string;
  HoldoutPatchInput: components.HoldoutPatchInput$Outbound;
};

/** @internal */
export const PatchHoldoutRequest$outboundSchema: z.ZodType<
  PatchHoldoutRequest$Outbound,
  z.ZodTypeDef,
  PatchHoldoutRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  holdoutKey: z.string(),
  holdoutPatchInput: components.HoldoutPatchInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    holdoutPatchInput: "HoldoutPatchInput",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchHoldoutRequest$ {
  /** @deprecated use `PatchHoldoutRequest$inboundSchema` instead. */
  export const inboundSchema = PatchHoldoutRequest$inboundSchema;
  /** @deprecated use `PatchHoldoutRequest$outboundSchema` instead. */
  export const outboundSchema = PatchHoldoutRequest$outboundSchema;
  /** @deprecated use `PatchHoldoutRequest$Outbound` instead. */
  export type Outbound = PatchHoldoutRequest$Outbound;
}

export function patchHoldoutRequestToJSON(
  patchHoldoutRequest: PatchHoldoutRequest,
): string {
  return JSON.stringify(
    PatchHoldoutRequest$outboundSchema.parse(patchHoldoutRequest),
  );
}

export function patchHoldoutRequestFromJSON(
  jsonString: string,
): SafeParseResult<PatchHoldoutRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchHoldoutRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchHoldoutRequest' from JSON`,
  );
}
