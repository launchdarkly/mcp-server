/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PutFlagDefaultsByProjectRequest = {
  /**
   * The project key
   */
  projectKey: string;
  upsertFlagDefaultsPayload: components.UpsertFlagDefaultsPayload;
};

/** @internal */
export const PutFlagDefaultsByProjectRequest$inboundSchema: z.ZodType<
  PutFlagDefaultsByProjectRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  UpsertFlagDefaultsPayload: components.UpsertFlagDefaultsPayload$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "UpsertFlagDefaultsPayload": "upsertFlagDefaultsPayload",
  });
});

/** @internal */
export type PutFlagDefaultsByProjectRequest$Outbound = {
  projectKey: string;
  UpsertFlagDefaultsPayload: components.UpsertFlagDefaultsPayload$Outbound;
};

/** @internal */
export const PutFlagDefaultsByProjectRequest$outboundSchema: z.ZodType<
  PutFlagDefaultsByProjectRequest$Outbound,
  z.ZodTypeDef,
  PutFlagDefaultsByProjectRequest
> = z.object({
  projectKey: z.string(),
  upsertFlagDefaultsPayload:
    components.UpsertFlagDefaultsPayload$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    upsertFlagDefaultsPayload: "UpsertFlagDefaultsPayload",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutFlagDefaultsByProjectRequest$ {
  /** @deprecated use `PutFlagDefaultsByProjectRequest$inboundSchema` instead. */
  export const inboundSchema = PutFlagDefaultsByProjectRequest$inboundSchema;
  /** @deprecated use `PutFlagDefaultsByProjectRequest$outboundSchema` instead. */
  export const outboundSchema = PutFlagDefaultsByProjectRequest$outboundSchema;
  /** @deprecated use `PutFlagDefaultsByProjectRequest$Outbound` instead. */
  export type Outbound = PutFlagDefaultsByProjectRequest$Outbound;
}

export function putFlagDefaultsByProjectRequestToJSON(
  putFlagDefaultsByProjectRequest: PutFlagDefaultsByProjectRequest,
): string {
  return JSON.stringify(
    PutFlagDefaultsByProjectRequest$outboundSchema.parse(
      putFlagDefaultsByProjectRequest,
    ),
  );
}

export function putFlagDefaultsByProjectRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutFlagDefaultsByProjectRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutFlagDefaultsByProjectRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutFlagDefaultsByProjectRequest' from JSON`,
  );
}
