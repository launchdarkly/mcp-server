/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetMauSdksByTypeRequest = {
  /**
   * The data returned starts from this timestamp. Defaults to seven days ago. The timestamp is in Unix milliseconds, for example, 1656694800000.
   */
  from?: string | undefined;
  /**
   * The data returned ends at this timestamp. Defaults to the current time. The timestamp is in Unix milliseconds, for example, 1657904400000.
   */
  to?: string | undefined;
  /**
   * The type of SDK with monthly active users (MAU) to list. Must be either `client` or `server`.
   */
  sdktype?: string | undefined;
};

/** @internal */
export const GetMauSdksByTypeRequest$inboundSchema: z.ZodType<
  GetMauSdksByTypeRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  from: z.string().optional(),
  to: z.string().optional(),
  sdktype: z.string().optional(),
});

/** @internal */
export type GetMauSdksByTypeRequest$Outbound = {
  from?: string | undefined;
  to?: string | undefined;
  sdktype?: string | undefined;
};

/** @internal */
export const GetMauSdksByTypeRequest$outboundSchema: z.ZodType<
  GetMauSdksByTypeRequest$Outbound,
  z.ZodTypeDef,
  GetMauSdksByTypeRequest
> = z.object({
  from: z.string().optional(),
  to: z.string().optional(),
  sdktype: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMauSdksByTypeRequest$ {
  /** @deprecated use `GetMauSdksByTypeRequest$inboundSchema` instead. */
  export const inboundSchema = GetMauSdksByTypeRequest$inboundSchema;
  /** @deprecated use `GetMauSdksByTypeRequest$outboundSchema` instead. */
  export const outboundSchema = GetMauSdksByTypeRequest$outboundSchema;
  /** @deprecated use `GetMauSdksByTypeRequest$Outbound` instead. */
  export type Outbound = GetMauSdksByTypeRequest$Outbound;
}

export function getMauSdksByTypeRequestToJSON(
  getMauSdksByTypeRequest: GetMauSdksByTypeRequest,
): string {
  return JSON.stringify(
    GetMauSdksByTypeRequest$outboundSchema.parse(getMauSdksByTypeRequest),
  );
}

export function getMauSdksByTypeRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetMauSdksByTypeRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetMauSdksByTypeRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetMauSdksByTypeRequest' from JSON`,
  );
}
