/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApprovalRequestApplyRequest = {
  /**
   * The approval request ID
   */
  id: string;
  postApprovalRequestApplyRequest: components.PostApprovalRequestApplyRequest;
};

/** @internal */
export const PostApprovalRequestApplyRequest$inboundSchema: z.ZodType<
  PostApprovalRequestApplyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  postApprovalRequestApplyRequest:
    components.PostApprovalRequestApplyRequest$inboundSchema,
});

/** @internal */
export type PostApprovalRequestApplyRequest$Outbound = {
  id: string;
  postApprovalRequestApplyRequest:
    components.PostApprovalRequestApplyRequest$Outbound;
};

/** @internal */
export const PostApprovalRequestApplyRequest$outboundSchema: z.ZodType<
  PostApprovalRequestApplyRequest$Outbound,
  z.ZodTypeDef,
  PostApprovalRequestApplyRequest
> = z.object({
  id: z.string(),
  postApprovalRequestApplyRequest:
    components.PostApprovalRequestApplyRequest$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApprovalRequestApplyRequest$ {
  /** @deprecated use `PostApprovalRequestApplyRequest$inboundSchema` instead. */
  export const inboundSchema = PostApprovalRequestApplyRequest$inboundSchema;
  /** @deprecated use `PostApprovalRequestApplyRequest$outboundSchema` instead. */
  export const outboundSchema = PostApprovalRequestApplyRequest$outboundSchema;
  /** @deprecated use `PostApprovalRequestApplyRequest$Outbound` instead. */
  export type Outbound = PostApprovalRequestApplyRequest$Outbound;
}

export function postApprovalRequestApplyRequestToJSON(
  postApprovalRequestApplyRequest: PostApprovalRequestApplyRequest,
): string {
  return JSON.stringify(
    PostApprovalRequestApplyRequest$outboundSchema.parse(
      postApprovalRequestApplyRequest,
    ),
  );
}

export function postApprovalRequestApplyRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostApprovalRequestApplyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApprovalRequestApplyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApprovalRequestApplyRequest' from JSON`,
  );
}
