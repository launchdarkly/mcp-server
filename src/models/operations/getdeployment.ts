/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetDeploymentRequest = {
  /**
   * The deployment ID
   */
  deploymentID: string;
  /**
   * Expand properties in response. Options: `pullRequests`, `flagReferences`
   */
  expand?: string | undefined;
};

/** @internal */
export const GetDeploymentRequest$inboundSchema: z.ZodType<
  GetDeploymentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  deploymentID: z.string(),
  expand: z.string().optional(),
});

/** @internal */
export type GetDeploymentRequest$Outbound = {
  deploymentID: string;
  expand?: string | undefined;
};

/** @internal */
export const GetDeploymentRequest$outboundSchema: z.ZodType<
  GetDeploymentRequest$Outbound,
  z.ZodTypeDef,
  GetDeploymentRequest
> = z.object({
  deploymentID: z.string(),
  expand: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDeploymentRequest$ {
  /** @deprecated use `GetDeploymentRequest$inboundSchema` instead. */
  export const inboundSchema = GetDeploymentRequest$inboundSchema;
  /** @deprecated use `GetDeploymentRequest$outboundSchema` instead. */
  export const outboundSchema = GetDeploymentRequest$outboundSchema;
  /** @deprecated use `GetDeploymentRequest$Outbound` instead. */
  export type Outbound = GetDeploymentRequest$Outbound;
}

export function getDeploymentRequestToJSON(
  getDeploymentRequest: GetDeploymentRequest,
): string {
  return JSON.stringify(
    GetDeploymentRequest$outboundSchema.parse(getDeploymentRequest),
  );
}

export function getDeploymentRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetDeploymentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetDeploymentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetDeploymentRequest' from JSON`,
  );
}
