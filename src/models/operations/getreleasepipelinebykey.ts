/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetReleasePipelineByKeyRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The release pipeline key
   */
  pipelineKey: string;
};

/** @internal */
export const GetReleasePipelineByKeyRequest$inboundSchema: z.ZodType<
  GetReleasePipelineByKeyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  pipelineKey: z.string(),
});

/** @internal */
export type GetReleasePipelineByKeyRequest$Outbound = {
  projectKey: string;
  pipelineKey: string;
};

/** @internal */
export const GetReleasePipelineByKeyRequest$outboundSchema: z.ZodType<
  GetReleasePipelineByKeyRequest$Outbound,
  z.ZodTypeDef,
  GetReleasePipelineByKeyRequest
> = z.object({
  projectKey: z.string(),
  pipelineKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetReleasePipelineByKeyRequest$ {
  /** @deprecated use `GetReleasePipelineByKeyRequest$inboundSchema` instead. */
  export const inboundSchema = GetReleasePipelineByKeyRequest$inboundSchema;
  /** @deprecated use `GetReleasePipelineByKeyRequest$outboundSchema` instead. */
  export const outboundSchema = GetReleasePipelineByKeyRequest$outboundSchema;
  /** @deprecated use `GetReleasePipelineByKeyRequest$Outbound` instead. */
  export type Outbound = GetReleasePipelineByKeyRequest$Outbound;
}

export function getReleasePipelineByKeyRequestToJSON(
  getReleasePipelineByKeyRequest: GetReleasePipelineByKeyRequest,
): string {
  return JSON.stringify(
    GetReleasePipelineByKeyRequest$outboundSchema.parse(
      getReleasePipelineByKeyRequest,
    ),
  );
}

export function getReleasePipelineByKeyRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetReleasePipelineByKeyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetReleasePipelineByKeyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetReleasePipelineByKeyRequest' from JSON`,
  );
}
