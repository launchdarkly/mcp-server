/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type CreateMetricGroupRequest = {
  /**
   * The project key
   */
  projectKey: string;
  metricGroupPost: models.MetricGroupPost;
};

/** @internal */
export const CreateMetricGroupRequest$inboundSchema: z.ZodType<
  CreateMetricGroupRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  MetricGroupPost: models.MetricGroupPost$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "MetricGroupPost": "metricGroupPost",
  });
});

/** @internal */
export type CreateMetricGroupRequest$Outbound = {
  projectKey: string;
  MetricGroupPost: models.MetricGroupPost$Outbound;
};

/** @internal */
export const CreateMetricGroupRequest$outboundSchema: z.ZodType<
  CreateMetricGroupRequest$Outbound,
  z.ZodTypeDef,
  CreateMetricGroupRequest
> = z.object({
  projectKey: z.string(),
  metricGroupPost: models.MetricGroupPost$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    metricGroupPost: "MetricGroupPost",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateMetricGroupRequest$ {
  /** @deprecated use `CreateMetricGroupRequest$inboundSchema` instead. */
  export const inboundSchema = CreateMetricGroupRequest$inboundSchema;
  /** @deprecated use `CreateMetricGroupRequest$outboundSchema` instead. */
  export const outboundSchema = CreateMetricGroupRequest$outboundSchema;
  /** @deprecated use `CreateMetricGroupRequest$Outbound` instead. */
  export type Outbound = CreateMetricGroupRequest$Outbound;
}

export function createMetricGroupRequestToJSON(
  createMetricGroupRequest: CreateMetricGroupRequest,
): string {
  return JSON.stringify(
    CreateMetricGroupRequest$outboundSchema.parse(createMetricGroupRequest),
  );
}

export function createMetricGroupRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateMetricGroupRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateMetricGroupRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateMetricGroupRequest' from JSON`,
  );
}
