/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PatchTriggerWorkflowRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The feature flag key
   */
  featureFlagKey: string;
  /**
   * The flag trigger ID
   */
  id: string;
  flagTriggerInput: components.FlagTriggerInput;
};

/** @internal */
export const PatchTriggerWorkflowRequest$inboundSchema: z.ZodType<
  PatchTriggerWorkflowRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  featureFlagKey: z.string(),
  id: z.string(),
  FlagTriggerInput: components.FlagTriggerInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "FlagTriggerInput": "flagTriggerInput",
  });
});

/** @internal */
export type PatchTriggerWorkflowRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  featureFlagKey: string;
  id: string;
  FlagTriggerInput: components.FlagTriggerInput$Outbound;
};

/** @internal */
export const PatchTriggerWorkflowRequest$outboundSchema: z.ZodType<
  PatchTriggerWorkflowRequest$Outbound,
  z.ZodTypeDef,
  PatchTriggerWorkflowRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  featureFlagKey: z.string(),
  id: z.string(),
  flagTriggerInput: components.FlagTriggerInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    flagTriggerInput: "FlagTriggerInput",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchTriggerWorkflowRequest$ {
  /** @deprecated use `PatchTriggerWorkflowRequest$inboundSchema` instead. */
  export const inboundSchema = PatchTriggerWorkflowRequest$inboundSchema;
  /** @deprecated use `PatchTriggerWorkflowRequest$outboundSchema` instead. */
  export const outboundSchema = PatchTriggerWorkflowRequest$outboundSchema;
  /** @deprecated use `PatchTriggerWorkflowRequest$Outbound` instead. */
  export type Outbound = PatchTriggerWorkflowRequest$Outbound;
}

export function patchTriggerWorkflowRequestToJSON(
  patchTriggerWorkflowRequest: PatchTriggerWorkflowRequest,
): string {
  return JSON.stringify(
    PatchTriggerWorkflowRequest$outboundSchema.parse(
      patchTriggerWorkflowRequest,
    ),
  );
}

export function patchTriggerWorkflowRequestFromJSON(
  jsonString: string,
): SafeParseResult<PatchTriggerWorkflowRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchTriggerWorkflowRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchTriggerWorkflowRequest' from JSON`,
  );
}
