/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PatchCustomRoleRequest = {
  /**
   * The custom role key
   */
  customRoleKey: string;
  patchWithComment: components.PatchWithComment;
};

/** @internal */
export const PatchCustomRoleRequest$inboundSchema: z.ZodType<
  PatchCustomRoleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  customRoleKey: z.string(),
  PatchWithComment: components.PatchWithComment$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "PatchWithComment": "patchWithComment",
  });
});

/** @internal */
export type PatchCustomRoleRequest$Outbound = {
  customRoleKey: string;
  PatchWithComment: components.PatchWithComment$Outbound;
};

/** @internal */
export const PatchCustomRoleRequest$outboundSchema: z.ZodType<
  PatchCustomRoleRequest$Outbound,
  z.ZodTypeDef,
  PatchCustomRoleRequest
> = z.object({
  customRoleKey: z.string(),
  patchWithComment: components.PatchWithComment$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    patchWithComment: "PatchWithComment",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchCustomRoleRequest$ {
  /** @deprecated use `PatchCustomRoleRequest$inboundSchema` instead. */
  export const inboundSchema = PatchCustomRoleRequest$inboundSchema;
  /** @deprecated use `PatchCustomRoleRequest$outboundSchema` instead. */
  export const outboundSchema = PatchCustomRoleRequest$outboundSchema;
  /** @deprecated use `PatchCustomRoleRequest$Outbound` instead. */
  export type Outbound = PatchCustomRoleRequest$Outbound;
}

export function patchCustomRoleRequestToJSON(
  patchCustomRoleRequest: PatchCustomRoleRequest,
): string {
  return JSON.stringify(
    PatchCustomRoleRequest$outboundSchema.parse(patchCustomRoleRequest),
  );
}

export function patchCustomRoleRequestFromJSON(
  jsonString: string,
): SafeParseResult<PatchCustomRoleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchCustomRoleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchCustomRoleRequest' from JSON`,
  );
}
