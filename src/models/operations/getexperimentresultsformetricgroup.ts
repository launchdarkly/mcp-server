/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetExperimentResultsForMetricGroupRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The experiment key
   */
  experimentKey: string;
  /**
   * The metric group key
   */
  metricGroupKey: string;
  /**
   * The iteration ID
   */
  iterationId?: string | undefined;
};

/** @internal */
export const GetExperimentResultsForMetricGroupRequest$inboundSchema: z.ZodType<
  GetExperimentResultsForMetricGroupRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  experimentKey: z.string(),
  metricGroupKey: z.string(),
  iterationId: z.string().optional(),
});

/** @internal */
export type GetExperimentResultsForMetricGroupRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  experimentKey: string;
  metricGroupKey: string;
  iterationId?: string | undefined;
};

/** @internal */
export const GetExperimentResultsForMetricGroupRequest$outboundSchema:
  z.ZodType<
    GetExperimentResultsForMetricGroupRequest$Outbound,
    z.ZodTypeDef,
    GetExperimentResultsForMetricGroupRequest
  > = z.object({
    projectKey: z.string(),
    environmentKey: z.string(),
    experimentKey: z.string(),
    metricGroupKey: z.string(),
    iterationId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetExperimentResultsForMetricGroupRequest$ {
  /** @deprecated use `GetExperimentResultsForMetricGroupRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetExperimentResultsForMetricGroupRequest$inboundSchema;
  /** @deprecated use `GetExperimentResultsForMetricGroupRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetExperimentResultsForMetricGroupRequest$outboundSchema;
  /** @deprecated use `GetExperimentResultsForMetricGroupRequest$Outbound` instead. */
  export type Outbound = GetExperimentResultsForMetricGroupRequest$Outbound;
}

export function getExperimentResultsForMetricGroupRequestToJSON(
  getExperimentResultsForMetricGroupRequest:
    GetExperimentResultsForMetricGroupRequest,
): string {
  return JSON.stringify(
    GetExperimentResultsForMetricGroupRequest$outboundSchema.parse(
      getExperimentResultsForMetricGroupRequest,
    ),
  );
}

export function getExperimentResultsForMetricGroupRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetExperimentResultsForMetricGroupRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetExperimentResultsForMetricGroupRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetExperimentResultsForMetricGroupRequest' from JSON`,
  );
}
