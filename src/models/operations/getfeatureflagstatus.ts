/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetFeatureFlagStatusRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The feature flag key
   */
  featureFlagKey: string;
};

/** @internal */
export const GetFeatureFlagStatusRequest$inboundSchema: z.ZodType<
  GetFeatureFlagStatusRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  featureFlagKey: z.string(),
});

/** @internal */
export type GetFeatureFlagStatusRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  featureFlagKey: string;
};

/** @internal */
export const GetFeatureFlagStatusRequest$outboundSchema: z.ZodType<
  GetFeatureFlagStatusRequest$Outbound,
  z.ZodTypeDef,
  GetFeatureFlagStatusRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  featureFlagKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFeatureFlagStatusRequest$ {
  /** @deprecated use `GetFeatureFlagStatusRequest$inboundSchema` instead. */
  export const inboundSchema = GetFeatureFlagStatusRequest$inboundSchema;
  /** @deprecated use `GetFeatureFlagStatusRequest$outboundSchema` instead. */
  export const outboundSchema = GetFeatureFlagStatusRequest$outboundSchema;
  /** @deprecated use `GetFeatureFlagStatusRequest$Outbound` instead. */
  export type Outbound = GetFeatureFlagStatusRequest$Outbound;
}

export function getFeatureFlagStatusRequestToJSON(
  getFeatureFlagStatusRequest: GetFeatureFlagStatusRequest,
): string {
  return JSON.stringify(
    GetFeatureFlagStatusRequest$outboundSchema.parse(
      getFeatureFlagStatusRequest,
    ),
  );
}

export function getFeatureFlagStatusRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetFeatureFlagStatusRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFeatureFlagStatusRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFeatureFlagStatusRequest' from JSON`,
  );
}
