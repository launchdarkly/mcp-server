/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type PostMemberTeamsRequest = {
  /**
   * The member ID
   */
  id: string;
  memberTeamsPostInput: models.MemberTeamsPostInput;
};

/** @internal */
export const PostMemberTeamsRequest$inboundSchema: z.ZodType<
  PostMemberTeamsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  MemberTeamsPostInput: models.MemberTeamsPostInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "MemberTeamsPostInput": "memberTeamsPostInput",
  });
});

/** @internal */
export type PostMemberTeamsRequest$Outbound = {
  id: string;
  MemberTeamsPostInput: models.MemberTeamsPostInput$Outbound;
};

/** @internal */
export const PostMemberTeamsRequest$outboundSchema: z.ZodType<
  PostMemberTeamsRequest$Outbound,
  z.ZodTypeDef,
  PostMemberTeamsRequest
> = z.object({
  id: z.string(),
  memberTeamsPostInput: models.MemberTeamsPostInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    memberTeamsPostInput: "MemberTeamsPostInput",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostMemberTeamsRequest$ {
  /** @deprecated use `PostMemberTeamsRequest$inboundSchema` instead. */
  export const inboundSchema = PostMemberTeamsRequest$inboundSchema;
  /** @deprecated use `PostMemberTeamsRequest$outboundSchema` instead. */
  export const outboundSchema = PostMemberTeamsRequest$outboundSchema;
  /** @deprecated use `PostMemberTeamsRequest$Outbound` instead. */
  export type Outbound = PostMemberTeamsRequest$Outbound;
}

export function postMemberTeamsRequestToJSON(
  postMemberTeamsRequest: PostMemberTeamsRequest,
): string {
  return JSON.stringify(
    PostMemberTeamsRequest$outboundSchema.parse(postMemberTeamsRequest),
  );
}

export function postMemberTeamsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostMemberTeamsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostMemberTeamsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostMemberTeamsRequest' from JSON`,
  );
}
