/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetMetricGroupRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The metric group key
   */
  metricGroupKey: string;
  /**
   * A comma-separated list of properties that can reveal additional information in the response.
   */
  expand?: string | undefined;
};

/** @internal */
export const GetMetricGroupRequest$inboundSchema: z.ZodType<
  GetMetricGroupRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  metricGroupKey: z.string(),
  expand: z.string().optional(),
});

/** @internal */
export type GetMetricGroupRequest$Outbound = {
  projectKey: string;
  metricGroupKey: string;
  expand?: string | undefined;
};

/** @internal */
export const GetMetricGroupRequest$outboundSchema: z.ZodType<
  GetMetricGroupRequest$Outbound,
  z.ZodTypeDef,
  GetMetricGroupRequest
> = z.object({
  projectKey: z.string(),
  metricGroupKey: z.string(),
  expand: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMetricGroupRequest$ {
  /** @deprecated use `GetMetricGroupRequest$inboundSchema` instead. */
  export const inboundSchema = GetMetricGroupRequest$inboundSchema;
  /** @deprecated use `GetMetricGroupRequest$outboundSchema` instead. */
  export const outboundSchema = GetMetricGroupRequest$outboundSchema;
  /** @deprecated use `GetMetricGroupRequest$Outbound` instead. */
  export type Outbound = GetMetricGroupRequest$Outbound;
}

export function getMetricGroupRequestToJSON(
  getMetricGroupRequest: GetMetricGroupRequest,
): string {
  return JSON.stringify(
    GetMetricGroupRequest$outboundSchema.parse(getMetricGroupRequest),
  );
}

export function getMetricGroupRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetMetricGroupRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetMetricGroupRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetMetricGroupRequest' from JSON`,
  );
}
