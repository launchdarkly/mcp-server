/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type PutFlagSettingRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The user key
   */
  userKey: string;
  /**
   * The feature flag key
   */
  featureFlagKey: string;
  valuePut: models.ValuePut;
};

/** @internal */
export const PutFlagSettingRequest$inboundSchema: z.ZodType<
  PutFlagSettingRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  userKey: z.string(),
  featureFlagKey: z.string(),
  ValuePut: models.ValuePut$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "ValuePut": "valuePut",
  });
});

/** @internal */
export type PutFlagSettingRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  userKey: string;
  featureFlagKey: string;
  ValuePut: models.ValuePut$Outbound;
};

/** @internal */
export const PutFlagSettingRequest$outboundSchema: z.ZodType<
  PutFlagSettingRequest$Outbound,
  z.ZodTypeDef,
  PutFlagSettingRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  userKey: z.string(),
  featureFlagKey: z.string(),
  valuePut: models.ValuePut$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    valuePut: "ValuePut",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutFlagSettingRequest$ {
  /** @deprecated use `PutFlagSettingRequest$inboundSchema` instead. */
  export const inboundSchema = PutFlagSettingRequest$inboundSchema;
  /** @deprecated use `PutFlagSettingRequest$outboundSchema` instead. */
  export const outboundSchema = PutFlagSettingRequest$outboundSchema;
  /** @deprecated use `PutFlagSettingRequest$Outbound` instead. */
  export type Outbound = PutFlagSettingRequest$Outbound;
}

export function putFlagSettingRequestToJSON(
  putFlagSettingRequest: PutFlagSettingRequest,
): string {
  return JSON.stringify(
    PutFlagSettingRequest$outboundSchema.parse(putFlagSettingRequest),
  );
}

export function putFlagSettingRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutFlagSettingRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutFlagSettingRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutFlagSettingRequest' from JSON`,
  );
}
