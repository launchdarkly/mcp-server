/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const DeleteOverridesServerList = [
  "http://localhost:8765",
] as const;

export type DeleteOverridesRequest = {
  projectKey: string;
};

/** @internal */
export const DeleteOverridesRequest$inboundSchema: z.ZodType<
  DeleteOverridesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
});

/** @internal */
export type DeleteOverridesRequest$Outbound = {
  projectKey: string;
};

/** @internal */
export const DeleteOverridesRequest$outboundSchema: z.ZodType<
  DeleteOverridesRequest$Outbound,
  z.ZodTypeDef,
  DeleteOverridesRequest
> = z.object({
  projectKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteOverridesRequest$ {
  /** @deprecated use `DeleteOverridesRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteOverridesRequest$inboundSchema;
  /** @deprecated use `DeleteOverridesRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteOverridesRequest$outboundSchema;
  /** @deprecated use `DeleteOverridesRequest$Outbound` instead. */
  export type Outbound = DeleteOverridesRequest$Outbound;
}

export function deleteOverridesRequestToJSON(
  deleteOverridesRequest: DeleteOverridesRequest,
): string {
  return JSON.stringify(
    DeleteOverridesRequest$outboundSchema.parse(deleteOverridesRequest),
  );
}

export function deleteOverridesRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteOverridesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteOverridesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteOverridesRequest' from JSON`,
  );
}
