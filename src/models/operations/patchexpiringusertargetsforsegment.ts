/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PatchExpiringUserTargetsForSegmentRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The segment key
   */
  segmentKey: string;
  patchSegmentRequest: components.PatchSegmentRequest;
};

/** @internal */
export const PatchExpiringUserTargetsForSegmentRequest$inboundSchema: z.ZodType<
  PatchExpiringUserTargetsForSegmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  segmentKey: z.string(),
  patchSegmentRequest: components.PatchSegmentRequest$inboundSchema,
});

/** @internal */
export type PatchExpiringUserTargetsForSegmentRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  segmentKey: string;
  patchSegmentRequest: components.PatchSegmentRequest$Outbound;
};

/** @internal */
export const PatchExpiringUserTargetsForSegmentRequest$outboundSchema:
  z.ZodType<
    PatchExpiringUserTargetsForSegmentRequest$Outbound,
    z.ZodTypeDef,
    PatchExpiringUserTargetsForSegmentRequest
  > = z.object({
    projectKey: z.string(),
    environmentKey: z.string(),
    segmentKey: z.string(),
    patchSegmentRequest: components.PatchSegmentRequest$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchExpiringUserTargetsForSegmentRequest$ {
  /** @deprecated use `PatchExpiringUserTargetsForSegmentRequest$inboundSchema` instead. */
  export const inboundSchema =
    PatchExpiringUserTargetsForSegmentRequest$inboundSchema;
  /** @deprecated use `PatchExpiringUserTargetsForSegmentRequest$outboundSchema` instead. */
  export const outboundSchema =
    PatchExpiringUserTargetsForSegmentRequest$outboundSchema;
  /** @deprecated use `PatchExpiringUserTargetsForSegmentRequest$Outbound` instead. */
  export type Outbound = PatchExpiringUserTargetsForSegmentRequest$Outbound;
}

export function patchExpiringUserTargetsForSegmentRequestToJSON(
  patchExpiringUserTargetsForSegmentRequest:
    PatchExpiringUserTargetsForSegmentRequest,
): string {
  return JSON.stringify(
    PatchExpiringUserTargetsForSegmentRequest$outboundSchema.parse(
      patchExpiringUserTargetsForSegmentRequest,
    ),
  );
}

export function patchExpiringUserTargetsForSegmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchExpiringUserTargetsForSegmentRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchExpiringUserTargetsForSegmentRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchExpiringUserTargetsForSegmentRequest' from JSON`,
  );
}
