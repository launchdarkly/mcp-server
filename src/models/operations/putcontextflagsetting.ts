/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PutContextFlagSettingRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The context kind
   */
  contextKind: string;
  /**
   * The context key
   */
  contextKey: string;
  /**
   * The feature flag key
   */
  featureFlagKey: string;
  valuePut: components.ValuePut;
};

/** @internal */
export const PutContextFlagSettingRequest$inboundSchema: z.ZodType<
  PutContextFlagSettingRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  contextKind: z.string(),
  contextKey: z.string(),
  featureFlagKey: z.string(),
  ValuePut: components.ValuePut$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "ValuePut": "valuePut",
  });
});

/** @internal */
export type PutContextFlagSettingRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  contextKind: string;
  contextKey: string;
  featureFlagKey: string;
  ValuePut: components.ValuePut$Outbound;
};

/** @internal */
export const PutContextFlagSettingRequest$outboundSchema: z.ZodType<
  PutContextFlagSettingRequest$Outbound,
  z.ZodTypeDef,
  PutContextFlagSettingRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  contextKind: z.string(),
  contextKey: z.string(),
  featureFlagKey: z.string(),
  valuePut: components.ValuePut$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    valuePut: "ValuePut",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutContextFlagSettingRequest$ {
  /** @deprecated use `PutContextFlagSettingRequest$inboundSchema` instead. */
  export const inboundSchema = PutContextFlagSettingRequest$inboundSchema;
  /** @deprecated use `PutContextFlagSettingRequest$outboundSchema` instead. */
  export const outboundSchema = PutContextFlagSettingRequest$outboundSchema;
  /** @deprecated use `PutContextFlagSettingRequest$Outbound` instead. */
  export type Outbound = PutContextFlagSettingRequest$Outbound;
}

export function putContextFlagSettingRequestToJSON(
  putContextFlagSettingRequest: PutContextFlagSettingRequest,
): string {
  return JSON.stringify(
    PutContextFlagSettingRequest$outboundSchema.parse(
      putContextFlagSettingRequest,
    ),
  );
}

export function putContextFlagSettingRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutContextFlagSettingRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutContextFlagSettingRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutContextFlagSettingRequest' from JSON`,
  );
}
