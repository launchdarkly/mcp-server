/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetCustomRolesRequest = {
  /**
   * The maximum number of custom roles to return. Defaults to 20.
   */
  limit?: number | undefined;
  /**
   * Where to start in the list. Defaults to 0. Use this with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`.
   */
  offset?: number | undefined;
};

/** @internal */
export const GetCustomRolesRequest$inboundSchema: z.ZodType<
  GetCustomRolesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  limit: z.number().int().optional(),
  offset: z.number().int().optional(),
});

/** @internal */
export type GetCustomRolesRequest$Outbound = {
  limit?: number | undefined;
  offset?: number | undefined;
};

/** @internal */
export const GetCustomRolesRequest$outboundSchema: z.ZodType<
  GetCustomRolesRequest$Outbound,
  z.ZodTypeDef,
  GetCustomRolesRequest
> = z.object({
  limit: z.number().int().optional(),
  offset: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCustomRolesRequest$ {
  /** @deprecated use `GetCustomRolesRequest$inboundSchema` instead. */
  export const inboundSchema = GetCustomRolesRequest$inboundSchema;
  /** @deprecated use `GetCustomRolesRequest$outboundSchema` instead. */
  export const outboundSchema = GetCustomRolesRequest$outboundSchema;
  /** @deprecated use `GetCustomRolesRequest$Outbound` instead. */
  export type Outbound = GetCustomRolesRequest$Outbound;
}

export function getCustomRolesRequestToJSON(
  getCustomRolesRequest: GetCustomRolesRequest,
): string {
  return JSON.stringify(
    GetCustomRolesRequest$outboundSchema.parse(getCustomRolesRequest),
  );
}

export function getCustomRolesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetCustomRolesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCustomRolesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCustomRolesRequest' from JSON`,
  );
}
