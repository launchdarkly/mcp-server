/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetInsightGroupRequest = {
  /**
   * The insight group key
   */
  insightGroupKey: string;
  /**
   * Options: `scores`, `environment`
   */
  expand?: string | undefined;
};

/** @internal */
export const GetInsightGroupRequest$inboundSchema: z.ZodType<
  GetInsightGroupRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  insightGroupKey: z.string(),
  expand: z.string().optional(),
});

/** @internal */
export type GetInsightGroupRequest$Outbound = {
  insightGroupKey: string;
  expand?: string | undefined;
};

/** @internal */
export const GetInsightGroupRequest$outboundSchema: z.ZodType<
  GetInsightGroupRequest$Outbound,
  z.ZodTypeDef,
  GetInsightGroupRequest
> = z.object({
  insightGroupKey: z.string(),
  expand: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInsightGroupRequest$ {
  /** @deprecated use `GetInsightGroupRequest$inboundSchema` instead. */
  export const inboundSchema = GetInsightGroupRequest$inboundSchema;
  /** @deprecated use `GetInsightGroupRequest$outboundSchema` instead. */
  export const outboundSchema = GetInsightGroupRequest$outboundSchema;
  /** @deprecated use `GetInsightGroupRequest$Outbound` instead. */
  export type Outbound = GetInsightGroupRequest$Outbound;
}

export function getInsightGroupRequestToJSON(
  getInsightGroupRequest: GetInsightGroupRequest,
): string {
  return JSON.stringify(
    GetInsightGroupRequest$outboundSchema.parse(getInsightGroupRequest),
  );
}

export function getInsightGroupRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetInsightGroupRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetInsightGroupRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetInsightGroupRequest' from JSON`,
  );
}
