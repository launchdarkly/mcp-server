/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostReleasePipelineRequest = {
  /**
   * The project key
   */
  projectKey: string;
  createReleasePipelineInput: components.CreateReleasePipelineInput;
};

/** @internal */
export const PostReleasePipelineRequest$inboundSchema: z.ZodType<
  PostReleasePipelineRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  CreateReleasePipelineInput:
    components.CreateReleasePipelineInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "CreateReleasePipelineInput": "createReleasePipelineInput",
  });
});

/** @internal */
export type PostReleasePipelineRequest$Outbound = {
  projectKey: string;
  CreateReleasePipelineInput: components.CreateReleasePipelineInput$Outbound;
};

/** @internal */
export const PostReleasePipelineRequest$outboundSchema: z.ZodType<
  PostReleasePipelineRequest$Outbound,
  z.ZodTypeDef,
  PostReleasePipelineRequest
> = z.object({
  projectKey: z.string(),
  createReleasePipelineInput:
    components.CreateReleasePipelineInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    createReleasePipelineInput: "CreateReleasePipelineInput",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostReleasePipelineRequest$ {
  /** @deprecated use `PostReleasePipelineRequest$inboundSchema` instead. */
  export const inboundSchema = PostReleasePipelineRequest$inboundSchema;
  /** @deprecated use `PostReleasePipelineRequest$outboundSchema` instead. */
  export const outboundSchema = PostReleasePipelineRequest$outboundSchema;
  /** @deprecated use `PostReleasePipelineRequest$Outbound` instead. */
  export type Outbound = PostReleasePipelineRequest$Outbound;
}

export function postReleasePipelineRequestToJSON(
  postReleasePipelineRequest: PostReleasePipelineRequest,
): string {
  return JSON.stringify(
    PostReleasePipelineRequest$outboundSchema.parse(postReleasePipelineRequest),
  );
}

export function postReleasePipelineRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostReleasePipelineRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostReleasePipelineRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostReleasePipelineRequest' from JSON`,
  );
}
