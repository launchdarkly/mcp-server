/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type CreateIntegrationDeliveryConfigurationRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The integration key
   */
  integrationKey: string;
  integrationDeliveryConfigurationPost:
    models.IntegrationDeliveryConfigurationPost;
};

/** @internal */
export const CreateIntegrationDeliveryConfigurationRequest$inboundSchema:
  z.ZodType<
    CreateIntegrationDeliveryConfigurationRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    projectKey: z.string(),
    environmentKey: z.string(),
    integrationKey: z.string(),
    IntegrationDeliveryConfigurationPost:
      models.IntegrationDeliveryConfigurationPost$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "IntegrationDeliveryConfigurationPost":
        "integrationDeliveryConfigurationPost",
    });
  });

/** @internal */
export type CreateIntegrationDeliveryConfigurationRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  integrationKey: string;
  IntegrationDeliveryConfigurationPost:
    models.IntegrationDeliveryConfigurationPost$Outbound;
};

/** @internal */
export const CreateIntegrationDeliveryConfigurationRequest$outboundSchema:
  z.ZodType<
    CreateIntegrationDeliveryConfigurationRequest$Outbound,
    z.ZodTypeDef,
    CreateIntegrationDeliveryConfigurationRequest
  > = z.object({
    projectKey: z.string(),
    environmentKey: z.string(),
    integrationKey: z.string(),
    integrationDeliveryConfigurationPost:
      models.IntegrationDeliveryConfigurationPost$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      integrationDeliveryConfigurationPost:
        "IntegrationDeliveryConfigurationPost",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateIntegrationDeliveryConfigurationRequest$ {
  /** @deprecated use `CreateIntegrationDeliveryConfigurationRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateIntegrationDeliveryConfigurationRequest$inboundSchema;
  /** @deprecated use `CreateIntegrationDeliveryConfigurationRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateIntegrationDeliveryConfigurationRequest$outboundSchema;
  /** @deprecated use `CreateIntegrationDeliveryConfigurationRequest$Outbound` instead. */
  export type Outbound = CreateIntegrationDeliveryConfigurationRequest$Outbound;
}

export function createIntegrationDeliveryConfigurationRequestToJSON(
  createIntegrationDeliveryConfigurationRequest:
    CreateIntegrationDeliveryConfigurationRequest,
): string {
  return JSON.stringify(
    CreateIntegrationDeliveryConfigurationRequest$outboundSchema.parse(
      createIntegrationDeliveryConfigurationRequest,
    ),
  );
}

export function createIntegrationDeliveryConfigurationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateIntegrationDeliveryConfigurationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateIntegrationDeliveryConfigurationRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateIntegrationDeliveryConfigurationRequest' from JSON`,
  );
}
