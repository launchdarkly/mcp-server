/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApprovalRequestReviewForFlagRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The feature flag key
   */
  featureFlagKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The feature flag approval request ID
   */
  id: string;
  postApprovalRequestReviewRequest: components.PostApprovalRequestReviewRequest;
};

/** @internal */
export const PostApprovalRequestReviewForFlagRequest$inboundSchema: z.ZodType<
  PostApprovalRequestReviewForFlagRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  featureFlagKey: z.string(),
  environmentKey: z.string(),
  id: z.string(),
  postApprovalRequestReviewRequest:
    components.PostApprovalRequestReviewRequest$inboundSchema,
});

/** @internal */
export type PostApprovalRequestReviewForFlagRequest$Outbound = {
  projectKey: string;
  featureFlagKey: string;
  environmentKey: string;
  id: string;
  postApprovalRequestReviewRequest:
    components.PostApprovalRequestReviewRequest$Outbound;
};

/** @internal */
export const PostApprovalRequestReviewForFlagRequest$outboundSchema: z.ZodType<
  PostApprovalRequestReviewForFlagRequest$Outbound,
  z.ZodTypeDef,
  PostApprovalRequestReviewForFlagRequest
> = z.object({
  projectKey: z.string(),
  featureFlagKey: z.string(),
  environmentKey: z.string(),
  id: z.string(),
  postApprovalRequestReviewRequest:
    components.PostApprovalRequestReviewRequest$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApprovalRequestReviewForFlagRequest$ {
  /** @deprecated use `PostApprovalRequestReviewForFlagRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApprovalRequestReviewForFlagRequest$inboundSchema;
  /** @deprecated use `PostApprovalRequestReviewForFlagRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApprovalRequestReviewForFlagRequest$outboundSchema;
  /** @deprecated use `PostApprovalRequestReviewForFlagRequest$Outbound` instead. */
  export type Outbound = PostApprovalRequestReviewForFlagRequest$Outbound;
}

export function postApprovalRequestReviewForFlagRequestToJSON(
  postApprovalRequestReviewForFlagRequest:
    PostApprovalRequestReviewForFlagRequest,
): string {
  return JSON.stringify(
    PostApprovalRequestReviewForFlagRequest$outboundSchema.parse(
      postApprovalRequestReviewForFlagRequest,
    ),
  );
}

export function postApprovalRequestReviewForFlagRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApprovalRequestReviewForFlagRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApprovalRequestReviewForFlagRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApprovalRequestReviewForFlagRequest' from JSON`,
  );
}
