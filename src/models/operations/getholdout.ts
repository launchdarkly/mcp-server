/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetHoldoutRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The holdout experiment key
   */
  holdoutKey: string;
  /**
   * A comma-separated list of properties that can reveal additional information in the response. Supported fields are explained above. Holdout experiment expansion fields have no prefix. Related experiment expansion fields have `rel-` as a prefix.
   */
  expand?: string | undefined;
};

/** @internal */
export const GetHoldoutRequest$inboundSchema: z.ZodType<
  GetHoldoutRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  holdoutKey: z.string(),
  expand: z.string().optional(),
});

/** @internal */
export type GetHoldoutRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  holdoutKey: string;
  expand?: string | undefined;
};

/** @internal */
export const GetHoldoutRequest$outboundSchema: z.ZodType<
  GetHoldoutRequest$Outbound,
  z.ZodTypeDef,
  GetHoldoutRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  holdoutKey: z.string(),
  expand: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetHoldoutRequest$ {
  /** @deprecated use `GetHoldoutRequest$inboundSchema` instead. */
  export const inboundSchema = GetHoldoutRequest$inboundSchema;
  /** @deprecated use `GetHoldoutRequest$outboundSchema` instead. */
  export const outboundSchema = GetHoldoutRequest$outboundSchema;
  /** @deprecated use `GetHoldoutRequest$Outbound` instead. */
  export type Outbound = GetHoldoutRequest$Outbound;
}

export function getHoldoutRequestToJSON(
  getHoldoutRequest: GetHoldoutRequest,
): string {
  return JSON.stringify(
    GetHoldoutRequest$outboundSchema.parse(getHoldoutRequest),
  );
}

export function getHoldoutRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetHoldoutRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetHoldoutRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetHoldoutRequest' from JSON`,
  );
}
