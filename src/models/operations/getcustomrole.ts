/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetCustomRoleRequest = {
  /**
   * The custom role key or ID
   */
  customRoleKey: string;
};

/** @internal */
export const GetCustomRoleRequest$inboundSchema: z.ZodType<
  GetCustomRoleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  customRoleKey: z.string(),
});

/** @internal */
export type GetCustomRoleRequest$Outbound = {
  customRoleKey: string;
};

/** @internal */
export const GetCustomRoleRequest$outboundSchema: z.ZodType<
  GetCustomRoleRequest$Outbound,
  z.ZodTypeDef,
  GetCustomRoleRequest
> = z.object({
  customRoleKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCustomRoleRequest$ {
  /** @deprecated use `GetCustomRoleRequest$inboundSchema` instead. */
  export const inboundSchema = GetCustomRoleRequest$inboundSchema;
  /** @deprecated use `GetCustomRoleRequest$outboundSchema` instead. */
  export const outboundSchema = GetCustomRoleRequest$outboundSchema;
  /** @deprecated use `GetCustomRoleRequest$Outbound` instead. */
  export type Outbound = GetCustomRoleRequest$Outbound;
}

export function getCustomRoleRequestToJSON(
  getCustomRoleRequest: GetCustomRoleRequest,
): string {
  return JSON.stringify(
    GetCustomRoleRequest$outboundSchema.parse(getCustomRoleRequest),
  );
}

export function getCustomRoleRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetCustomRoleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCustomRoleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCustomRoleRequest' from JSON`,
  );
}
