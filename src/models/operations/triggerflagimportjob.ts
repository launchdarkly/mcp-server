/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TriggerFlagImportJobRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The integration key
   */
  integrationKey: string;
  /**
   * The integration ID
   */
  integrationId: string;
};

/** @internal */
export const TriggerFlagImportJobRequest$inboundSchema: z.ZodType<
  TriggerFlagImportJobRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  integrationKey: z.string(),
  integrationId: z.string(),
});

/** @internal */
export type TriggerFlagImportJobRequest$Outbound = {
  projectKey: string;
  integrationKey: string;
  integrationId: string;
};

/** @internal */
export const TriggerFlagImportJobRequest$outboundSchema: z.ZodType<
  TriggerFlagImportJobRequest$Outbound,
  z.ZodTypeDef,
  TriggerFlagImportJobRequest
> = z.object({
  projectKey: z.string(),
  integrationKey: z.string(),
  integrationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TriggerFlagImportJobRequest$ {
  /** @deprecated use `TriggerFlagImportJobRequest$inboundSchema` instead. */
  export const inboundSchema = TriggerFlagImportJobRequest$inboundSchema;
  /** @deprecated use `TriggerFlagImportJobRequest$outboundSchema` instead. */
  export const outboundSchema = TriggerFlagImportJobRequest$outboundSchema;
  /** @deprecated use `TriggerFlagImportJobRequest$Outbound` instead. */
  export type Outbound = TriggerFlagImportJobRequest$Outbound;
}

export function triggerFlagImportJobRequestToJSON(
  triggerFlagImportJobRequest: TriggerFlagImportJobRequest,
): string {
  return JSON.stringify(
    TriggerFlagImportJobRequest$outboundSchema.parse(
      triggerFlagImportJobRequest,
    ),
  );
}

export function triggerFlagImportJobRequestFromJSON(
  jsonString: string,
): SafeParseResult<TriggerFlagImportJobRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TriggerFlagImportJobRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TriggerFlagImportJobRequest' from JSON`,
  );
}
