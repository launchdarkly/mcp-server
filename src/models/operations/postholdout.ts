/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostHoldoutRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  holdoutPostRequest: components.HoldoutPostRequest;
};

/** @internal */
export const PostHoldoutRequest$inboundSchema: z.ZodType<
  PostHoldoutRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  HoldoutPostRequest: components.HoldoutPostRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "HoldoutPostRequest": "holdoutPostRequest",
  });
});

/** @internal */
export type PostHoldoutRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  HoldoutPostRequest: components.HoldoutPostRequest$Outbound;
};

/** @internal */
export const PostHoldoutRequest$outboundSchema: z.ZodType<
  PostHoldoutRequest$Outbound,
  z.ZodTypeDef,
  PostHoldoutRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  holdoutPostRequest: components.HoldoutPostRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    holdoutPostRequest: "HoldoutPostRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostHoldoutRequest$ {
  /** @deprecated use `PostHoldoutRequest$inboundSchema` instead. */
  export const inboundSchema = PostHoldoutRequest$inboundSchema;
  /** @deprecated use `PostHoldoutRequest$outboundSchema` instead. */
  export const outboundSchema = PostHoldoutRequest$outboundSchema;
  /** @deprecated use `PostHoldoutRequest$Outbound` instead. */
  export type Outbound = PostHoldoutRequest$Outbound;
}

export function postHoldoutRequestToJSON(
  postHoldoutRequest: PostHoldoutRequest,
): string {
  return JSON.stringify(
    PostHoldoutRequest$outboundSchema.parse(postHoldoutRequest),
  );
}

export function postHoldoutRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostHoldoutRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostHoldoutRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostHoldoutRequest' from JSON`,
  );
}
