/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteContextInstancesRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  /**
   * The context instance ID
   */
  id: string;
};

/** @internal */
export const DeleteContextInstancesRequest$inboundSchema: z.ZodType<
  DeleteContextInstancesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  id: z.string(),
});

/** @internal */
export type DeleteContextInstancesRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  id: string;
};

/** @internal */
export const DeleteContextInstancesRequest$outboundSchema: z.ZodType<
  DeleteContextInstancesRequest$Outbound,
  z.ZodTypeDef,
  DeleteContextInstancesRequest
> = z.object({
  projectKey: z.string(),
  environmentKey: z.string(),
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteContextInstancesRequest$ {
  /** @deprecated use `DeleteContextInstancesRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteContextInstancesRequest$inboundSchema;
  /** @deprecated use `DeleteContextInstancesRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteContextInstancesRequest$outboundSchema;
  /** @deprecated use `DeleteContextInstancesRequest$Outbound` instead. */
  export type Outbound = DeleteContextInstancesRequest$Outbound;
}

export function deleteContextInstancesRequestToJSON(
  deleteContextInstancesRequest: DeleteContextInstancesRequest,
): string {
  return JSON.stringify(
    DeleteContextInstancesRequest$outboundSchema.parse(
      deleteContextInstancesRequest,
    ),
  );
}

export function deleteContextInstancesRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteContextInstancesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteContextInstancesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteContextInstancesRequest' from JSON`,
  );
}
