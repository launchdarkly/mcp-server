/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Version of the endpoint.
 */
export const PostRestrictedModelsLDAPIVersion = {
  Beta: "beta",
} as const;
/**
 * Version of the endpoint.
 */
export type PostRestrictedModelsLDAPIVersion = ClosedEnum<
  typeof PostRestrictedModelsLDAPIVersion
>;

export type PostRestrictedModelsRequest = {
  /**
   * Version of the endpoint.
   */
  ldAPIVersion: PostRestrictedModelsLDAPIVersion;
  projectKey: string;
  /**
   * List of AI model keys to add to the restricted list.
   */
  restrictedModelsRequest: components.RestrictedModelsRequest;
};

/** @internal */
export const PostRestrictedModelsLDAPIVersion$inboundSchema: z.ZodNativeEnum<
  typeof PostRestrictedModelsLDAPIVersion
> = z.nativeEnum(PostRestrictedModelsLDAPIVersion);

/** @internal */
export const PostRestrictedModelsLDAPIVersion$outboundSchema: z.ZodNativeEnum<
  typeof PostRestrictedModelsLDAPIVersion
> = PostRestrictedModelsLDAPIVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostRestrictedModelsLDAPIVersion$ {
  /** @deprecated use `PostRestrictedModelsLDAPIVersion$inboundSchema` instead. */
  export const inboundSchema = PostRestrictedModelsLDAPIVersion$inboundSchema;
  /** @deprecated use `PostRestrictedModelsLDAPIVersion$outboundSchema` instead. */
  export const outboundSchema = PostRestrictedModelsLDAPIVersion$outboundSchema;
}

/** @internal */
export const PostRestrictedModelsRequest$inboundSchema: z.ZodType<
  PostRestrictedModelsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "LD-API-Version": PostRestrictedModelsLDAPIVersion$inboundSchema,
  projectKey: z.string(),
  RestrictedModelsRequest: components.RestrictedModelsRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "LD-API-Version": "ldAPIVersion",
    "RestrictedModelsRequest": "restrictedModelsRequest",
  });
});

/** @internal */
export type PostRestrictedModelsRequest$Outbound = {
  "LD-API-Version": string;
  projectKey: string;
  RestrictedModelsRequest: components.RestrictedModelsRequest$Outbound;
};

/** @internal */
export const PostRestrictedModelsRequest$outboundSchema: z.ZodType<
  PostRestrictedModelsRequest$Outbound,
  z.ZodTypeDef,
  PostRestrictedModelsRequest
> = z.object({
  ldAPIVersion: PostRestrictedModelsLDAPIVersion$outboundSchema,
  projectKey: z.string(),
  restrictedModelsRequest: components.RestrictedModelsRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    ldAPIVersion: "LD-API-Version",
    restrictedModelsRequest: "RestrictedModelsRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostRestrictedModelsRequest$ {
  /** @deprecated use `PostRestrictedModelsRequest$inboundSchema` instead. */
  export const inboundSchema = PostRestrictedModelsRequest$inboundSchema;
  /** @deprecated use `PostRestrictedModelsRequest$outboundSchema` instead. */
  export const outboundSchema = PostRestrictedModelsRequest$outboundSchema;
  /** @deprecated use `PostRestrictedModelsRequest$Outbound` instead. */
  export type Outbound = PostRestrictedModelsRequest$Outbound;
}

export function postRestrictedModelsRequestToJSON(
  postRestrictedModelsRequest: PostRestrictedModelsRequest,
): string {
  return JSON.stringify(
    PostRestrictedModelsRequest$outboundSchema.parse(
      postRestrictedModelsRequest,
    ),
  );
}

export function postRestrictedModelsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostRestrictedModelsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostRestrictedModelsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostRestrictedModelsRequest' from JSON`,
  );
}
