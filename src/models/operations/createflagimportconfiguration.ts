/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateFlagImportConfigurationRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The integration key
   */
  integrationKey: string;
  flagImportConfigurationPost: components.FlagImportConfigurationPost;
};

/** @internal */
export const CreateFlagImportConfigurationRequest$inboundSchema: z.ZodType<
  CreateFlagImportConfigurationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  integrationKey: z.string(),
  FlagImportConfigurationPost:
    components.FlagImportConfigurationPost$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "FlagImportConfigurationPost": "flagImportConfigurationPost",
  });
});

/** @internal */
export type CreateFlagImportConfigurationRequest$Outbound = {
  projectKey: string;
  integrationKey: string;
  FlagImportConfigurationPost: components.FlagImportConfigurationPost$Outbound;
};

/** @internal */
export const CreateFlagImportConfigurationRequest$outboundSchema: z.ZodType<
  CreateFlagImportConfigurationRequest$Outbound,
  z.ZodTypeDef,
  CreateFlagImportConfigurationRequest
> = z.object({
  projectKey: z.string(),
  integrationKey: z.string(),
  flagImportConfigurationPost:
    components.FlagImportConfigurationPost$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    flagImportConfigurationPost: "FlagImportConfigurationPost",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateFlagImportConfigurationRequest$ {
  /** @deprecated use `CreateFlagImportConfigurationRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateFlagImportConfigurationRequest$inboundSchema;
  /** @deprecated use `CreateFlagImportConfigurationRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateFlagImportConfigurationRequest$outboundSchema;
  /** @deprecated use `CreateFlagImportConfigurationRequest$Outbound` instead. */
  export type Outbound = CreateFlagImportConfigurationRequest$Outbound;
}

export function createFlagImportConfigurationRequestToJSON(
  createFlagImportConfigurationRequest: CreateFlagImportConfigurationRequest,
): string {
  return JSON.stringify(
    CreateFlagImportConfigurationRequest$outboundSchema.parse(
      createFlagImportConfigurationRequest,
    ),
  );
}

export function createFlagImportConfigurationRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateFlagImportConfigurationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateFlagImportConfigurationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateFlagImportConfigurationRequest' from JSON`,
  );
}
