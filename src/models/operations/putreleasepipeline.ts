/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type PutReleasePipelineRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The release pipeline key
   */
  pipelineKey: string;
  updateReleasePipelineInput: models.UpdateReleasePipelineInput;
};

/** @internal */
export const PutReleasePipelineRequest$inboundSchema: z.ZodType<
  PutReleasePipelineRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  pipelineKey: z.string(),
  UpdateReleasePipelineInput: models.UpdateReleasePipelineInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "UpdateReleasePipelineInput": "updateReleasePipelineInput",
  });
});

/** @internal */
export type PutReleasePipelineRequest$Outbound = {
  projectKey: string;
  pipelineKey: string;
  UpdateReleasePipelineInput: models.UpdateReleasePipelineInput$Outbound;
};

/** @internal */
export const PutReleasePipelineRequest$outboundSchema: z.ZodType<
  PutReleasePipelineRequest$Outbound,
  z.ZodTypeDef,
  PutReleasePipelineRequest
> = z.object({
  projectKey: z.string(),
  pipelineKey: z.string(),
  updateReleasePipelineInput: models.UpdateReleasePipelineInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    updateReleasePipelineInput: "UpdateReleasePipelineInput",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutReleasePipelineRequest$ {
  /** @deprecated use `PutReleasePipelineRequest$inboundSchema` instead. */
  export const inboundSchema = PutReleasePipelineRequest$inboundSchema;
  /** @deprecated use `PutReleasePipelineRequest$outboundSchema` instead. */
  export const outboundSchema = PutReleasePipelineRequest$outboundSchema;
  /** @deprecated use `PutReleasePipelineRequest$Outbound` instead. */
  export type Outbound = PutReleasePipelineRequest$Outbound;
}

export function putReleasePipelineRequestToJSON(
  putReleasePipelineRequest: PutReleasePipelineRequest,
): string {
  return JSON.stringify(
    PutReleasePipelineRequest$outboundSchema.parse(putReleasePipelineRequest),
  );
}

export function putReleasePipelineRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutReleasePipelineRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutReleasePipelineRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutReleasePipelineRequest' from JSON`,
  );
}
