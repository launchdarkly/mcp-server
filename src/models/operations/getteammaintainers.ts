/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetTeamMaintainersRequest = {
  /**
   * The team key
   */
  teamKey: string;
  /**
   * The number of maintainers to return in the response. Defaults to 20.
   */
  limit?: number | undefined;
  /**
   * Where to start in the list. This is for use with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`.
   */
  offset?: number | undefined;
};

/** @internal */
export const GetTeamMaintainersRequest$inboundSchema: z.ZodType<
  GetTeamMaintainersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  teamKey: z.string(),
  limit: z.number().int().optional(),
  offset: z.number().int().optional(),
});

/** @internal */
export type GetTeamMaintainersRequest$Outbound = {
  teamKey: string;
  limit?: number | undefined;
  offset?: number | undefined;
};

/** @internal */
export const GetTeamMaintainersRequest$outboundSchema: z.ZodType<
  GetTeamMaintainersRequest$Outbound,
  z.ZodTypeDef,
  GetTeamMaintainersRequest
> = z.object({
  teamKey: z.string(),
  limit: z.number().int().optional(),
  offset: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTeamMaintainersRequest$ {
  /** @deprecated use `GetTeamMaintainersRequest$inboundSchema` instead. */
  export const inboundSchema = GetTeamMaintainersRequest$inboundSchema;
  /** @deprecated use `GetTeamMaintainersRequest$outboundSchema` instead. */
  export const outboundSchema = GetTeamMaintainersRequest$outboundSchema;
  /** @deprecated use `GetTeamMaintainersRequest$Outbound` instead. */
  export type Outbound = GetTeamMaintainersRequest$Outbound;
}

export function getTeamMaintainersRequestToJSON(
  getTeamMaintainersRequest: GetTeamMaintainersRequest,
): string {
  return JSON.stringify(
    GetTeamMaintainersRequest$outboundSchema.parse(getTeamMaintainersRequest),
  );
}

export function getTeamMaintainersRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetTeamMaintainersRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetTeamMaintainersRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetTeamMaintainersRequest' from JSON`,
  );
}
