/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteFlagLinkRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The feature flag key
   */
  featureFlagKey: string;
  /**
   * The flag link ID or Key
   */
  id: string;
};

/** @internal */
export const DeleteFlagLinkRequest$inboundSchema: z.ZodType<
  DeleteFlagLinkRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectKey: z.string(),
  featureFlagKey: z.string(),
  id: z.string(),
});

/** @internal */
export type DeleteFlagLinkRequest$Outbound = {
  projectKey: string;
  featureFlagKey: string;
  id: string;
};

/** @internal */
export const DeleteFlagLinkRequest$outboundSchema: z.ZodType<
  DeleteFlagLinkRequest$Outbound,
  z.ZodTypeDef,
  DeleteFlagLinkRequest
> = z.object({
  projectKey: z.string(),
  featureFlagKey: z.string(),
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteFlagLinkRequest$ {
  /** @deprecated use `DeleteFlagLinkRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteFlagLinkRequest$inboundSchema;
  /** @deprecated use `DeleteFlagLinkRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteFlagLinkRequest$outboundSchema;
  /** @deprecated use `DeleteFlagLinkRequest$Outbound` instead. */
  export type Outbound = DeleteFlagLinkRequest$Outbound;
}

export function deleteFlagLinkRequestToJSON(
  deleteFlagLinkRequest: DeleteFlagLinkRequest,
): string {
  return JSON.stringify(
    DeleteFlagLinkRequest$outboundSchema.parse(deleteFlagLinkRequest),
  );
}

export function deleteFlagLinkRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteFlagLinkRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteFlagLinkRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteFlagLinkRequest' from JSON`,
  );
}
