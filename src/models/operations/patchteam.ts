/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type PatchTeamRequest = {
  /**
   * The team key
   */
  teamKey: string;
  /**
   * A comma-separated list of properties that can reveal additional information in the response. Supported fields are explained above.
   */
  expand?: string | undefined;
  teamPatchInput: models.TeamPatchInput;
};

/** @internal */
export const PatchTeamRequest$inboundSchema: z.ZodType<
  PatchTeamRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  teamKey: z.string(),
  expand: z.string().optional(),
  teamPatchInput: models.TeamPatchInput$inboundSchema,
});

/** @internal */
export type PatchTeamRequest$Outbound = {
  teamKey: string;
  expand?: string | undefined;
  teamPatchInput: models.TeamPatchInput$Outbound;
};

/** @internal */
export const PatchTeamRequest$outboundSchema: z.ZodType<
  PatchTeamRequest$Outbound,
  z.ZodTypeDef,
  PatchTeamRequest
> = z.object({
  teamKey: z.string(),
  expand: z.string().optional(),
  teamPatchInput: models.TeamPatchInput$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchTeamRequest$ {
  /** @deprecated use `PatchTeamRequest$inboundSchema` instead. */
  export const inboundSchema = PatchTeamRequest$inboundSchema;
  /** @deprecated use `PatchTeamRequest$outboundSchema` instead. */
  export const outboundSchema = PatchTeamRequest$outboundSchema;
  /** @deprecated use `PatchTeamRequest$Outbound` instead. */
  export type Outbound = PatchTeamRequest$Outbound;
}

export function patchTeamRequestToJSON(
  patchTeamRequest: PatchTeamRequest,
): string {
  return JSON.stringify(
    PatchTeamRequest$outboundSchema.parse(patchTeamRequest),
  );
}

export function patchTeamRequestFromJSON(
  jsonString: string,
): SafeParseResult<PatchTeamRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchTeamRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchTeamRequest' from JSON`,
  );
}
