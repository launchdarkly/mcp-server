/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetMauUsageByCategoryRequest = {
  /**
   * The series of data returned starts from this timestamp. Defaults to 30 days ago.
   */
  from?: string | undefined;
  /**
   * The series of data returned ends at this timestamp. Defaults to the current time.
   */
  to?: string | undefined;
};

/** @internal */
export const GetMauUsageByCategoryRequest$inboundSchema: z.ZodType<
  GetMauUsageByCategoryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  from: z.string().optional(),
  to: z.string().optional(),
});

/** @internal */
export type GetMauUsageByCategoryRequest$Outbound = {
  from?: string | undefined;
  to?: string | undefined;
};

/** @internal */
export const GetMauUsageByCategoryRequest$outboundSchema: z.ZodType<
  GetMauUsageByCategoryRequest$Outbound,
  z.ZodTypeDef,
  GetMauUsageByCategoryRequest
> = z.object({
  from: z.string().optional(),
  to: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMauUsageByCategoryRequest$ {
  /** @deprecated use `GetMauUsageByCategoryRequest$inboundSchema` instead. */
  export const inboundSchema = GetMauUsageByCategoryRequest$inboundSchema;
  /** @deprecated use `GetMauUsageByCategoryRequest$outboundSchema` instead. */
  export const outboundSchema = GetMauUsageByCategoryRequest$outboundSchema;
  /** @deprecated use `GetMauUsageByCategoryRequest$Outbound` instead. */
  export type Outbound = GetMauUsageByCategoryRequest$Outbound;
}

export function getMauUsageByCategoryRequestToJSON(
  getMauUsageByCategoryRequest: GetMauUsageByCategoryRequest,
): string {
  return JSON.stringify(
    GetMauUsageByCategoryRequest$outboundSchema.parse(
      getMauUsageByCategoryRequest,
    ),
  );
}

export function getMauUsageByCategoryRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetMauUsageByCategoryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetMauUsageByCategoryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetMauUsageByCategoryRequest' from JSON`,
  );
}
