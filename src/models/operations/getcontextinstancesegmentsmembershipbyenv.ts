/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetContextInstanceSegmentsMembershipByEnvRequest = {
  /**
   * The project key
   */
  projectKey: string;
  /**
   * The environment key
   */
  environmentKey: string;
  requestBody: { [k: string]: any };
};

/** @internal */
export const GetContextInstanceSegmentsMembershipByEnvRequest$inboundSchema:
  z.ZodType<
    GetContextInstanceSegmentsMembershipByEnvRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    projectKey: z.string(),
    environmentKey: z.string(),
    RequestBody: z.record(z.any()),
  }).transform((v) => {
    return remap$(v, {
      "RequestBody": "requestBody",
    });
  });

/** @internal */
export type GetContextInstanceSegmentsMembershipByEnvRequest$Outbound = {
  projectKey: string;
  environmentKey: string;
  RequestBody: { [k: string]: any };
};

/** @internal */
export const GetContextInstanceSegmentsMembershipByEnvRequest$outboundSchema:
  z.ZodType<
    GetContextInstanceSegmentsMembershipByEnvRequest$Outbound,
    z.ZodTypeDef,
    GetContextInstanceSegmentsMembershipByEnvRequest
  > = z.object({
    projectKey: z.string(),
    environmentKey: z.string(),
    requestBody: z.record(z.any()),
  }).transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetContextInstanceSegmentsMembershipByEnvRequest$ {
  /** @deprecated use `GetContextInstanceSegmentsMembershipByEnvRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetContextInstanceSegmentsMembershipByEnvRequest$inboundSchema;
  /** @deprecated use `GetContextInstanceSegmentsMembershipByEnvRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetContextInstanceSegmentsMembershipByEnvRequest$outboundSchema;
  /** @deprecated use `GetContextInstanceSegmentsMembershipByEnvRequest$Outbound` instead. */
  export type Outbound =
    GetContextInstanceSegmentsMembershipByEnvRequest$Outbound;
}

export function getContextInstanceSegmentsMembershipByEnvRequestToJSON(
  getContextInstanceSegmentsMembershipByEnvRequest:
    GetContextInstanceSegmentsMembershipByEnvRequest,
): string {
  return JSON.stringify(
    GetContextInstanceSegmentsMembershipByEnvRequest$outboundSchema.parse(
      getContextInstanceSegmentsMembershipByEnvRequest,
    ),
  );
}

export function getContextInstanceSegmentsMembershipByEnvRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetContextInstanceSegmentsMembershipByEnvRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetContextInstanceSegmentsMembershipByEnvRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetContextInstanceSegmentsMembershipByEnvRequest' from JSON`,
  );
}
