/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  StatementPost,
  StatementPost$inboundSchema,
  StatementPost$Outbound,
  StatementPost$outboundSchema,
} from "./statementpost.js";

export type AuditLogEventsHookCapabilityConfigPost = {
  statements?: Array<StatementPost> | undefined;
};

/** @internal */
export const AuditLogEventsHookCapabilityConfigPost$inboundSchema: z.ZodType<
  AuditLogEventsHookCapabilityConfigPost,
  z.ZodTypeDef,
  unknown
> = z.object({
  statements: z.array(StatementPost$inboundSchema).optional(),
});

/** @internal */
export type AuditLogEventsHookCapabilityConfigPost$Outbound = {
  statements?: Array<StatementPost$Outbound> | undefined;
};

/** @internal */
export const AuditLogEventsHookCapabilityConfigPost$outboundSchema: z.ZodType<
  AuditLogEventsHookCapabilityConfigPost$Outbound,
  z.ZodTypeDef,
  AuditLogEventsHookCapabilityConfigPost
> = z.object({
  statements: z.array(StatementPost$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuditLogEventsHookCapabilityConfigPost$ {
  /** @deprecated use `AuditLogEventsHookCapabilityConfigPost$inboundSchema` instead. */
  export const inboundSchema =
    AuditLogEventsHookCapabilityConfigPost$inboundSchema;
  /** @deprecated use `AuditLogEventsHookCapabilityConfigPost$outboundSchema` instead. */
  export const outboundSchema =
    AuditLogEventsHookCapabilityConfigPost$outboundSchema;
  /** @deprecated use `AuditLogEventsHookCapabilityConfigPost$Outbound` instead. */
  export type Outbound = AuditLogEventsHookCapabilityConfigPost$Outbound;
}

export function auditLogEventsHookCapabilityConfigPostToJSON(
  auditLogEventsHookCapabilityConfigPost:
    AuditLogEventsHookCapabilityConfigPost,
): string {
  return JSON.stringify(
    AuditLogEventsHookCapabilityConfigPost$outboundSchema.parse(
      auditLogEventsHookCapabilityConfigPost,
    ),
  );
}

export function auditLogEventsHookCapabilityConfigPostFromJSON(
  jsonString: string,
): SafeParseResult<AuditLogEventsHookCapabilityConfigPost, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AuditLogEventsHookCapabilityConfigPost$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AuditLogEventsHookCapabilityConfigPost' from JSON`,
  );
}
