/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type SDKListRep = {
  /**
   * The location and content type of related resources
   */
  links: { [k: string]: any };
  /**
   * The list of SDK names
   */
  sdks: Array<string>;
};

/** @internal */
export const SDKListRep$inboundSchema: z.ZodType<
  SDKListRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.record(z.any()),
  sdks: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type SDKListRep$Outbound = {
  _links: { [k: string]: any };
  sdks: Array<string>;
};

/** @internal */
export const SDKListRep$outboundSchema: z.ZodType<
  SDKListRep$Outbound,
  z.ZodTypeDef,
  SDKListRep
> = z.object({
  links: z.record(z.any()),
  sdks: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SDKListRep$ {
  /** @deprecated use `SDKListRep$inboundSchema` instead. */
  export const inboundSchema = SDKListRep$inboundSchema;
  /** @deprecated use `SDKListRep$outboundSchema` instead. */
  export const outboundSchema = SDKListRep$outboundSchema;
  /** @deprecated use `SDKListRep$Outbound` instead. */
  export type Outbound = SDKListRep$Outbound;
}

export function sdkListRepToJSON(sdkListRep: SDKListRep): string {
  return JSON.stringify(SDKListRep$outboundSchema.parse(sdkListRep));
}

export function sdkListRepFromJSON(
  jsonString: string,
): SafeParseResult<SDKListRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SDKListRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SDKListRep' from JSON`,
  );
}
