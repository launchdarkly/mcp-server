/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  AiConfigsLink,
  AiConfigsLink$inboundSchema,
  AiConfigsLink$Outbound,
  AiConfigsLink$outboundSchema,
} from "./aiconfigslink.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type PaginatedLinks = {
  first?: AiConfigsLink | undefined;
  last?: AiConfigsLink | undefined;
  next?: AiConfigsLink | undefined;
  prev?: AiConfigsLink | undefined;
  self: AiConfigsLink;
};

/** @internal */
export const PaginatedLinks$inboundSchema: z.ZodType<
  PaginatedLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  first: AiConfigsLink$inboundSchema.optional(),
  last: AiConfigsLink$inboundSchema.optional(),
  next: AiConfigsLink$inboundSchema.optional(),
  prev: AiConfigsLink$inboundSchema.optional(),
  self: AiConfigsLink$inboundSchema,
});

/** @internal */
export type PaginatedLinks$Outbound = {
  first?: AiConfigsLink$Outbound | undefined;
  last?: AiConfigsLink$Outbound | undefined;
  next?: AiConfigsLink$Outbound | undefined;
  prev?: AiConfigsLink$Outbound | undefined;
  self: AiConfigsLink$Outbound;
};

/** @internal */
export const PaginatedLinks$outboundSchema: z.ZodType<
  PaginatedLinks$Outbound,
  z.ZodTypeDef,
  PaginatedLinks
> = z.object({
  first: AiConfigsLink$outboundSchema.optional(),
  last: AiConfigsLink$outboundSchema.optional(),
  next: AiConfigsLink$outboundSchema.optional(),
  prev: AiConfigsLink$outboundSchema.optional(),
  self: AiConfigsLink$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginatedLinks$ {
  /** @deprecated use `PaginatedLinks$inboundSchema` instead. */
  export const inboundSchema = PaginatedLinks$inboundSchema;
  /** @deprecated use `PaginatedLinks$outboundSchema` instead. */
  export const outboundSchema = PaginatedLinks$outboundSchema;
  /** @deprecated use `PaginatedLinks$Outbound` instead. */
  export type Outbound = PaginatedLinks$Outbound;
}

export function paginatedLinksToJSON(paginatedLinks: PaginatedLinks): string {
  return JSON.stringify(PaginatedLinks$outboundSchema.parse(paginatedLinks));
}

export function paginatedLinksFromJSON(
  jsonString: string,
): SafeParseResult<PaginatedLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaginatedLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaginatedLinks' from JSON`,
  );
}
