/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  MemberImportItem,
  MemberImportItem$inboundSchema,
  MemberImportItem$Outbound,
  MemberImportItem$outboundSchema,
} from "./memberimportitem.js";

export type TeamImportsRep = {
  /**
   * An array of details about the members requested to be added to this team
   */
  items?: Array<MemberImportItem> | undefined;
};

/** @internal */
export const TeamImportsRep$inboundSchema: z.ZodType<
  TeamImportsRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(MemberImportItem$inboundSchema).optional(),
});

/** @internal */
export type TeamImportsRep$Outbound = {
  items?: Array<MemberImportItem$Outbound> | undefined;
};

/** @internal */
export const TeamImportsRep$outboundSchema: z.ZodType<
  TeamImportsRep$Outbound,
  z.ZodTypeDef,
  TeamImportsRep
> = z.object({
  items: z.array(MemberImportItem$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TeamImportsRep$ {
  /** @deprecated use `TeamImportsRep$inboundSchema` instead. */
  export const inboundSchema = TeamImportsRep$inboundSchema;
  /** @deprecated use `TeamImportsRep$outboundSchema` instead. */
  export const outboundSchema = TeamImportsRep$outboundSchema;
  /** @deprecated use `TeamImportsRep$Outbound` instead. */
  export type Outbound = TeamImportsRep$Outbound;
}

export function teamImportsRepToJSON(teamImportsRep: TeamImportsRep): string {
  return JSON.stringify(TeamImportsRep$outboundSchema.parse(teamImportsRep));
}

export function teamImportsRepFromJSON(
  jsonString: string,
): SafeParseResult<TeamImportsRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TeamImportsRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TeamImportsRep' from JSON`,
  );
}
