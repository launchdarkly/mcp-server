/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";
import {
  ProjectSummary,
  ProjectSummary$inboundSchema,
  ProjectSummary$Outbound,
  ProjectSummary$outboundSchema,
} from "./projectsummary.js";

export type ProjectSummaryCollection = {
  totalCount: number;
  items: Array<ProjectSummary>;
  links?: { [k: string]: Link } | undefined;
};

/** @internal */
export const ProjectSummaryCollection$inboundSchema: z.ZodType<
  ProjectSummaryCollection,
  z.ZodTypeDef,
  unknown
> = z.object({
  totalCount: z.number().int(),
  items: z.array(ProjectSummary$inboundSchema),
  _links: z.record(Link$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type ProjectSummaryCollection$Outbound = {
  totalCount: number;
  items: Array<ProjectSummary$Outbound>;
  _links?: { [k: string]: Link$Outbound } | undefined;
};

/** @internal */
export const ProjectSummaryCollection$outboundSchema: z.ZodType<
  ProjectSummaryCollection$Outbound,
  z.ZodTypeDef,
  ProjectSummaryCollection
> = z.object({
  totalCount: z.number().int(),
  items: z.array(ProjectSummary$outboundSchema),
  links: z.record(Link$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectSummaryCollection$ {
  /** @deprecated use `ProjectSummaryCollection$inboundSchema` instead. */
  export const inboundSchema = ProjectSummaryCollection$inboundSchema;
  /** @deprecated use `ProjectSummaryCollection$outboundSchema` instead. */
  export const outboundSchema = ProjectSummaryCollection$outboundSchema;
  /** @deprecated use `ProjectSummaryCollection$Outbound` instead. */
  export type Outbound = ProjectSummaryCollection$Outbound;
}

export function projectSummaryCollectionToJSON(
  projectSummaryCollection: ProjectSummaryCollection,
): string {
  return JSON.stringify(
    ProjectSummaryCollection$outboundSchema.parse(projectSummaryCollection),
  );
}

export function projectSummaryCollectionFromJSON(
  jsonString: string,
): SafeParseResult<ProjectSummaryCollection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProjectSummaryCollection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProjectSummaryCollection' from JSON`,
  );
}
