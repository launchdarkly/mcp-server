/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type LayerPatchInput = {
  /**
   * Optional comment describing the update
   */
  comment?: string | undefined;
  /**
   * The environment key used for making environment specific updates. For example, updating the reservation of an experiment
   */
  environmentKey?: string | undefined;
  instructions: Array<{ [k: string]: any }>;
};

/** @internal */
export const LayerPatchInput$inboundSchema: z.ZodType<
  LayerPatchInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  comment: z.string().optional(),
  environmentKey: z.string().optional(),
  instructions: z.array(z.record(z.any())),
});

/** @internal */
export type LayerPatchInput$Outbound = {
  comment?: string | undefined;
  environmentKey?: string | undefined;
  instructions: Array<{ [k: string]: any }>;
};

/** @internal */
export const LayerPatchInput$outboundSchema: z.ZodType<
  LayerPatchInput$Outbound,
  z.ZodTypeDef,
  LayerPatchInput
> = z.object({
  comment: z.string().optional(),
  environmentKey: z.string().optional(),
  instructions: z.array(z.record(z.any())),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LayerPatchInput$ {
  /** @deprecated use `LayerPatchInput$inboundSchema` instead. */
  export const inboundSchema = LayerPatchInput$inboundSchema;
  /** @deprecated use `LayerPatchInput$outboundSchema` instead. */
  export const outboundSchema = LayerPatchInput$outboundSchema;
  /** @deprecated use `LayerPatchInput$Outbound` instead. */
  export type Outbound = LayerPatchInput$Outbound;
}

export function layerPatchInputToJSON(
  layerPatchInput: LayerPatchInput,
): string {
  return JSON.stringify(LayerPatchInput$outboundSchema.parse(layerPatchInput));
}

export function layerPatchInputFromJSON(
  jsonString: string,
): SafeParseResult<LayerPatchInput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LayerPatchInput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LayerPatchInput' from JSON`,
  );
}
