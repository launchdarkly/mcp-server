/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  InsightsChartMetric,
  InsightsChartMetric$inboundSchema,
  InsightsChartMetric$Outbound,
  InsightsChartMetric$outboundSchema,
} from "./insightschartmetric.js";
import {
  InsightsChartSeriesMetadataAxis,
  InsightsChartSeriesMetadataAxis$inboundSchema,
  InsightsChartSeriesMetadataAxis$Outbound,
  InsightsChartSeriesMetadataAxis$outboundSchema,
} from "./insightschartseriesmetadataaxis.js";

export type InsightsChartMetadata = {
  summary: { [k: string]: any };
  /**
   * Name of the chart
   */
  name?: string | undefined;
  metrics?: { [k: string]: InsightsChartMetric } | undefined;
  xAxis: InsightsChartSeriesMetadataAxis;
  yAxis: InsightsChartSeriesMetadataAxis;
};

/** @internal */
export const InsightsChartMetadata$inboundSchema: z.ZodType<
  InsightsChartMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  summary: z.record(z.any()),
  name: z.string().optional(),
  metrics: z.record(InsightsChartMetric$inboundSchema).optional(),
  xAxis: InsightsChartSeriesMetadataAxis$inboundSchema,
  yAxis: InsightsChartSeriesMetadataAxis$inboundSchema,
});

/** @internal */
export type InsightsChartMetadata$Outbound = {
  summary: { [k: string]: any };
  name?: string | undefined;
  metrics?: { [k: string]: InsightsChartMetric$Outbound } | undefined;
  xAxis: InsightsChartSeriesMetadataAxis$Outbound;
  yAxis: InsightsChartSeriesMetadataAxis$Outbound;
};

/** @internal */
export const InsightsChartMetadata$outboundSchema: z.ZodType<
  InsightsChartMetadata$Outbound,
  z.ZodTypeDef,
  InsightsChartMetadata
> = z.object({
  summary: z.record(z.any()),
  name: z.string().optional(),
  metrics: z.record(InsightsChartMetric$outboundSchema).optional(),
  xAxis: InsightsChartSeriesMetadataAxis$outboundSchema,
  yAxis: InsightsChartSeriesMetadataAxis$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InsightsChartMetadata$ {
  /** @deprecated use `InsightsChartMetadata$inboundSchema` instead. */
  export const inboundSchema = InsightsChartMetadata$inboundSchema;
  /** @deprecated use `InsightsChartMetadata$outboundSchema` instead. */
  export const outboundSchema = InsightsChartMetadata$outboundSchema;
  /** @deprecated use `InsightsChartMetadata$Outbound` instead. */
  export type Outbound = InsightsChartMetadata$Outbound;
}

export function insightsChartMetadataToJSON(
  insightsChartMetadata: InsightsChartMetadata,
): string {
  return JSON.stringify(
    InsightsChartMetadata$outboundSchema.parse(insightsChartMetadata),
  );
}

export function insightsChartMetadataFromJSON(
  jsonString: string,
): SafeParseResult<InsightsChartMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InsightsChartMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InsightsChartMetadata' from JSON`,
  );
}
