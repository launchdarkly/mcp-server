/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  SourceFlag,
  SourceFlag$inboundSchema,
  SourceFlag$Outbound,
  SourceFlag$outboundSchema,
} from "./sourceflag.js";

export const CreateCopyFlagConfigApprovalRequestRequestIncludedAction = {
  UpdateOn: "updateOn",
  UpdateFallthrough: "updateFallthrough",
  UpdateOffVariation: "updateOffVariation",
  UpdateRules: "updateRules",
  UpdateTargets: "updateTargets",
  UpdatePrerequisites: "updatePrerequisites",
} as const;
export type CreateCopyFlagConfigApprovalRequestRequestIncludedAction =
  ClosedEnum<typeof CreateCopyFlagConfigApprovalRequestRequestIncludedAction>;

export const CreateCopyFlagConfigApprovalRequestRequestExcludedAction = {
  UpdateOn: "updateOn",
  UpdateFallthrough: "updateFallthrough",
  UpdateOffVariation: "updateOffVariation",
  UpdateRules: "updateRules",
  UpdateTargets: "updateTargets",
  UpdatePrerequisites: "updatePrerequisites",
} as const;
export type CreateCopyFlagConfigApprovalRequestRequestExcludedAction =
  ClosedEnum<typeof CreateCopyFlagConfigApprovalRequestRequestExcludedAction>;

export type CreateCopyFlagConfigApprovalRequestRequest = {
  /**
   * Optional comment describing the approval request
   */
  comment?: string | undefined;
  /**
   * A brief description of your changes
   */
  description: string;
  /**
   * An array of member IDs. These members are notified to review the approval request.
   */
  notifyMemberIds?: Array<string> | undefined;
  /**
   * An array of team keys. The members of these teams are notified to review the approval request.
   */
  notifyTeamKeys?: Array<string> | undefined;
  source: SourceFlag;
  /**
   * Optional list of the flag changes to copy from the source environment to the target environment. You may include either <code>includedActions</code> or <code>excludedActions</code>, but not both. If neither are included, then all flag changes will be copied.
   */
  includedActions?:
    | Array<CreateCopyFlagConfigApprovalRequestRequestIncludedAction>
    | undefined;
  /**
   * Optional list of the flag changes NOT to copy from the source environment to the target environment. You may include either <code>includedActions</code> or <code>excludedActions</code>, but not both. If neither are included, then all flag changes will be copied.
   */
  excludedActions?:
    | Array<CreateCopyFlagConfigApprovalRequestRequestExcludedAction>
    | undefined;
};

/** @internal */
export const CreateCopyFlagConfigApprovalRequestRequestIncludedAction$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateCopyFlagConfigApprovalRequestRequestIncludedAction
  > = z.nativeEnum(CreateCopyFlagConfigApprovalRequestRequestIncludedAction);

/** @internal */
export const CreateCopyFlagConfigApprovalRequestRequestIncludedAction$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateCopyFlagConfigApprovalRequestRequestIncludedAction
  > = CreateCopyFlagConfigApprovalRequestRequestIncludedAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCopyFlagConfigApprovalRequestRequestIncludedAction$ {
  /** @deprecated use `CreateCopyFlagConfigApprovalRequestRequestIncludedAction$inboundSchema` instead. */
  export const inboundSchema =
    CreateCopyFlagConfigApprovalRequestRequestIncludedAction$inboundSchema;
  /** @deprecated use `CreateCopyFlagConfigApprovalRequestRequestIncludedAction$outboundSchema` instead. */
  export const outboundSchema =
    CreateCopyFlagConfigApprovalRequestRequestIncludedAction$outboundSchema;
}

/** @internal */
export const CreateCopyFlagConfigApprovalRequestRequestExcludedAction$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateCopyFlagConfigApprovalRequestRequestExcludedAction
  > = z.nativeEnum(CreateCopyFlagConfigApprovalRequestRequestExcludedAction);

/** @internal */
export const CreateCopyFlagConfigApprovalRequestRequestExcludedAction$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateCopyFlagConfigApprovalRequestRequestExcludedAction
  > = CreateCopyFlagConfigApprovalRequestRequestExcludedAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCopyFlagConfigApprovalRequestRequestExcludedAction$ {
  /** @deprecated use `CreateCopyFlagConfigApprovalRequestRequestExcludedAction$inboundSchema` instead. */
  export const inboundSchema =
    CreateCopyFlagConfigApprovalRequestRequestExcludedAction$inboundSchema;
  /** @deprecated use `CreateCopyFlagConfigApprovalRequestRequestExcludedAction$outboundSchema` instead. */
  export const outboundSchema =
    CreateCopyFlagConfigApprovalRequestRequestExcludedAction$outboundSchema;
}

/** @internal */
export const CreateCopyFlagConfigApprovalRequestRequest$inboundSchema:
  z.ZodType<CreateCopyFlagConfigApprovalRequestRequest, z.ZodTypeDef, unknown> =
    z.object({
      comment: z.string().optional(),
      description: z.string(),
      notifyMemberIds: z.array(z.string()).optional(),
      notifyTeamKeys: z.array(z.string()).optional(),
      source: SourceFlag$inboundSchema,
      includedActions: z.array(
        CreateCopyFlagConfigApprovalRequestRequestIncludedAction$inboundSchema,
      ).optional(),
      excludedActions: z.array(
        CreateCopyFlagConfigApprovalRequestRequestExcludedAction$inboundSchema,
      ).optional(),
    });

/** @internal */
export type CreateCopyFlagConfigApprovalRequestRequest$Outbound = {
  comment?: string | undefined;
  description: string;
  notifyMemberIds?: Array<string> | undefined;
  notifyTeamKeys?: Array<string> | undefined;
  source: SourceFlag$Outbound;
  includedActions?: Array<string> | undefined;
  excludedActions?: Array<string> | undefined;
};

/** @internal */
export const CreateCopyFlagConfigApprovalRequestRequest$outboundSchema:
  z.ZodType<
    CreateCopyFlagConfigApprovalRequestRequest$Outbound,
    z.ZodTypeDef,
    CreateCopyFlagConfigApprovalRequestRequest
  > = z.object({
    comment: z.string().optional(),
    description: z.string(),
    notifyMemberIds: z.array(z.string()).optional(),
    notifyTeamKeys: z.array(z.string()).optional(),
    source: SourceFlag$outboundSchema,
    includedActions: z.array(
      CreateCopyFlagConfigApprovalRequestRequestIncludedAction$outboundSchema,
    ).optional(),
    excludedActions: z.array(
      CreateCopyFlagConfigApprovalRequestRequestExcludedAction$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCopyFlagConfigApprovalRequestRequest$ {
  /** @deprecated use `CreateCopyFlagConfigApprovalRequestRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateCopyFlagConfigApprovalRequestRequest$inboundSchema;
  /** @deprecated use `CreateCopyFlagConfigApprovalRequestRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateCopyFlagConfigApprovalRequestRequest$outboundSchema;
  /** @deprecated use `CreateCopyFlagConfigApprovalRequestRequest$Outbound` instead. */
  export type Outbound = CreateCopyFlagConfigApprovalRequestRequest$Outbound;
}

export function createCopyFlagConfigApprovalRequestRequestToJSON(
  createCopyFlagConfigApprovalRequestRequest:
    CreateCopyFlagConfigApprovalRequestRequest,
): string {
  return JSON.stringify(
    CreateCopyFlagConfigApprovalRequestRequest$outboundSchema.parse(
      createCopyFlagConfigApprovalRequestRequest,
    ),
  );
}

export function createCopyFlagConfigApprovalRequestRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCopyFlagConfigApprovalRequestRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCopyFlagConfigApprovalRequestRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateCopyFlagConfigApprovalRequestRequest' from JSON`,
  );
}
