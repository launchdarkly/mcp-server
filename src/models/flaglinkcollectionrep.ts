/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  FlagLinkRep,
  FlagLinkRep$inboundSchema,
  FlagLinkRep$Outbound,
  FlagLinkRep$outboundSchema,
} from "./flaglinkrep.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";

export type FlagLinkCollectionRep = {
  /**
   * An array of flag links
   */
  items: Array<FlagLinkRep>;
  /**
   * The location and content type of related resources
   */
  links: { [k: string]: Link };
};

/** @internal */
export const FlagLinkCollectionRep$inboundSchema: z.ZodType<
  FlagLinkCollectionRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(FlagLinkRep$inboundSchema),
  _links: z.record(Link$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type FlagLinkCollectionRep$Outbound = {
  items: Array<FlagLinkRep$Outbound>;
  _links: { [k: string]: Link$Outbound };
};

/** @internal */
export const FlagLinkCollectionRep$outboundSchema: z.ZodType<
  FlagLinkCollectionRep$Outbound,
  z.ZodTypeDef,
  FlagLinkCollectionRep
> = z.object({
  items: z.array(FlagLinkRep$outboundSchema),
  links: z.record(Link$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlagLinkCollectionRep$ {
  /** @deprecated use `FlagLinkCollectionRep$inboundSchema` instead. */
  export const inboundSchema = FlagLinkCollectionRep$inboundSchema;
  /** @deprecated use `FlagLinkCollectionRep$outboundSchema` instead. */
  export const outboundSchema = FlagLinkCollectionRep$outboundSchema;
  /** @deprecated use `FlagLinkCollectionRep$Outbound` instead. */
  export type Outbound = FlagLinkCollectionRep$Outbound;
}

export function flagLinkCollectionRepToJSON(
  flagLinkCollectionRep: FlagLinkCollectionRep,
): string {
  return JSON.stringify(
    FlagLinkCollectionRep$outboundSchema.parse(flagLinkCollectionRep),
  );
}

export function flagLinkCollectionRepFromJSON(
  jsonString: string,
): SafeParseResult<FlagLinkCollectionRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FlagLinkCollectionRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FlagLinkCollectionRep' from JSON`,
  );
}
