/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ContextAttributeNames,
  ContextAttributeNames$inboundSchema,
  ContextAttributeNames$Outbound,
  ContextAttributeNames$outboundSchema,
} from "./contextattributenames.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ContextAttributeNamesCollection = {
  /**
   * A collection of context attribute name data grouped by kind.
   */
  items: Array<ContextAttributeNames>;
};

/** @internal */
export const ContextAttributeNamesCollection$inboundSchema: z.ZodType<
  ContextAttributeNamesCollection,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(ContextAttributeNames$inboundSchema),
});

/** @internal */
export type ContextAttributeNamesCollection$Outbound = {
  items: Array<ContextAttributeNames$Outbound>;
};

/** @internal */
export const ContextAttributeNamesCollection$outboundSchema: z.ZodType<
  ContextAttributeNamesCollection$Outbound,
  z.ZodTypeDef,
  ContextAttributeNamesCollection
> = z.object({
  items: z.array(ContextAttributeNames$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ContextAttributeNamesCollection$ {
  /** @deprecated use `ContextAttributeNamesCollection$inboundSchema` instead. */
  export const inboundSchema = ContextAttributeNamesCollection$inboundSchema;
  /** @deprecated use `ContextAttributeNamesCollection$outboundSchema` instead. */
  export const outboundSchema = ContextAttributeNamesCollection$outboundSchema;
  /** @deprecated use `ContextAttributeNamesCollection$Outbound` instead. */
  export type Outbound = ContextAttributeNamesCollection$Outbound;
}

export function contextAttributeNamesCollectionToJSON(
  contextAttributeNamesCollection: ContextAttributeNamesCollection,
): string {
  return JSON.stringify(
    ContextAttributeNamesCollection$outboundSchema.parse(
      contextAttributeNamesCollection,
    ),
  );
}

export function contextAttributeNamesCollectionFromJSON(
  jsonString: string,
): SafeParseResult<ContextAttributeNamesCollection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ContextAttributeNamesCollection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ContextAttributeNamesCollection' from JSON`,
  );
}
