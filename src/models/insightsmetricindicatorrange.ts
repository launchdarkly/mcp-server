/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type InsightsMetricIndicatorRange = {
  /**
   * The minimum value for the indicator range
   */
  min: number;
  /**
   * The maximum value for the indicator range
   */
  max: number;
};

/** @internal */
export const InsightsMetricIndicatorRange$inboundSchema: z.ZodType<
  InsightsMetricIndicatorRange,
  z.ZodTypeDef,
  unknown
> = z.object({
  min: z.number().int(),
  max: z.number().int(),
});

/** @internal */
export type InsightsMetricIndicatorRange$Outbound = {
  min: number;
  max: number;
};

/** @internal */
export const InsightsMetricIndicatorRange$outboundSchema: z.ZodType<
  InsightsMetricIndicatorRange$Outbound,
  z.ZodTypeDef,
  InsightsMetricIndicatorRange
> = z.object({
  min: z.number().int(),
  max: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InsightsMetricIndicatorRange$ {
  /** @deprecated use `InsightsMetricIndicatorRange$inboundSchema` instead. */
  export const inboundSchema = InsightsMetricIndicatorRange$inboundSchema;
  /** @deprecated use `InsightsMetricIndicatorRange$outboundSchema` instead. */
  export const outboundSchema = InsightsMetricIndicatorRange$outboundSchema;
  /** @deprecated use `InsightsMetricIndicatorRange$Outbound` instead. */
  export type Outbound = InsightsMetricIndicatorRange$Outbound;
}

export function insightsMetricIndicatorRangeToJSON(
  insightsMetricIndicatorRange: InsightsMetricIndicatorRange,
): string {
  return JSON.stringify(
    InsightsMetricIndicatorRange$outboundSchema.parse(
      insightsMetricIndicatorRange,
    ),
  );
}

export function insightsMetricIndicatorRangeFromJSON(
  jsonString: string,
): SafeParseResult<InsightsMetricIndicatorRange, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InsightsMetricIndicatorRange$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InsightsMetricIndicatorRange' from JSON`,
  );
}
