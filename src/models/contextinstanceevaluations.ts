/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ContextInstanceEvaluation,
  ContextInstanceEvaluation$inboundSchema,
  ContextInstanceEvaluation$Outbound,
  ContextInstanceEvaluation$outboundSchema,
} from "./contextinstanceevaluation.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";

export type ContextInstanceEvaluations = {
  /**
   * Details on the flag evaluations for this context instance
   */
  items: Array<ContextInstanceEvaluation>;
  /**
   * The number of flags
   */
  totalCount?: number | undefined;
  /**
   * The location and content type of related resources
   */
  links: { [k: string]: Link };
};

/** @internal */
export const ContextInstanceEvaluations$inboundSchema: z.ZodType<
  ContextInstanceEvaluations,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(ContextInstanceEvaluation$inboundSchema),
  totalCount: z.number().int().optional(),
  _links: z.record(Link$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type ContextInstanceEvaluations$Outbound = {
  items: Array<ContextInstanceEvaluation$Outbound>;
  totalCount?: number | undefined;
  _links: { [k: string]: Link$Outbound };
};

/** @internal */
export const ContextInstanceEvaluations$outboundSchema: z.ZodType<
  ContextInstanceEvaluations$Outbound,
  z.ZodTypeDef,
  ContextInstanceEvaluations
> = z.object({
  items: z.array(ContextInstanceEvaluation$outboundSchema),
  totalCount: z.number().int().optional(),
  links: z.record(Link$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ContextInstanceEvaluations$ {
  /** @deprecated use `ContextInstanceEvaluations$inboundSchema` instead. */
  export const inboundSchema = ContextInstanceEvaluations$inboundSchema;
  /** @deprecated use `ContextInstanceEvaluations$outboundSchema` instead. */
  export const outboundSchema = ContextInstanceEvaluations$outboundSchema;
  /** @deprecated use `ContextInstanceEvaluations$Outbound` instead. */
  export type Outbound = ContextInstanceEvaluations$Outbound;
}

export function contextInstanceEvaluationsToJSON(
  contextInstanceEvaluations: ContextInstanceEvaluations,
): string {
  return JSON.stringify(
    ContextInstanceEvaluations$outboundSchema.parse(contextInstanceEvaluations),
  );
}

export function contextInstanceEvaluationsFromJSON(
  jsonString: string,
): SafeParseResult<ContextInstanceEvaluations, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ContextInstanceEvaluations$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ContextInstanceEvaluations' from JSON`,
  );
}
