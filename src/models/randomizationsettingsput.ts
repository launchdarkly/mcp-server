/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  RandomizationUnitInput,
  RandomizationUnitInput$inboundSchema,
  RandomizationUnitInput$Outbound,
  RandomizationUnitInput$outboundSchema,
} from "./randomizationunitinput.js";

export type RandomizationSettingsPut = {
  /**
   * An array of randomization units allowed for this project.
   */
  randomizationUnits: Array<RandomizationUnitInput>;
};

/** @internal */
export const RandomizationSettingsPut$inboundSchema: z.ZodType<
  RandomizationSettingsPut,
  z.ZodTypeDef,
  unknown
> = z.object({
  randomizationUnits: z.array(RandomizationUnitInput$inboundSchema),
});

/** @internal */
export type RandomizationSettingsPut$Outbound = {
  randomizationUnits: Array<RandomizationUnitInput$Outbound>;
};

/** @internal */
export const RandomizationSettingsPut$outboundSchema: z.ZodType<
  RandomizationSettingsPut$Outbound,
  z.ZodTypeDef,
  RandomizationSettingsPut
> = z.object({
  randomizationUnits: z.array(RandomizationUnitInput$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RandomizationSettingsPut$ {
  /** @deprecated use `RandomizationSettingsPut$inboundSchema` instead. */
  export const inboundSchema = RandomizationSettingsPut$inboundSchema;
  /** @deprecated use `RandomizationSettingsPut$outboundSchema` instead. */
  export const outboundSchema = RandomizationSettingsPut$outboundSchema;
  /** @deprecated use `RandomizationSettingsPut$Outbound` instead. */
  export type Outbound = RandomizationSettingsPut$Outbound;
}

export function randomizationSettingsPutToJSON(
  randomizationSettingsPut: RandomizationSettingsPut,
): string {
  return JSON.stringify(
    RandomizationSettingsPut$outboundSchema.parse(randomizationSettingsPut),
  );
}

export function randomizationSettingsPutFromJSON(
  jsonString: string,
): SafeParseResult<RandomizationSettingsPut, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RandomizationSettingsPut$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RandomizationSettingsPut' from JSON`,
  );
}
