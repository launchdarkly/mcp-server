/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ModelConfigPostParams = {};

export type ModelConfigPostCustomParams = {};

export type ModelConfigPost = {
  /**
   * Human readable name of the model
   */
  name: string;
  /**
   * Unique key for the model
   */
  key: string;
  /**
   * Identifier for the model, for use with third party providers
   */
  id: string;
  /**
   * Icon for the model
   */
  icon?: string | undefined;
  /**
   * Provider for the model
   */
  provider?: string | undefined;
  params?: ModelConfigPostParams | undefined;
  customParams?: ModelConfigPostCustomParams | undefined;
  tags?: Array<string> | undefined;
  /**
   * Cost per input token in USD
   */
  costPerInputToken?: number | undefined;
  /**
   * Cost per output token in USD
   */
  costPerOutputToken?: number | undefined;
};

/** @internal */
export const ModelConfigPostParams$inboundSchema: z.ZodType<
  ModelConfigPostParams,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ModelConfigPostParams$Outbound = {};

/** @internal */
export const ModelConfigPostParams$outboundSchema: z.ZodType<
  ModelConfigPostParams$Outbound,
  z.ZodTypeDef,
  ModelConfigPostParams
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModelConfigPostParams$ {
  /** @deprecated use `ModelConfigPostParams$inboundSchema` instead. */
  export const inboundSchema = ModelConfigPostParams$inboundSchema;
  /** @deprecated use `ModelConfigPostParams$outboundSchema` instead. */
  export const outboundSchema = ModelConfigPostParams$outboundSchema;
  /** @deprecated use `ModelConfigPostParams$Outbound` instead. */
  export type Outbound = ModelConfigPostParams$Outbound;
}

export function modelConfigPostParamsToJSON(
  modelConfigPostParams: ModelConfigPostParams,
): string {
  return JSON.stringify(
    ModelConfigPostParams$outboundSchema.parse(modelConfigPostParams),
  );
}

export function modelConfigPostParamsFromJSON(
  jsonString: string,
): SafeParseResult<ModelConfigPostParams, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ModelConfigPostParams$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ModelConfigPostParams' from JSON`,
  );
}

/** @internal */
export const ModelConfigPostCustomParams$inboundSchema: z.ZodType<
  ModelConfigPostCustomParams,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ModelConfigPostCustomParams$Outbound = {};

/** @internal */
export const ModelConfigPostCustomParams$outboundSchema: z.ZodType<
  ModelConfigPostCustomParams$Outbound,
  z.ZodTypeDef,
  ModelConfigPostCustomParams
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModelConfigPostCustomParams$ {
  /** @deprecated use `ModelConfigPostCustomParams$inboundSchema` instead. */
  export const inboundSchema = ModelConfigPostCustomParams$inboundSchema;
  /** @deprecated use `ModelConfigPostCustomParams$outboundSchema` instead. */
  export const outboundSchema = ModelConfigPostCustomParams$outboundSchema;
  /** @deprecated use `ModelConfigPostCustomParams$Outbound` instead. */
  export type Outbound = ModelConfigPostCustomParams$Outbound;
}

export function modelConfigPostCustomParamsToJSON(
  modelConfigPostCustomParams: ModelConfigPostCustomParams,
): string {
  return JSON.stringify(
    ModelConfigPostCustomParams$outboundSchema.parse(
      modelConfigPostCustomParams,
    ),
  );
}

export function modelConfigPostCustomParamsFromJSON(
  jsonString: string,
): SafeParseResult<ModelConfigPostCustomParams, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ModelConfigPostCustomParams$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ModelConfigPostCustomParams' from JSON`,
  );
}

/** @internal */
export const ModelConfigPost$inboundSchema: z.ZodType<
  ModelConfigPost,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  key: z.string(),
  id: z.string(),
  icon: z.string().optional(),
  provider: z.string().optional(),
  params: z.lazy(() => ModelConfigPostParams$inboundSchema).optional(),
  customParams: z.lazy(() => ModelConfigPostCustomParams$inboundSchema)
    .optional(),
  tags: z.array(z.string()).optional(),
  costPerInputToken: z.number().optional(),
  costPerOutputToken: z.number().optional(),
});

/** @internal */
export type ModelConfigPost$Outbound = {
  name: string;
  key: string;
  id: string;
  icon?: string | undefined;
  provider?: string | undefined;
  params?: ModelConfigPostParams$Outbound | undefined;
  customParams?: ModelConfigPostCustomParams$Outbound | undefined;
  tags?: Array<string> | undefined;
  costPerInputToken?: number | undefined;
  costPerOutputToken?: number | undefined;
};

/** @internal */
export const ModelConfigPost$outboundSchema: z.ZodType<
  ModelConfigPost$Outbound,
  z.ZodTypeDef,
  ModelConfigPost
> = z.object({
  name: z.string(),
  key: z.string(),
  id: z.string(),
  icon: z.string().optional(),
  provider: z.string().optional(),
  params: z.lazy(() => ModelConfigPostParams$outboundSchema).optional(),
  customParams: z.lazy(() => ModelConfigPostCustomParams$outboundSchema)
    .optional(),
  tags: z.array(z.string()).optional(),
  costPerInputToken: z.number().optional(),
  costPerOutputToken: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModelConfigPost$ {
  /** @deprecated use `ModelConfigPost$inboundSchema` instead. */
  export const inboundSchema = ModelConfigPost$inboundSchema;
  /** @deprecated use `ModelConfigPost$outboundSchema` instead. */
  export const outboundSchema = ModelConfigPost$outboundSchema;
  /** @deprecated use `ModelConfigPost$Outbound` instead. */
  export type Outbound = ModelConfigPost$Outbound;
}

export function modelConfigPostToJSON(
  modelConfigPost: ModelConfigPost,
): string {
  return JSON.stringify(ModelConfigPost$outboundSchema.parse(modelConfigPost));
}

export function modelConfigPostFromJSON(
  jsonString: string,
): SafeParseResult<ModelConfigPost, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ModelConfigPost$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ModelConfigPost' from JSON`,
  );
}
