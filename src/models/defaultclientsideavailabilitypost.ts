/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type DefaultClientSideAvailabilityPost = {
  /**
   * Whether to enable availability for client-side SDKs.
   */
  usingEnvironmentId: boolean;
  /**
   * Whether to enable availability for mobile SDKs.
   */
  usingMobileKey: boolean;
};

/** @internal */
export const DefaultClientSideAvailabilityPost$inboundSchema: z.ZodType<
  DefaultClientSideAvailabilityPost,
  z.ZodTypeDef,
  unknown
> = z.object({
  usingEnvironmentId: z.boolean(),
  usingMobileKey: z.boolean(),
});

/** @internal */
export type DefaultClientSideAvailabilityPost$Outbound = {
  usingEnvironmentId: boolean;
  usingMobileKey: boolean;
};

/** @internal */
export const DefaultClientSideAvailabilityPost$outboundSchema: z.ZodType<
  DefaultClientSideAvailabilityPost$Outbound,
  z.ZodTypeDef,
  DefaultClientSideAvailabilityPost
> = z.object({
  usingEnvironmentId: z.boolean(),
  usingMobileKey: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DefaultClientSideAvailabilityPost$ {
  /** @deprecated use `DefaultClientSideAvailabilityPost$inboundSchema` instead. */
  export const inboundSchema = DefaultClientSideAvailabilityPost$inboundSchema;
  /** @deprecated use `DefaultClientSideAvailabilityPost$outboundSchema` instead. */
  export const outboundSchema =
    DefaultClientSideAvailabilityPost$outboundSchema;
  /** @deprecated use `DefaultClientSideAvailabilityPost$Outbound` instead. */
  export type Outbound = DefaultClientSideAvailabilityPost$Outbound;
}

export function defaultClientSideAvailabilityPostToJSON(
  defaultClientSideAvailabilityPost: DefaultClientSideAvailabilityPost,
): string {
  return JSON.stringify(
    DefaultClientSideAvailabilityPost$outboundSchema.parse(
      defaultClientSideAvailabilityPost,
    ),
  );
}

export function defaultClientSideAvailabilityPostFromJSON(
  jsonString: string,
): SafeParseResult<DefaultClientSideAvailabilityPost, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DefaultClientSideAvailabilityPost$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DefaultClientSideAvailabilityPost' from JSON`,
  );
}
