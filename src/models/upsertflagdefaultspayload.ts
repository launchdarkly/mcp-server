/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  BooleanFlagDefaults,
  BooleanFlagDefaults$inboundSchema,
  BooleanFlagDefaults$Outbound,
  BooleanFlagDefaults$outboundSchema,
} from "./booleanflagdefaults.js";
import {
  DefaultClientSideAvailability,
  DefaultClientSideAvailability$inboundSchema,
  DefaultClientSideAvailability$Outbound,
  DefaultClientSideAvailability$outboundSchema,
} from "./defaultclientsideavailability.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type UpsertFlagDefaultsPayload = {
  /**
   * A list of default tags for each flag
   */
  tags: Array<string>;
  /**
   * Whether the flag should be temporary by default
   */
  temporary: boolean;
  booleanDefaults: BooleanFlagDefaults;
  defaultClientSideAvailability: DefaultClientSideAvailability;
};

/** @internal */
export const UpsertFlagDefaultsPayload$inboundSchema: z.ZodType<
  UpsertFlagDefaultsPayload,
  z.ZodTypeDef,
  unknown
> = z.object({
  tags: z.array(z.string()),
  temporary: z.boolean(),
  booleanDefaults: BooleanFlagDefaults$inboundSchema,
  defaultClientSideAvailability: DefaultClientSideAvailability$inboundSchema,
});

/** @internal */
export type UpsertFlagDefaultsPayload$Outbound = {
  tags: Array<string>;
  temporary: boolean;
  booleanDefaults: BooleanFlagDefaults$Outbound;
  defaultClientSideAvailability: DefaultClientSideAvailability$Outbound;
};

/** @internal */
export const UpsertFlagDefaultsPayload$outboundSchema: z.ZodType<
  UpsertFlagDefaultsPayload$Outbound,
  z.ZodTypeDef,
  UpsertFlagDefaultsPayload
> = z.object({
  tags: z.array(z.string()),
  temporary: z.boolean(),
  booleanDefaults: BooleanFlagDefaults$outboundSchema,
  defaultClientSideAvailability: DefaultClientSideAvailability$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpsertFlagDefaultsPayload$ {
  /** @deprecated use `UpsertFlagDefaultsPayload$inboundSchema` instead. */
  export const inboundSchema = UpsertFlagDefaultsPayload$inboundSchema;
  /** @deprecated use `UpsertFlagDefaultsPayload$outboundSchema` instead. */
  export const outboundSchema = UpsertFlagDefaultsPayload$outboundSchema;
  /** @deprecated use `UpsertFlagDefaultsPayload$Outbound` instead. */
  export type Outbound = UpsertFlagDefaultsPayload$Outbound;
}

export function upsertFlagDefaultsPayloadToJSON(
  upsertFlagDefaultsPayload: UpsertFlagDefaultsPayload,
): string {
  return JSON.stringify(
    UpsertFlagDefaultsPayload$outboundSchema.parse(upsertFlagDefaultsPayload),
  );
}

export function upsertFlagDefaultsPayloadFromJSON(
  jsonString: string,
): SafeParseResult<UpsertFlagDefaultsPayload, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpsertFlagDefaultsPayload$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpsertFlagDefaultsPayload' from JSON`,
  );
}
