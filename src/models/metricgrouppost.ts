/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  MetricInMetricGroupInput,
  MetricInMetricGroupInput$inboundSchema,
  MetricInMetricGroupInput$Outbound,
  MetricInMetricGroupInput$outboundSchema,
} from "./metricinmetricgroupinput.js";

/**
 * The type of the metric group
 */
export const MetricGroupPostKind = {
  Funnel: "funnel",
} as const;
/**
 * The type of the metric group
 */
export type MetricGroupPostKind = ClosedEnum<typeof MetricGroupPostKind>;

export type MetricGroupPost = {
  /**
   * A unique key to reference the metric group
   */
  key: string;
  /**
   * A human-friendly name for the metric group
   */
  name: string;
  /**
   * The type of the metric group
   */
  kind: MetricGroupPostKind;
  /**
   * Description of the metric group
   */
  description?: string | undefined;
  /**
   * The ID of the member who maintains this metric group
   */
  maintainerId: string;
  /**
   * Tags for the metric group
   */
  tags: Array<string>;
  /**
   * An ordered list of the metrics in this metric group
   */
  metrics: Array<MetricInMetricGroupInput>;
};

/** @internal */
export const MetricGroupPostKind$inboundSchema: z.ZodNativeEnum<
  typeof MetricGroupPostKind
> = z.nativeEnum(MetricGroupPostKind);

/** @internal */
export const MetricGroupPostKind$outboundSchema: z.ZodNativeEnum<
  typeof MetricGroupPostKind
> = MetricGroupPostKind$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MetricGroupPostKind$ {
  /** @deprecated use `MetricGroupPostKind$inboundSchema` instead. */
  export const inboundSchema = MetricGroupPostKind$inboundSchema;
  /** @deprecated use `MetricGroupPostKind$outboundSchema` instead. */
  export const outboundSchema = MetricGroupPostKind$outboundSchema;
}

/** @internal */
export const MetricGroupPost$inboundSchema: z.ZodType<
  MetricGroupPost,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  name: z.string(),
  kind: MetricGroupPostKind$inboundSchema,
  description: z.string().optional(),
  maintainerId: z.string(),
  tags: z.array(z.string()),
  metrics: z.array(MetricInMetricGroupInput$inboundSchema),
});

/** @internal */
export type MetricGroupPost$Outbound = {
  key: string;
  name: string;
  kind: string;
  description?: string | undefined;
  maintainerId: string;
  tags: Array<string>;
  metrics: Array<MetricInMetricGroupInput$Outbound>;
};

/** @internal */
export const MetricGroupPost$outboundSchema: z.ZodType<
  MetricGroupPost$Outbound,
  z.ZodTypeDef,
  MetricGroupPost
> = z.object({
  key: z.string(),
  name: z.string(),
  kind: MetricGroupPostKind$outboundSchema,
  description: z.string().optional(),
  maintainerId: z.string(),
  tags: z.array(z.string()),
  metrics: z.array(MetricInMetricGroupInput$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MetricGroupPost$ {
  /** @deprecated use `MetricGroupPost$inboundSchema` instead. */
  export const inboundSchema = MetricGroupPost$inboundSchema;
  /** @deprecated use `MetricGroupPost$outboundSchema` instead. */
  export const outboundSchema = MetricGroupPost$outboundSchema;
  /** @deprecated use `MetricGroupPost$Outbound` instead. */
  export type Outbound = MetricGroupPost$Outbound;
}

export function metricGroupPostToJSON(
  metricGroupPost: MetricGroupPost,
): string {
  return JSON.stringify(MetricGroupPost$outboundSchema.parse(metricGroupPost));
}

export function metricGroupPostFromJSON(
  jsonString: string,
): SafeParseResult<MetricGroupPost, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MetricGroupPost$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MetricGroupPost' from JSON`,
  );
}
