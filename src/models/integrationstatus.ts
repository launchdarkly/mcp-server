/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type IntegrationStatus = {
  display: string;
  value: string;
};

/** @internal */
export const IntegrationStatus$inboundSchema: z.ZodType<
  IntegrationStatus,
  z.ZodTypeDef,
  unknown
> = z.object({
  display: z.string(),
  value: z.string(),
});

/** @internal */
export type IntegrationStatus$Outbound = {
  display: string;
  value: string;
};

/** @internal */
export const IntegrationStatus$outboundSchema: z.ZodType<
  IntegrationStatus$Outbound,
  z.ZodTypeDef,
  IntegrationStatus
> = z.object({
  display: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IntegrationStatus$ {
  /** @deprecated use `IntegrationStatus$inboundSchema` instead. */
  export const inboundSchema = IntegrationStatus$inboundSchema;
  /** @deprecated use `IntegrationStatus$outboundSchema` instead. */
  export const outboundSchema = IntegrationStatus$outboundSchema;
  /** @deprecated use `IntegrationStatus$Outbound` instead. */
  export type Outbound = IntegrationStatus$Outbound;
}

export function integrationStatusToJSON(
  integrationStatus: IntegrationStatus,
): string {
  return JSON.stringify(
    IntegrationStatus$outboundSchema.parse(integrationStatus),
  );
}

export function integrationStatusFromJSON(
  jsonString: string,
): SafeParseResult<IntegrationStatus, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IntegrationStatus$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IntegrationStatus' from JSON`,
  );
}
