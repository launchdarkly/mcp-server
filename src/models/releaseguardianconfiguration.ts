/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ReleaseGuardianConfiguration = {
  /**
   * The monitoring window in milliseconds
   */
  monitoringWindowMilliseconds: number;
  /**
   * The rollout weight percentage
   */
  rolloutWeight: number;
  /**
   * Whether or not to roll back on regression
   */
  rollbackOnRegression: boolean;
  /**
   * The randomization unit for the measured rollout
   */
  randomizationUnit?: string | undefined;
};

/** @internal */
export const ReleaseGuardianConfiguration$inboundSchema: z.ZodType<
  ReleaseGuardianConfiguration,
  z.ZodTypeDef,
  unknown
> = z.object({
  monitoringWindowMilliseconds: z.number().int(),
  rolloutWeight: z.number().int(),
  rollbackOnRegression: z.boolean(),
  randomizationUnit: z.string().optional(),
});

/** @internal */
export type ReleaseGuardianConfiguration$Outbound = {
  monitoringWindowMilliseconds: number;
  rolloutWeight: number;
  rollbackOnRegression: boolean;
  randomizationUnit?: string | undefined;
};

/** @internal */
export const ReleaseGuardianConfiguration$outboundSchema: z.ZodType<
  ReleaseGuardianConfiguration$Outbound,
  z.ZodTypeDef,
  ReleaseGuardianConfiguration
> = z.object({
  monitoringWindowMilliseconds: z.number().int(),
  rolloutWeight: z.number().int(),
  rollbackOnRegression: z.boolean(),
  randomizationUnit: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReleaseGuardianConfiguration$ {
  /** @deprecated use `ReleaseGuardianConfiguration$inboundSchema` instead. */
  export const inboundSchema = ReleaseGuardianConfiguration$inboundSchema;
  /** @deprecated use `ReleaseGuardianConfiguration$outboundSchema` instead. */
  export const outboundSchema = ReleaseGuardianConfiguration$outboundSchema;
  /** @deprecated use `ReleaseGuardianConfiguration$Outbound` instead. */
  export type Outbound = ReleaseGuardianConfiguration$Outbound;
}

export function releaseGuardianConfigurationToJSON(
  releaseGuardianConfiguration: ReleaseGuardianConfiguration,
): string {
  return JSON.stringify(
    ReleaseGuardianConfiguration$outboundSchema.parse(
      releaseGuardianConfiguration,
    ),
  );
}

export function releaseGuardianConfigurationFromJSON(
  jsonString: string,
): SafeParseResult<ReleaseGuardianConfiguration, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ReleaseGuardianConfiguration$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReleaseGuardianConfiguration' from JSON`,
  );
}
