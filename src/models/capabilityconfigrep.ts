/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ApprovalsCapabilityConfig,
  ApprovalsCapabilityConfig$inboundSchema,
  ApprovalsCapabilityConfig$Outbound,
  ApprovalsCapabilityConfig$outboundSchema,
} from "./approvalscapabilityconfig.js";
import {
  AuditLogEventsHookCapabilityConfigRep,
  AuditLogEventsHookCapabilityConfigRep$inboundSchema,
  AuditLogEventsHookCapabilityConfigRep$Outbound,
  AuditLogEventsHookCapabilityConfigRep$outboundSchema,
} from "./auditlogeventshookcapabilityconfigrep.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CapabilityConfigRep = {
  approvals?: ApprovalsCapabilityConfig | undefined;
  auditLogEventsHook?: AuditLogEventsHookCapabilityConfigRep | undefined;
};

/** @internal */
export const CapabilityConfigRep$inboundSchema: z.ZodType<
  CapabilityConfigRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  approvals: ApprovalsCapabilityConfig$inboundSchema.optional(),
  auditLogEventsHook: AuditLogEventsHookCapabilityConfigRep$inboundSchema
    .optional(),
});

/** @internal */
export type CapabilityConfigRep$Outbound = {
  approvals?: ApprovalsCapabilityConfig$Outbound | undefined;
  auditLogEventsHook?:
    | AuditLogEventsHookCapabilityConfigRep$Outbound
    | undefined;
};

/** @internal */
export const CapabilityConfigRep$outboundSchema: z.ZodType<
  CapabilityConfigRep$Outbound,
  z.ZodTypeDef,
  CapabilityConfigRep
> = z.object({
  approvals: ApprovalsCapabilityConfig$outboundSchema.optional(),
  auditLogEventsHook: AuditLogEventsHookCapabilityConfigRep$outboundSchema
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CapabilityConfigRep$ {
  /** @deprecated use `CapabilityConfigRep$inboundSchema` instead. */
  export const inboundSchema = CapabilityConfigRep$inboundSchema;
  /** @deprecated use `CapabilityConfigRep$outboundSchema` instead. */
  export const outboundSchema = CapabilityConfigRep$outboundSchema;
  /** @deprecated use `CapabilityConfigRep$Outbound` instead. */
  export type Outbound = CapabilityConfigRep$Outbound;
}

export function capabilityConfigRepToJSON(
  capabilityConfigRep: CapabilityConfigRep,
): string {
  return JSON.stringify(
    CapabilityConfigRep$outboundSchema.parse(capabilityConfigRep),
  );
}

export function capabilityConfigRepFromJSON(
  jsonString: string,
): SafeParseResult<CapabilityConfigRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CapabilityConfigRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CapabilityConfigRep' from JSON`,
  );
}
