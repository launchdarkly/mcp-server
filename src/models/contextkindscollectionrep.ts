/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ContextKindRep,
  ContextKindRep$inboundSchema,
  ContextKindRep$Outbound,
  ContextKindRep$outboundSchema,
} from "./contextkindrep.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";

export type ContextKindsCollectionRep = {
  /**
   * An array of context kinds
   */
  items: Array<ContextKindRep>;
  /**
   * The location and content type of related resources
   */
  links: { [k: string]: Link };
};

/** @internal */
export const ContextKindsCollectionRep$inboundSchema: z.ZodType<
  ContextKindsCollectionRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(ContextKindRep$inboundSchema),
  _links: z.record(Link$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type ContextKindsCollectionRep$Outbound = {
  items: Array<ContextKindRep$Outbound>;
  _links: { [k: string]: Link$Outbound };
};

/** @internal */
export const ContextKindsCollectionRep$outboundSchema: z.ZodType<
  ContextKindsCollectionRep$Outbound,
  z.ZodTypeDef,
  ContextKindsCollectionRep
> = z.object({
  items: z.array(ContextKindRep$outboundSchema),
  links: z.record(Link$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ContextKindsCollectionRep$ {
  /** @deprecated use `ContextKindsCollectionRep$inboundSchema` instead. */
  export const inboundSchema = ContextKindsCollectionRep$inboundSchema;
  /** @deprecated use `ContextKindsCollectionRep$outboundSchema` instead. */
  export const outboundSchema = ContextKindsCollectionRep$outboundSchema;
  /** @deprecated use `ContextKindsCollectionRep$Outbound` instead. */
  export type Outbound = ContextKindsCollectionRep$Outbound;
}

export function contextKindsCollectionRepToJSON(
  contextKindsCollectionRep: ContextKindsCollectionRep,
): string {
  return JSON.stringify(
    ContextKindsCollectionRep$outboundSchema.parse(contextKindsCollectionRep),
  );
}

export function contextKindsCollectionRepFromJSON(
  jsonString: string,
): SafeParseResult<ContextKindsCollectionRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ContextKindsCollectionRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ContextKindsCollectionRep' from JSON`,
  );
}
