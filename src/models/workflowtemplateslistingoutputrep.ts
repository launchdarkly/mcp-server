/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  WorkflowTemplateOutput,
  WorkflowTemplateOutput$inboundSchema,
  WorkflowTemplateOutput$Outbound,
  WorkflowTemplateOutput$outboundSchema,
} from "./workflowtemplateoutput.js";

export type WorkflowTemplatesListingOutputRep = {
  items: Array<WorkflowTemplateOutput>;
};

/** @internal */
export const WorkflowTemplatesListingOutputRep$inboundSchema: z.ZodType<
  WorkflowTemplatesListingOutputRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(WorkflowTemplateOutput$inboundSchema),
});

/** @internal */
export type WorkflowTemplatesListingOutputRep$Outbound = {
  items: Array<WorkflowTemplateOutput$Outbound>;
};

/** @internal */
export const WorkflowTemplatesListingOutputRep$outboundSchema: z.ZodType<
  WorkflowTemplatesListingOutputRep$Outbound,
  z.ZodTypeDef,
  WorkflowTemplatesListingOutputRep
> = z.object({
  items: z.array(WorkflowTemplateOutput$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkflowTemplatesListingOutputRep$ {
  /** @deprecated use `WorkflowTemplatesListingOutputRep$inboundSchema` instead. */
  export const inboundSchema = WorkflowTemplatesListingOutputRep$inboundSchema;
  /** @deprecated use `WorkflowTemplatesListingOutputRep$outboundSchema` instead. */
  export const outboundSchema =
    WorkflowTemplatesListingOutputRep$outboundSchema;
  /** @deprecated use `WorkflowTemplatesListingOutputRep$Outbound` instead. */
  export type Outbound = WorkflowTemplatesListingOutputRep$Outbound;
}

export function workflowTemplatesListingOutputRepToJSON(
  workflowTemplatesListingOutputRep: WorkflowTemplatesListingOutputRep,
): string {
  return JSON.stringify(
    WorkflowTemplatesListingOutputRep$outboundSchema.parse(
      workflowTemplatesListingOutputRep,
    ),
  );
}

export function workflowTemplatesListingOutputRepFromJSON(
  jsonString: string,
): SafeParseResult<WorkflowTemplatesListingOutputRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WorkflowTemplatesListingOutputRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WorkflowTemplatesListingOutputRep' from JSON`,
  );
}
