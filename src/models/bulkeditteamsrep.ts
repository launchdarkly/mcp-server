/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type BulkEditTeamsRep = {
  /**
   * A list of member IDs of the members who were added to the teams.
   */
  memberIDs?: Array<string> | undefined;
  /**
   * A list of team keys of the teams that were successfully updated.
   */
  teamKeys?: Array<string> | undefined;
  /**
   * A list of team keys and errors for the teams whose updates failed.
   */
  errors?: Array<{ [k: string]: string }> | undefined;
};

/** @internal */
export const BulkEditTeamsRep$inboundSchema: z.ZodType<
  BulkEditTeamsRep,
  z.ZodTypeDef,
  unknown
> = z.object({
  memberIDs: z.array(z.string()).optional(),
  teamKeys: z.array(z.string()).optional(),
  errors: z.array(z.record(z.string())).optional(),
});

/** @internal */
export type BulkEditTeamsRep$Outbound = {
  memberIDs?: Array<string> | undefined;
  teamKeys?: Array<string> | undefined;
  errors?: Array<{ [k: string]: string }> | undefined;
};

/** @internal */
export const BulkEditTeamsRep$outboundSchema: z.ZodType<
  BulkEditTeamsRep$Outbound,
  z.ZodTypeDef,
  BulkEditTeamsRep
> = z.object({
  memberIDs: z.array(z.string()).optional(),
  teamKeys: z.array(z.string()).optional(),
  errors: z.array(z.record(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkEditTeamsRep$ {
  /** @deprecated use `BulkEditTeamsRep$inboundSchema` instead. */
  export const inboundSchema = BulkEditTeamsRep$inboundSchema;
  /** @deprecated use `BulkEditTeamsRep$outboundSchema` instead. */
  export const outboundSchema = BulkEditTeamsRep$outboundSchema;
  /** @deprecated use `BulkEditTeamsRep$Outbound` instead. */
  export type Outbound = BulkEditTeamsRep$Outbound;
}

export function bulkEditTeamsRepToJSON(
  bulkEditTeamsRep: BulkEditTeamsRep,
): string {
  return JSON.stringify(
    BulkEditTeamsRep$outboundSchema.parse(bulkEditTeamsRep),
  );
}

export function bulkEditTeamsRepFromJSON(
  jsonString: string,
): SafeParseResult<BulkEditTeamsRep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BulkEditTeamsRep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BulkEditTeamsRep' from JSON`,
  );
}
