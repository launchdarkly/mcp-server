/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { insightsFlagEventsBetaGetFlagEvents } from "../funcs/insightsFlagEventsBetaGetFlagEvents.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class InsightsFlagEventsBeta extends ClientSDK {
  /**
   * List flag events
   *
   * @remarks
   * Get a list of flag events
   *
   * ### Expanding the flag event collection response
   *
   * LaunchDarkly supports expanding the flag event collection response to include additional fields.
   *
   * To expand the response, append the `expand` query parameter and include the following:
   *
   * * `experiments` includes details on all of the experiments run on each flag
   *
   * For example, use `?expand=experiments` to include the `experiments` field in the response. By default, this field is **not** included in the response.
   */
  async getFlagEvents(
    request: operations.GetFlagEventsRequest,
    options?: RequestOptions,
  ): Promise<models.FlagEventCollectionRep> {
    return unwrapAsync(insightsFlagEventsBetaGetFlagEvents(
      this,
      request,
      options,
    ));
  }
}
