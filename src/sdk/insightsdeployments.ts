/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { insightsDeploymentsCreateEvent } from "../funcs/insightsDeploymentsCreateEvent.js";
import { insightsDeploymentsGet } from "../funcs/insightsDeploymentsGet.js";
import { insightsDeploymentsList } from "../funcs/insightsDeploymentsList.js";
import { insightsDeploymentsUpdate } from "../funcs/insightsDeploymentsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class InsightsDeployments extends ClientSDK {
  /**
   * Create deployment event
   *
   * @remarks
   * Create deployment event
   */
  async createEvent(
    request: components.PostDeploymentEventInput,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(insightsDeploymentsCreateEvent(
      this,
      request,
      options,
    ));
  }

  /**
   * List deployments
   *
   * @remarks
   * Get a list of deployments
   *
   * ### Expanding the deployment collection response
   *
   * LaunchDarkly supports expanding the deployment collection response to include additional fields.
   *
   * To expand the response, append the `expand` query parameter and include the following:
   *
   * * `pullRequests` includes details on all of the pull requests associated with each deployment
   * * `flagReferences` includes details on all of the references to flags in each deployment
   *
   * For example, use `?expand=pullRequests` to include the `pullRequests` field in the response. By default, this field is **not** included in the response.
   */
  async list(
    request: operations.GetDeploymentsRequest,
    options?: RequestOptions,
  ): Promise<components.DeploymentCollectionRep> {
    return unwrapAsync(insightsDeploymentsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get deployment
   *
   * @remarks
   * Get a deployment by ID.
   *
   * The deployment ID is returned as part of the [List deployments](https://launchdarkly.com/docs/api/insights-deployments-beta/get-deployments) response. It is the `id` field of each element in the `items` array.
   *
   * ### Expanding the deployment response
   *
   * LaunchDarkly supports expanding the deployment response to include additional fields.
   *
   * To expand the response, append the `expand` query parameter and include the following:
   *
   * * `pullRequests` includes details on all of the pull requests associated with each deployment
   * * `flagReferences` includes details on all of the references to flags in each deployment
   *
   * For example, use `?expand=pullRequests` to include the `pullRequests` field in the response. By default, this field is **not** included in the response.
   */
  async get(
    request: operations.GetDeploymentRequest,
    options?: RequestOptions,
  ): Promise<components.DeploymentRep> {
    return unwrapAsync(insightsDeploymentsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update deployment
   *
   * @remarks
   * Update a deployment by ID. Updating a deployment uses a [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates).<br/><br/>The deployment ID is returned as part of the [List deployments](https://launchdarkly.com/docs/api/insights-deployments-beta/get-deployments) response. It is the `id` field of each element in the `items` array.
   */
  async update(
    request: operations.UpdateDeploymentRequest,
    options?: RequestOptions,
  ): Promise<components.DeploymentRep> {
    return unwrapAsync(insightsDeploymentsUpdate(
      this,
      request,
      options,
    ));
  }
}
