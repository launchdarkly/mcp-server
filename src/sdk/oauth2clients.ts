/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { oAuth2ClientsCreateOAuth2Client } from "../funcs/oAuth2ClientsCreateOAuth2Client.js";
import { oAuth2ClientsDeleteOAuthClient } from "../funcs/oAuth2ClientsDeleteOAuthClient.js";
import { oAuth2ClientsGetOAuthClientById } from "../funcs/oAuth2ClientsGetOAuthClientById.js";
import { oAuth2ClientsGetOAuthClients } from "../funcs/oAuth2ClientsGetOAuthClients.js";
import { oAuth2ClientsPatchOAuthClient } from "../funcs/oAuth2ClientsPatchOAuthClient.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class OAuth2Clients extends ClientSDK {
  /**
   * Get clients
   *
   * @remarks
   * Get all OAuth 2.0 clients registered by your account.
   */
  async getOAuthClients(
    options?: RequestOptions,
  ): Promise<models.ClientCollection> {
    return unwrapAsync(oAuth2ClientsGetOAuthClients(
      this,
      options,
    ));
  }

  /**
   * Create a LaunchDarkly OAuth 2.0 client
   *
   * @remarks
   * Create (register) a LaunchDarkly OAuth2 client. OAuth2 clients allow you to build custom integrations using LaunchDarkly as your identity provider.
   */
  async createOAuth2Client(
    request: models.OauthClientPost,
    options?: RequestOptions,
  ): Promise<models.Client> {
    return unwrapAsync(oAuth2ClientsCreateOAuth2Client(
      this,
      request,
      options,
    ));
  }

  /**
   * Get client by ID
   *
   * @remarks
   * Get a registered OAuth 2.0 client by unique client ID.
   */
  async getOAuthClientById(
    request: operations.GetOAuthClientByIdRequest,
    options?: RequestOptions,
  ): Promise<models.Client> {
    return unwrapAsync(oAuth2ClientsGetOAuthClientById(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete OAuth 2.0 client
   *
   * @remarks
   * Delete an existing OAuth 2.0 client by unique client ID.
   */
  async deleteOAuthClient(
    request: operations.DeleteOAuthClientRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(oAuth2ClientsDeleteOAuthClient(
      this,
      request,
      options,
    ));
  }

  /**
   * Patch client by ID
   *
   * @remarks
   * Patch an existing OAuth 2.0 client by client ID. Updating an OAuth2 client uses a [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates). Only `name`, `description`, and `redirectUri` may be patched.
   */
  async patchOAuthClient(
    request: operations.PatchOAuthClientRequest,
    options?: RequestOptions,
  ): Promise<models.Client> {
    return unwrapAsync(oAuth2ClientsPatchOAuthClient(
      this,
      request,
      options,
    ));
  }
}
