/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { oauth2ClientsCreate } from "../funcs/oauth2ClientsCreate.js";
import { oauth2ClientsDelete } from "../funcs/oauth2ClientsDelete.js";
import { oauth2ClientsGet } from "../funcs/oauth2ClientsGet.js";
import { oauth2ClientsGetById } from "../funcs/oauth2ClientsGetById.js";
import { oauth2ClientsPatch } from "../funcs/oauth2ClientsPatch.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Oauth2Clients extends ClientSDK {
  /**
   * Get clients
   *
   * @remarks
   * Get all OAuth 2.0 clients registered by your account.
   */
  async get(
    options?: RequestOptions,
  ): Promise<components.ClientCollection> {
    return unwrapAsync(oauth2ClientsGet(
      this,
      options,
    ));
  }

  /**
   * Create a LaunchDarkly OAuth 2.0 client
   *
   * @remarks
   * Create (register) a LaunchDarkly OAuth2 client. OAuth2 clients allow you to build custom integrations using LaunchDarkly as your identity provider.
   */
  async create(
    request: components.OauthClientPost,
    options?: RequestOptions,
  ): Promise<components.Client> {
    return unwrapAsync(oauth2ClientsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get client by ID
   *
   * @remarks
   * Get a registered OAuth 2.0 client by unique client ID.
   */
  async getById(
    request: operations.GetOAuthClientByIdRequest,
    options?: RequestOptions,
  ): Promise<components.Client> {
    return unwrapAsync(oauth2ClientsGetById(
      this,
      request,
      options,
    ));
  }

  /**
   * Patch client by ID
   *
   * @remarks
   * Patch an existing OAuth 2.0 client by client ID. Updating an OAuth2 client uses a [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates). Only `name`, `description`, and `redirectUri` may be patched.
   */
  async patch(
    request: operations.PatchOAuthClientRequest,
    options?: RequestOptions,
  ): Promise<components.Client> {
    return unwrapAsync(oauth2ClientsPatch(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete OAuth 2.0 client
   *
   * @remarks
   * Delete an existing OAuth 2.0 client by unique client ID.
   */
  async delete(
    request: operations.DeleteOAuthClientRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(oauth2ClientsDelete(
      this,
      request,
      options,
    ));
  }
}
