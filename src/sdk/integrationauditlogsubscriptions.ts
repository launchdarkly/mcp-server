/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { integrationAuditLogSubscriptionsCreateSubscription } from "../funcs/integrationAuditLogSubscriptionsCreateSubscription.js";
import { integrationAuditLogSubscriptionsDeleteSubscription } from "../funcs/integrationAuditLogSubscriptionsDeleteSubscription.js";
import { integrationAuditLogSubscriptionsGetSubscriptionByID } from "../funcs/integrationAuditLogSubscriptionsGetSubscriptionByID.js";
import { integrationAuditLogSubscriptionsGetSubscriptions } from "../funcs/integrationAuditLogSubscriptionsGetSubscriptions.js";
import { integrationAuditLogSubscriptionsUpdateSubscription } from "../funcs/integrationAuditLogSubscriptionsUpdateSubscription.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class IntegrationAuditLogSubscriptions extends ClientSDK {
  /**
   * Get audit log subscriptions by integration
   *
   * @remarks
   * Get all audit log subscriptions associated with a given integration.
   */
  async getSubscriptions(
    request: operations.GetSubscriptionsRequest,
    options?: RequestOptions,
  ): Promise<models.Integrations> {
    return unwrapAsync(integrationAuditLogSubscriptionsGetSubscriptions(
      this,
      request,
      options,
    ));
  }

  /**
   * Create audit log subscription
   *
   * @remarks
   * Create an audit log subscription.<br /><br />For each subscription, you must specify the set of resources you wish to subscribe to audit log notifications for. You can describe these resources using a custom role policy. To learn more, read [Custom role concepts](https://launchdarkly.com/docs/home/account/role-concepts).
   */
  async createSubscription(
    request: operations.CreateSubscriptionRequest,
    options?: RequestOptions,
  ): Promise<models.Integration> {
    return unwrapAsync(integrationAuditLogSubscriptionsCreateSubscription(
      this,
      request,
      options,
    ));
  }

  /**
   * Get audit log subscription by ID
   *
   * @remarks
   * Get an audit log subscription by ID.
   */
  async getSubscriptionByID(
    request: operations.GetSubscriptionByIDRequest,
    options?: RequestOptions,
  ): Promise<models.Integration> {
    return unwrapAsync(integrationAuditLogSubscriptionsGetSubscriptionByID(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete audit log subscription
   *
   * @remarks
   * Delete an audit log subscription.
   */
  async deleteSubscription(
    request: operations.DeleteSubscriptionRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(integrationAuditLogSubscriptionsDeleteSubscription(
      this,
      request,
      options,
    ));
  }

  /**
   * Update audit log subscription
   *
   * @remarks
   * Update an audit log subscription configuration. Updating an audit log subscription uses a [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates).
   */
  async updateSubscription(
    request: operations.UpdateSubscriptionRequest,
    options?: RequestOptions,
  ): Promise<models.Integration> {
    return unwrapAsync(integrationAuditLogSubscriptionsUpdateSubscription(
      this,
      request,
      options,
    ));
  }
}
