/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { approvalsBetaPatchApprovalRequest } from "../funcs/approvalsBetaPatchApprovalRequest.js";
import { approvalsBetaPatchFlagConfigApprovalRequest } from "../funcs/approvalsBetaPatchFlagConfigApprovalRequest.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ApprovalsBeta extends ClientSDK {
  /**
   * Update approval request
   *
   * @remarks
   * Perform a partial update to an approval request. Updating an approval request uses the semantic patch format. This endpoint works with approval requests for either flag or segment changes.
   *
   * To make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](https://launchdarkly.com/docs/api#updates-using-semantic-patch).
   *
   * ### Instructions
   *
   * Semantic patch requests support the following `kind` instruction for updating an approval request.
   *
   * #### addReviewers
   *
   * Adds the specified members and teams to the existing list of reviewers. You must include at least one of `notifyMemberIds` and `notifyTeamKeys`.
   *
   * ##### Parameters
   *
   * - `notifyMemberIds`: (Optional) List of member IDs.
   * - `notifyTeamKeys`: (Optional) List of team keys.
   *
   * Here's an example:
   *
   * ```json
   * {
   *   "instructions": [{
   *     "kind": "addReviewers",
   *     "notifyMemberIds": [ "user-key-123abc", "user-key-456def" ],
   *     "notifyTeamKeys": [ "team-key-789abc"]
   *   }]
   * }
   * ```
   */
  async patchApprovalRequest(
    request: operations.PatchApprovalRequestRequest,
    options?: RequestOptions,
  ): Promise<models.FlagConfigApprovalRequestResponse> {
    return unwrapAsync(approvalsBetaPatchApprovalRequest(
      this,
      request,
      options,
    ));
  }

  /**
   * Update flag approval request
   *
   * @remarks
   * Perform a partial update to an approval request. Updating an approval request uses the semantic patch format. This endpoint requires a feature flag key, and can only be used for updating approval requests for flags.
   *
   * To make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](https://launchdarkly.com/docs/api#updates-using-semantic-patch).
   *
   * ### Instructions
   *
   * Semantic patch requests support the following `kind` instruction for updating an approval request.
   *
   * #### addReviewers
   *
   * Adds the specified members and teams to the existing list of reviewers. You must include at least one of `notifyMemberIds` and `notifyTeamKeys`.
   *
   * ##### Parameters
   *
   * - `notifyMemberIds`: (Optional) List of member IDs.
   * - `notifyTeamKeys`: (Optional) List of team keys.
   */
  async patchFlagConfigApprovalRequest(
    request: operations.PatchFlagConfigApprovalRequestRequest,
    options?: RequestOptions,
  ): Promise<models.FlagConfigApprovalRequestResponse> {
    return unwrapAsync(approvalsBetaPatchFlagConfigApprovalRequest(
      this,
      request,
      options,
    ));
  }
}
