/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { otherGetCallerIdentity } from "../funcs/otherGetCallerIdentity.js";
import { otherGetIps } from "../funcs/otherGetIps.js";
import { otherGetOpenapiSpec } from "../funcs/otherGetOpenapiSpec.js";
import { otherGetRoot } from "../funcs/otherGetRoot.js";
import { otherGetVersions } from "../funcs/otherGetVersions.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Other extends ClientSDK {
  /**
   * Root resource
   *
   * @remarks
   * Get all of the resource categories the API supports. In the sandbox, click 'Play' and enter any string in the 'Authorization' field to test this endpoint.
   */
  async getRoot(
    options?: RequestOptions,
  ): Promise<components.RootResponse> {
    return unwrapAsync(otherGetRoot(
      this,
      options,
    ));
  }

  /**
   * Identify the caller
   *
   * @remarks
   * Get basic information about the identity used (session cookie, API token, SDK keys, etc.) to call the API
   */
  async getCallerIdentity(
    options?: RequestOptions,
  ): Promise<components.CallerIdentityRep> {
    return unwrapAsync(otherGetCallerIdentity(
      this,
      options,
    ));
  }

  /**
   * Gets the OpenAPI spec in json
   *
   * @remarks
   * Get the latest version of the OpenAPI specification for LaunchDarkly's API in JSON format. In the sandbox, click 'Play' and enter any string in the 'Authorization' field to test this endpoint.
   */
  async getOpenapiSpec(
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(otherGetOpenapiSpec(
      this,
      options,
    ));
  }

  /**
   * Gets the public IP list
   *
   * @remarks
   * Get a list of IP ranges the LaunchDarkly service uses. You can use this list to allow LaunchDarkly through your firewall. We post upcoming changes to this list in advance on our [status page](https://status.launchdarkly.com/). <br /><br />In the sandbox, click 'Play' and enter any string in the 'Authorization' field to test this endpoint.
   */
  async getIps(
    options?: RequestOptions,
  ): Promise<components.IpList> {
    return unwrapAsync(otherGetIps(
      this,
      options,
    ));
  }

  /**
   * Get version information
   *
   * @remarks
   * Get the latest API version, the list of valid API versions in ascending order, and the version being used for this request. These are all in the external, date-based format.
   */
  async getVersions(
    options?: RequestOptions,
  ): Promise<components.VersionsRep> {
    return unwrapAsync(otherGetVersions(
      this,
      options,
    ));
  }
}
