/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { deleteFlagOverride } from "../funcs/deleteFlagOverride.js";
import { deleteOverrides } from "../funcs/deleteOverrides.js";
import { putOverrideFlag } from "../funcs/putOverrideFlag.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { AiConfigs } from "./aiconfigs.js";
import { FeatureFlags } from "./featureflags.js";

export class LaunchDarkly extends ClientSDK {
  private _featureFlags?: FeatureFlags;
  get featureFlags(): FeatureFlags {
    return (this._featureFlags ??= new FeatureFlags(this._options));
  }

  private _aiConfigs?: AiConfigs;
  get aiConfigs(): AiConfigs {
    return (this._aiConfigs ??= new AiConfigs(this._options));
  }

  /**
   * remove all overrides for the given project
   */
  async deleteOverrides(
    request: operations.DeleteOverridesRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(deleteOverrides(
      this,
      request,
      options,
    ));
  }

  /**
   * override flag value with value provided in the body
   */
  async putOverrideFlag(
    request: operations.PutOverrideFlagRequest,
    options?: RequestOptions,
  ): Promise<components.FlagOverride> {
    return unwrapAsync(putOverrideFlag(
      this,
      request,
      options,
    ));
  }

  /**
   * remove override for flag
   */
  async deleteFlagOverride(
    request: operations.DeleteFlagOverrideRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(deleteFlagOverride(
      this,
      request,
      options,
    ));
  }
}
