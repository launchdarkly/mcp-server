/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { persistentStoreIntegrationsBetaCreateBigSegmentStoreIntegration } from "../funcs/persistentStoreIntegrationsBetaCreateBigSegmentStoreIntegration.js";
import { persistentStoreIntegrationsBetaDeleteBigSegmentStoreIntegration } from "../funcs/persistentStoreIntegrationsBetaDeleteBigSegmentStoreIntegration.js";
import { persistentStoreIntegrationsBetaGetBigSegmentStoreIntegration } from "../funcs/persistentStoreIntegrationsBetaGetBigSegmentStoreIntegration.js";
import { persistentStoreIntegrationsBetaGetBigSegmentStoreIntegrations } from "../funcs/persistentStoreIntegrationsBetaGetBigSegmentStoreIntegrations.js";
import { persistentStoreIntegrationsBetaPatchBigSegmentStoreIntegration } from "../funcs/persistentStoreIntegrationsBetaPatchBigSegmentStoreIntegration.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class PersistentStoreIntegrationsBeta extends ClientSDK {
  /**
   * List all big segment store integrations
   *
   * @remarks
   * List all big segment store integrations.
   */
  async getBigSegmentStoreIntegrations(
    options?: RequestOptions,
  ): Promise<models.BigSegmentStoreIntegrationCollection> {
    return unwrapAsync(
      persistentStoreIntegrationsBetaGetBigSegmentStoreIntegrations(
        this,
        options,
      ),
    );
  }

  /**
   * Create big segment store integration
   *
   * @remarks
   *
   * Create a persistent store integration.
   *
   * If you are using server-side SDKs, segments synced from external tools and larger list-based segments require a persistent store within your infrastructure. LaunchDarkly keeps the persistent store up to date and consults it during flag evaluation.
   *
   * You can use either Redis or DynamoDB as your persistent store. When you create a persistent store integration, the fields in the `config` object in the request vary depending on which persistent store you use.
   *
   * If you are using Redis to create your persistent store integration, you will need to know:
   *
   * * Your Redis host
   * * Your Redis port
   * * Your Redis username
   * * Your Redis password
   * * Whether or not LaunchDarkly should connect using TLS
   *
   * If you are using DynamoDB to create your persistent store integration, you will need to know:
   *
   * * Your DynamoDB table name. The table must have the following schema:
   *   * Partition key: `namespace` (string)
   *   * Sort key: `key` (string)
   * * Your DynamoDB Amazon Web Services (AWS) region.
   * * Your AWS role Amazon Resource Name (ARN). This is the role that LaunchDarkly will assume to manage your DynamoDB table.
   * * The External ID you specified when creating your Amazon Resource Name (ARN).
   *
   * To learn more, read [Segment configuration](https://launchdarkly.com/docs/home/flags/segment-config).
   */
  async createBigSegmentStoreIntegration(
    request: operations.CreateBigSegmentStoreIntegrationRequest,
    options?: RequestOptions,
  ): Promise<models.BigSegmentStoreIntegration> {
    return unwrapAsync(
      persistentStoreIntegrationsBetaCreateBigSegmentStoreIntegration(
        this,
        request,
        options,
      ),
    );
  }

  /**
   * Get big segment store integration by ID
   *
   * @remarks
   * Get a big segment store integration by ID.
   */
  async getBigSegmentStoreIntegration(
    request: operations.GetBigSegmentStoreIntegrationRequest,
    options?: RequestOptions,
  ): Promise<models.BigSegmentStoreIntegration> {
    return unwrapAsync(
      persistentStoreIntegrationsBetaGetBigSegmentStoreIntegration(
        this,
        request,
        options,
      ),
    );
  }

  /**
   * Delete big segment store integration
   *
   * @remarks
   * Delete a persistent store integration. Each integration uses either Redis or DynamoDB.
   */
  async deleteBigSegmentStoreIntegration(
    request: operations.DeleteBigSegmentStoreIntegrationRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(
      persistentStoreIntegrationsBetaDeleteBigSegmentStoreIntegration(
        this,
        request,
        options,
      ),
    );
  }

  /**
   * Update big segment store integration
   *
   * @remarks
   * Update a big segment store integration. Updating a big segment store requires a [JSON Patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates).
   */
  async patchBigSegmentStoreIntegration(
    request: operations.PatchBigSegmentStoreIntegrationRequest,
    options?: RequestOptions,
  ): Promise<models.BigSegmentStoreIntegration> {
    return unwrapAsync(
      persistentStoreIntegrationsBetaPatchBigSegmentStoreIntegration(
        this,
        request,
        options,
      ),
    );
  }
}
