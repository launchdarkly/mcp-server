/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { announcementsCreate } from "../funcs/announcementsCreate.js";
import { announcementsDelete } from "../funcs/announcementsDelete.js";
import { announcementsList } from "../funcs/announcementsList.js";
import { announcementsUpdate } from "../funcs/announcementsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Announcements extends ClientSDK {
  /**
   * Get announcements
   *
   * @remarks
   * Get announcements
   */
  async list(
    request: operations.GetAnnouncementsPublicRequest,
    options?: RequestOptions,
  ): Promise<components.GetAnnouncementsPublic200Response> {
    return unwrapAsync(announcementsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create an announcement
   *
   * @remarks
   * Create an announcement
   */
  async create(
    request: components.CreateAnnouncementBody,
    options?: RequestOptions,
  ): Promise<components.AnnouncementResponse> {
    return unwrapAsync(announcementsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete an announcement
   *
   * @remarks
   * Delete an announcement
   */
  async delete(
    request: operations.DeleteAnnouncementPublicRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(announcementsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Update an announcement
   *
   * @remarks
   * Update an announcement
   */
  async update(
    request: operations.UpdateAnnouncementPublicRequest,
    options?: RequestOptions,
  ): Promise<components.AnnouncementResponse> {
    return unwrapAsync(announcementsUpdate(
      this,
      request,
      options,
    ));
  }
}
