/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customRolesCreate } from "../funcs/customRolesCreate.js";
import { customRolesDelete } from "../funcs/customRolesDelete.js";
import { customRolesGet } from "../funcs/customRolesGet.js";
import { customRolesList } from "../funcs/customRolesList.js";
import { customRolesPatch } from "../funcs/customRolesPatch.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CustomRoles extends ClientSDK {
  /**
   * List custom roles
   *
   * @remarks
   * Get a complete list of custom roles. Custom roles let you create flexible policies providing fine-grained access control to everything in LaunchDarkly, from feature flags to goals, environments, and teams. With custom roles, it's possible to enforce access policies that meet your exact workflow needs. Custom roles are available to customers on our enterprise plans. If you're interested in learning more about our enterprise plans, contact sales@launchdarkly.com.
   */
  async list(
    request: operations.GetCustomRolesRequest,
    options?: RequestOptions,
  ): Promise<components.CustomRoles> {
    return unwrapAsync(customRolesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create custom role
   *
   * @remarks
   * Create a new custom role
   */
  async create(
    request: components.CustomRolePost,
    options?: RequestOptions,
  ): Promise<components.CustomRole> {
    return unwrapAsync(customRolesCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get custom role
   *
   * @remarks
   * Get a single custom role by key or ID
   */
  async get(
    request: operations.GetCustomRoleRequest,
    options?: RequestOptions,
  ): Promise<components.CustomRole> {
    return unwrapAsync(customRolesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update custom role
   *
   * @remarks
   * Update a single custom role. Updating a custom role uses a [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) or [JSON merge patch](https://datatracker.ietf.org/doc/html/rfc7386) representation of the desired changes. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates).<br/><br/>To add an element to the `policy` array, set the `path` to `/policy` and then append `/<array index>`. Use `/0` to add to the beginning of the array. Use `/-` to add to the end of the array.
   */
  async patch(
    request: operations.PatchCustomRoleRequest,
    options?: RequestOptions,
  ): Promise<components.CustomRole> {
    return unwrapAsync(customRolesPatch(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete custom role
   *
   * @remarks
   * Delete a custom role by key
   */
  async delete(
    request: operations.DeleteCustomRoleRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(customRolesDelete(
      this,
      request,
      options,
    ));
  }
}
