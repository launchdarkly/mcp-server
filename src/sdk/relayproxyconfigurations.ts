/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { relayProxyConfigurationsDeleteRelayAutoConfig } from "../funcs/relayProxyConfigurationsDeleteRelayAutoConfig.js";
import { relayProxyConfigurationsGetRelayProxyConfig } from "../funcs/relayProxyConfigurationsGetRelayProxyConfig.js";
import { relayProxyConfigurationsGetRelayProxyConfigs } from "../funcs/relayProxyConfigurationsGetRelayProxyConfigs.js";
import { relayProxyConfigurationsPatchRelayAutoConfig } from "../funcs/relayProxyConfigurationsPatchRelayAutoConfig.js";
import { relayProxyConfigurationsPostRelayAutoConfig } from "../funcs/relayProxyConfigurationsPostRelayAutoConfig.js";
import { relayProxyConfigurationsResetRelayAutoConfig } from "../funcs/relayProxyConfigurationsResetRelayAutoConfig.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class RelayProxyConfigurations extends ClientSDK {
  /**
   * List Relay Proxy configs
   *
   * @remarks
   * Get a list of Relay Proxy configurations in the account.
   */
  async getRelayProxyConfigs(
    options?: RequestOptions,
  ): Promise<models.RelayAutoConfigCollectionRep> {
    return unwrapAsync(relayProxyConfigurationsGetRelayProxyConfigs(
      this,
      options,
    ));
  }

  /**
   * Create a new Relay Proxy config
   *
   * @remarks
   * Create a Relay Proxy config.
   */
  async postRelayAutoConfig(
    request: models.RelayAutoConfigPost,
    options?: RequestOptions,
  ): Promise<models.RelayAutoConfigRep> {
    return unwrapAsync(relayProxyConfigurationsPostRelayAutoConfig(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Relay Proxy config
   *
   * @remarks
   * Get a single Relay Proxy auto config by ID.
   */
  async getRelayProxyConfig(
    request: operations.GetRelayProxyConfigRequest,
    options?: RequestOptions,
  ): Promise<models.RelayAutoConfigRep> {
    return unwrapAsync(relayProxyConfigurationsGetRelayProxyConfig(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Relay Proxy config by ID
   *
   * @remarks
   * Delete a Relay Proxy config.
   */
  async deleteRelayAutoConfig(
    request: operations.DeleteRelayAutoConfigRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(relayProxyConfigurationsDeleteRelayAutoConfig(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a Relay Proxy config
   *
   * @remarks
   * Update a Relay Proxy configuration. Updating a configuration uses a [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) or [JSON merge patch](https://datatracker.ietf.org/doc/html/rfc7386) representation of the desired changes. To learn more, read [Updates](https://launchdarkly.com/docs/api#updates).
   */
  async patchRelayAutoConfig(
    request: operations.PatchRelayAutoConfigRequest,
    options?: RequestOptions,
  ): Promise<models.RelayAutoConfigRep> {
    return unwrapAsync(relayProxyConfigurationsPatchRelayAutoConfig(
      this,
      request,
      options,
    ));
  }

  /**
   * Reset Relay Proxy configuration key
   *
   * @remarks
   * Reset a Relay Proxy configuration's secret key with an optional expiry time for the old key.
   */
  async resetRelayAutoConfig(
    request: operations.ResetRelayAutoConfigRequest,
    options?: RequestOptions,
  ): Promise<models.RelayAutoConfigRep> {
    return unwrapAsync(relayProxyConfigurationsResetRelayAutoConfig(
      this,
      request,
      options,
    ));
  }
}
