/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { auditLogGetEntry } from "../funcs/auditLogGetEntry.js";
import { auditLogListEntries } from "../funcs/auditLogListEntries.js";
import { auditLogSearchEntries } from "../funcs/auditLogSearchEntries.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AuditLog extends ClientSDK {
  /**
   * List audit log entries
   *
   * @remarks
   * Get a list of all audit log entries. The query parameters let you restrict the results that return by date ranges, resource specifiers, or a full-text search query.
   *
   * LaunchDarkly uses a resource specifier syntax to name resources or collections of resources. To learn more, read [About the resource specifier syntax](https://launchdarkly.com/docs/home/account/role-resources#about-the-resource-specifier-syntax).
   */
  async listEntries(
    request: operations.GetAuditLogEntriesRequest,
    options?: RequestOptions,
  ): Promise<components.AuditLogEntryListingRepCollection> {
    return unwrapAsync(auditLogListEntries(
      this,
      request,
      options,
    ));
  }

  /**
   * Search audit log entries
   *
   * @remarks
   * Search your audit log entries. The query parameters let you restrict the results that return by date ranges, or a full-text search query. The request body lets you restrict the results that return by resource specifiers.
   *
   * LaunchDarkly uses a resource specifier syntax to name resources or collections of resources. To learn more, read [About the resource specifier syntax](https://launchdarkly.com/docs/home/account/role-resources#about-the-resource-specifier-syntax).
   */
  async searchEntries(
    request: operations.PostAuditLogEntriesRequest,
    options?: RequestOptions,
  ): Promise<components.AuditLogEntryListingRepCollection> {
    return unwrapAsync(auditLogSearchEntries(
      this,
      request,
      options,
    ));
  }

  /**
   * Get audit log entry
   *
   * @remarks
   * Fetch a detailed audit log entry representation. The detailed representation includes several fields that are not present in the summary representation, including:
   *
   * - `delta`: the JSON patch body that was used in the request to update the entity
   * - `previousVersion`: a JSON representation of the previous version of the entity
   * - `currentVersion`: a JSON representation of the current version of the entity
   */
  async getEntry(
    request: operations.GetAuditLogEntryRequest,
    options?: RequestOptions,
  ): Promise<components.AuditLogEntryRep> {
    return unwrapAsync(auditLogGetEntry(
      this,
      request,
      options,
    ));
  }
}
