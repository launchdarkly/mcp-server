/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { contextSettingsPutContextFlagSetting } from "../funcs/contextSettingsPutContextFlagSetting.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ContextSettings extends ClientSDK {
  /**
   * Update flag settings for context
   *
   * @remarks
   *
   * Enable or disable a feature flag for a context based on its context kind and key.
   *
   * Omitting the `setting` attribute from the request body, or including a `setting` of `null`, erases the current setting for a context.
   *
   * If you previously patched the flag, and the patch included the context's data, LaunchDarkly continues to use that data. If LaunchDarkly has never encountered the combination of the context's key and kind before, it calculates the flag values based on the context kind and key.
   */
  async putContextFlagSetting(
    request: operations.PutContextFlagSettingRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(contextSettingsPutContextFlagSetting(
      this,
      request,
      options,
    ));
  }
}
