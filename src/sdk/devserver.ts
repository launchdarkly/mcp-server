/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { devServerDeleteOverride } from "../funcs/devServerDeleteOverride.js";
import { devServerDeleteOverrides } from "../funcs/devServerDeleteOverrides.js";
import { devServerUpdateOverride } from "../funcs/devServerUpdateOverride.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class DevServer extends ClientSDK {
  /**
   * remove all overrides for the given project
   */
  async deleteOverrides(
    request: operations.DeleteOverridesRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(devServerDeleteOverrides(
      this,
      request,
      options,
    ));
  }

  /**
   * override flag value with value provided in the body
   */
  async updateOverride(
    request: operations.PutOverrideFlagRequest,
    options?: RequestOptions,
  ): Promise<components.FlagOverride> {
    return unwrapAsync(devServerUpdateOverride(
      this,
      request,
      options,
    ));
  }

  /**
   * remove override for flag
   */
  async deleteOverride(
    request: operations.DeleteFlagOverrideRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(devServerDeleteOverride(
      this,
      request,
      options,
    ));
  }
}
